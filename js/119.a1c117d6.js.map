{"version":3,"file":"js/119.a1c117d6.js","mappings":"oeA2CI,MAAMA,GAAQC,EAAAA,EAAAA,KACVC,GAASC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,MACfC,GAAOC,EAAAA,EAAAA,IAAO,QAoBlBC,eAAeC,UAELC,MAAM,+BAA+BV,EAAMW,yBAA0B,CACvEC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,QAASjB,EAAMkB,SACfC,KAAM,YAAYnB,EAAMoB,qBAG/BC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAEFpB,EAAaqB,OAAO,CAChBC,MAAO,UACPC,MAAO,IACPC,SAAU,IACVC,MAAOvB,EAAKwB,OAAOC,EAAE,+CACrBC,KAAM,WACR,IAELC,OAAMC,IACHC,QAAQD,MAAMA,GAGd9B,EAAaqB,OAAO,CAChBC,MAAO,UACPC,MAAO,IACPC,SAAU,IACVC,MAAOvB,EAAKwB,OAAOC,EAAE,oCACrBC,KAAM,SACR,IAINhC,EAAMoC,YAAc,KAGpBlC,EAAOmC,KAAK,WAChB,CAIA,SAASC,IAELtC,EAAMoC,YAAc,KAGpBhC,EAAaqB,OAAO,CAChBC,MAAO,UACPC,MAAO,IACPC,SAAU,IACVC,MAAOvB,EAAKwB,OAAOC,EAAE,8CACrBC,KAAM,YAIV9B,EAAOmC,KAAK,WAChB,C,OA7EAE,EAAAA,EAAAA,KAAU,KACN,GAAIC,OAAOC,UAAYD,OAAOC,SAASC,OAAQ,CAE3C,IAAIC,EAAgBC,mBAAmBH,SAASC,OAAOG,UAGnDC,EAAa/B,KAAKgC,MAAM,IAAIC,gBAAgBL,GAAeM,IAAI,SAG/DH,IACA9C,EAAMkB,SAAW4B,EAAWI,GAEpC,K,khBCvDR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://cosmos-telegram-signer/./src/views/getPack/GetAddress.vue","webpack://cosmos-telegram-signer/./src/views/getPack/GetAddress.vue?861a"],"sourcesContent":["<template>\n    <!-- JetPack - Get address page -->\n    <section class=\"page_container get_address\">\n        <div class=\"cont\">\n            <!-- JetPack - Get address page title -->\n            <div class=\"page_title\">\n                {{ $t('message.jp_get_address_title') }}\n            </div>\n\n            <!-- JetPack - Get address page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- JetPack - Get address desc -->\n                    <div class=\"desc\">\n                        {{ $t('message.jp_get_address_desc') }}\n                    </div>\n\n                    <!-- Buttons -->\n                    <div class=\"btns\">\n                        <!-- Approve button -->\n                        <button class=\"btn\" @click=\"approveRequest()\">\n                            <span>{{ $t('message.btn_approve') }}</span>\n                        </button>\n\n                        <!-- Reject button -->\n                        <button class=\"btn purple_btn\" @click=\"rejectRequest()\">\n                            <span>{{ $t('message.btn_reject') }}</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, onMounted } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useRouter } from 'vue-router'\n    import { useNotification } from '@kyvg/vue3-notification'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        notification = useNotification(),\n        i18n = inject('i18n')\n\n\n    onMounted(() => {\n        if (window.Telegram && window.Telegram.WebApp) {\n            // Decode data\n            let decodedString = decodeURIComponent(Telegram.WebApp.initData)\n\n            // Get user params\n            let userParams = JSON.parse(new URLSearchParams(decodedString).get('user'))\n\n            // Set data\n            if (userParams) {\n                store.tgChatId = userParams.id\n            }\n        }\n    })\n\n\n    // Approve request\n    async function approveRequest() {\n        // Send response\n        await fetch(`https://api.telegram.org/bot${store.tgBotToken}/sendMessage`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                chat_id: store.tgChatId,\n                text: `Address: ${store.currentAddress}`\n            })\n        })\n        .then(response => response.json())\n        .then(data => {\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: 1000,\n                title: i18n.global.t('message.notification_jp_get_address_success'),\n                type: 'default'\n            })\n        })\n        .catch(error => {\n            console.error(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: 1000,\n                title: i18n.global.t('message.notification_error_title'),\n                type: 'error'\n            })\n        })\n\n        // Reset start params\n        store.startParams = null\n\n        // Redirect\n        router.push('/account')\n    }\n\n\n    // Reject request\n    function rejectRequest() {\n        // Reset start params\n        store.startParams = null\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            speed: 200,\n            duration: 1000,\n            title: i18n.global.t('message.notification_jp_get_address_reject'),\n            type: 'default'\n        })\n\n        // Redirect\n        router.push('/account')\n    }\n</script>\n\n\n<style scoped>\n    .desc\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 24px;\n    }\n</style>","import script from \"./GetAddress.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GetAddress.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GetAddress.vue?vue&type=style&index=0&id=89fae882&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-89fae882\"]])\n\nexport default __exports__"],"names":["store","useGlobalStore","router","useRouter","notification","useNotification","i18n","inject","async","approveRequest","fetch","tgBotToken","method","headers","body","JSON","stringify","chat_id","tgChatId","text","currentAddress","then","response","json","data","notify","group","speed","duration","title","global","t","type","catch","error","console","startParams","push","rejectRequest","onMounted","window","Telegram","WebApp","decodedString","decodeURIComponent","initData","userParams","parse","URLSearchParams","get","id","__exports__"],"sourceRoot":""}