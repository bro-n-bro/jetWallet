{"version":3,"file":"js/245.484fa9ce.js","mappings":"+oBAiCI,MAAMA,GAAUC,EAAAA,EAAAA,IAAO,W,orBC3B3B,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,4lBCoGI,MAAMC,GAAQC,EAAAA,EAAAA,KACVC,GAASC,EAAAA,EAAAA,MACTN,GAAUC,EAAAA,EAAAA,IAAO,WACjBM,GAAON,EAAAA,EAAAA,IAAO,QACdO,GAAeC,EAAAA,EAAAA,MACfC,GAAOC,EAAAA,EAAAA,IAAI,IACXC,GAAkBD,EAAAA,EAAAA,KAAI,GACtBE,GAAqBF,EAAAA,EAAAA,KAAI,GACzBG,GAASH,EAAAA,EAAAA,IAAI,IACbI,GAAYJ,EAAAA,EAAAA,KAAI,GA6BpBK,eAAeC,IAEXF,EAAUG,OAAQ,EAElB,IAEQf,EAAMgB,MAAMC,kBACNjB,EAAMkB,kBAIhB,IAAIC,QAAgBC,EAAAA,EAAAA,IAAOT,EAAOI,MAAOR,EAAKQ,OAG9CV,EAAagB,OAAO,CAChBC,MAAO,UACPC,OAAO,IAIXlB,EAAagB,OAAO,CAChBC,MAAO,UACPE,MAAO,IACPC,UAAW,IACXC,MAAOtB,EAAKuB,OAAOC,EAAE,yCACrBC,KAAM,UACNC,KAAM,CACFC,eAAeC,EAAAA,EAAAA,IAAgBhC,EAAMiC,oBAK7CC,EAAAA,EAAAA,IAAOf,GAASgB,OAAMC,IAClBC,QAAQC,IAAIF,GAGZG,EAAUH,EAAM,IAIpBlC,EAAOsC,KAAK,WAChB,CAAE,MAAOJ,GACLC,QAAQC,IAAIF,GAGZG,EAAUH,EACd,CACJ,CAIA,SAASG,EAAUH,GAEfxB,EAAUG,OAAQ,EAGlB,IAAI0B,EAAY,GAIVA,EADNL,EAAMM,KACYtC,EAAKuB,OAAOC,EAAE,iCAAiCQ,EAAMM,QACrDtC,EAAKuB,OAAOC,EAAE,0CAGhCvB,EAAagB,OAAO,CAChBC,MAAO,UACPC,OAAO,IAIXlB,EAAagB,OAAO,CAChBC,MAAO,UACPE,MAAO,IACPC,SAAU,IACVC,MAAO,WACPiB,KAAMF,EACNZ,KAAM,SAEd,C,OAxGAe,EAAAA,EAAAA,KAAc,KAEVlC,EAAmBK,OAASf,EAAM6C,iBAGlC7C,EAAM8C,eAAeC,SAAQC,IACzBrC,EAAOI,MAAMyB,KAAK,CACdS,QAAS,0DACTlC,MAAOmC,EAAAA,2BAA2BC,YAAY,CAC1CC,iBAAkBpD,EAAMqD,eACxBC,iBAAkBN,EAAQO,eAAeC,oBAE/C,GACJ,KAINC,EAAAA,EAAAA,KAAY,KAER5D,EAAQ6D,IAAI,QACZ7D,EAAQ6D,IAAI,uBACZ7D,EAAQ6D,IAAI,yBAAyB,IAuFzC7D,EAAQ8D,GAAG,QAAQ,KAEflD,EAAgBM,OAAQ,EAGxBD,GAAO,IAKXjB,EAAQ8D,GAAG,uBAAuB,KAE9BlD,EAAgBM,OAAQ,CAAK,IAKjClB,EAAQ8D,GAAG,0BAA0B,KAEjCjD,EAAmBK,OAAQ,CAAK,I,suECjPxC,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q","sources":["webpack://cosmos-telegram-signer/./src/components/modal/TxWarning.vue","webpack://cosmos-telegram-signer/./src/components/modal/TxWarning.vue?385e","webpack://cosmos-telegram-signer/./src/views/ClaimConfirmPage.vue","webpack://cosmos-telegram-signer/./src/views/ClaimConfirmPage.vue?ee8e"],"sourcesContent":["<template>\n    <section class=\"modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('close_tx_warning_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"modal_title\">\n                    {{ $t('message.tx_warning_title') }}\n                </div>\n\n                <div class=\"desc\">\n                    {{ $t('message.tx_warning_desc') }}\n                </div>\n\n                <div class=\"btns\">\n                    <button class=\"btn\" @click.prevent=\"emitter.emit('close_tx_warning_modal')\">\n                        <span>{{ $t('message.btn_accept') }}</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"overlay\" @click.prevent=\"emitter.emit('close_tx_warning_modal')\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n\n\n    const emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .modal_content\n    {\n        min-height: 0;\n    }\n\n\n    .modal_content .data\n    {\n        width: 220px;\n        max-width: 100%;\n        margin: 0 auto 10px;\n\n        border-radius: 18px;\n    }\n\n\n    .modal_content .close_btn\n    {\n        top: 0;\n        right: 0;\n    }\n\n\n    .modal_title\n    {\n        text-align: center;\n    }\n\n\n    .desc\n    {\n        margin-top: 12px;\n    }\n\n\n    .btns\n    {\n        padding-top: 64px;\n    }\n</style>","import script from \"./TxWarning.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TxWarning.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TxWarning.vue?vue&type=style&index=0&id=3cdc3897&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3cdc3897\"]])\n\nexport default __exports__","<template>\n    <section class=\"page_container inner_page_container claim_confirm\">\n        <Loader v-if=\"isProcess\" />\n\n        <div class=\"cont\">\n            <div class=\"head\">\n                <router-link to=\"/account?activeSlide=1\" class=\"back_btn\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </router-link>\n\n                <div class=\"page_title\">\n                    {{ $t('message.claim_rewards_page_title') }}\n                </div>\n            </div>\n\n\n            <div class=\"data\">\n                <div class=\"field_label\">\n                    {{ $t('message.details_label') }}\n\n                    <!-- <button class=\"json_btn\">\n                        <span>{{ $t('message.btn_json') }}</span>\n                    </button> -->\n                </div>\n\n                <div class=\"info_wrap\">\n                    <div class=\"info\">\n                        <div class=\"logo\">\n                            <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n                        </div>\n\n                        <div class=\"title\">\n                            {{ $t('message.claim_rewards_title') }}\n                        </div>\n\n                        <div class=\"amount\">\n                            <div class=\"val\">\n                                ~ {{ formatTokenAmount(store.rewardsBalances[0].amount, store.rewardsBalances[0].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 5 }).replace(',', '.') }}\n\n                                {{ store.rewardsBalances[0].token_info.symbol }}\n                            </div>\n\n                            <div class=\"cost\">\n                                ~ {{ formatTokenCost(calcRewardsBalancesCost('USD'), 'USD') }}$\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"not_enought\" v-if=\"!store.TxFee.isEnough\">\n                    {{ $t('message.claim_rewards_not_enought', { denom: store.TxFee.currentSymbol }) }}\n                </div>\n            </div>\n\n\n            <div class=\"memo\">\n                <div class=\"field_label\">\n                    {{ $t('message.memo_label') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input big\" v-model=\"memo\"\n                        @focus=\"emitter.emit('show_keyboard')\"\n                        @blur=\"emitter.emit('hide_keyboard')\">\n                </div>\n            </div>\n\n\n            <!-- Tx fee -->\n            <TxFee v-if=\"store.isBalancesGot\" :msgAny />\n\n\n            <div class=\"btns\">\n                <button v-if=\"!store.networks[store.currentNetwork].currentTxHash\" class=\"btn\" @click.prevent=\"showSignTxModal = true\">\n                    <span>{{ $t('message.btn_approve') }}</span>\n                </button>\n\n                <button v-else class=\"btn waiting_btn\" @click.prevent=\"emitter.emit('show_pending_notification')\">\n                    <span>{{ $t('message.btn_waiting_tx') }}</span>\n                </button>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Sign transaction modal -->\n    <SignTxModal v-if=\"showSignTxModal\"/>\n\n    <!-- Tx warning modal -->\n    <TxWarningModal v-if=\"showTxWarningModal\"/>\n</template>\n\n\n<script setup>\n    import { ref, inject, onUnmounted, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useRouter } from 'vue-router'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { getNetworkLogo, signTx, sendTx, calcRewardsBalancesCost, formatTokenCost, formatTokenAmount, getExplorerLink } from '@/utils'\n    import { MsgWithdrawDelegatorReward } from 'cosmjs-types/cosmos/distribution/v1beta1/tx'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import TxFee from '@/components/TxFee.vue'\n    import SignTxModal from '@/components/modal/SignTx.vue'\n    import TxWarningModal from '@/components/modal/TxWarning.vue'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        emitter = inject('emitter'),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        memo = ref(''),\n        showSignTxModal = ref(false),\n        showTxWarningModal = ref(false),\n        msgAny = ref([]),\n        isProcess = ref(false)\n\n\n    onBeforeMount(() => {\n        // Tx warning modal\n        showTxWarningModal.value = !store.hasNativeToken()\n\n        // Set messeges\n        store.stakedBalances.forEach(balance => {\n            msgAny.value.push({\n                typeUrl: '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward',\n                value: MsgWithdrawDelegatorReward.fromPartial({\n                    delegatorAddress: store.currentAddress,\n                    validatorAddress: balance.validator_info.operator_address\n                })\n            })\n        })\n    })\n\n\n    onUnmounted(() => {\n        // Unlisten events\n        emitter.off('auth')\n        emitter.off('close_sign_tx_modal')\n        emitter.off('close_tx_warning_modal')\n    })\n\n\n    // Claim tokens\n    async function claim() {\n        // Set process status\n        isProcess.value = true\n\n        try {\n            // Update TxFee info\n            if (store.TxFee.isRemember) {\n                await store.updateTxFeeInfo()\n            }\n\n            // Sign Tx\n            let txBytes = await signTx(msgAny.value, memo.value)\n\n            // Clean notifications\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: -100,\n                title: i18n.global.t('message.notification_tx_pending_title'),\n                type: 'pending',\n                data: {\n                    explorer_link: getExplorerLink(store.currentNetwork)\n                }\n            })\n\n            // Send Tx\n            sendTx(txBytes).catch(error => {\n                console.log(error)\n\n                // Show error\n                showError(error)\n            })\n\n            // Redirect\n            router.push('/account')\n        } catch (error) {\n            console.log(error)\n\n            // Show error\n            showError(error)\n        }\n    }\n\n\n    // Show error message\n    function showError(error) {\n        // Set process status\n        isProcess.value = false\n\n        // Get error code\n        let errorText = ''\n\n        // Get error title\n        error.code\n            ? errorText = i18n.global.t(`message.notification_tx_error_${error.code}`)\n            : errorText = i18n.global.t('message.notification_tx_error_rejected')\n\n        // Clean notifications\n        notification.notify({\n            group: 'default',\n            clean: true\n        })\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            speed: 200,\n            duration: 6000,\n            title: 'Tx error',\n            text: errorText,\n            type: 'error'\n        })\n    }\n\n\n    // Event \"auth\"\n    emitter.on('auth', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n\n        // Claim tokens\n        claim()\n    })\n\n\n    // Event \"close_sign_tx_modal\"\n    emitter.on('close_sign_tx_modal', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n    })\n\n\n    // Event \"close_tx_warning_modal\"\n    emitter.on('close_tx_warning_modal', () => {\n        // Hide Tx warning modal\n        showTxWarningModal.value = false\n    })\n</script>\n\n\n<style scoped>\n    .claim_confirm\n    {\n        background: #170232;\n    }\n\n\n    .memo\n    {\n        margin-top: 12px;\n        margin-bottom: auto;\n    }\n\n\n    .info_wrap\n    {\n        padding: 1px;\n\n        border-radius: 10px;\n        background: linear-gradient(to bottom,  #5d33cd 0%,#200750 100%);\n    }\n\n\n    .info\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        padding: 8px 7px;\n\n        border-radius: 9px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .info .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 38px;\n        height: 38px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n\n    .info .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n    }\n\n\n    .info .title\n    {\n        font-size: 16px;\n        font-weight: 500;\n    }\n\n\n    .info .amount\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .info .amount .cost\n    {\n        font-size: 16px;\n        font-weight: 400;\n\n        color: #836b9e;\n    }\n\n\n    .not_enought\n    {\n        padding: 5px 10px;\n\n        text-decoration: underline;\n\n        color: #ffe352;\n\n        text-decoration-thickness: 1px;\n    }\n\n\n    .field\n    {\n        padding: 1px;\n\n        border-radius: 10px;\n        background: linear-gradient(to bottom,  #5d33ce 0%,#200750 100%);\n    }\n\n\n    .input\n    {\n        border-radius: 9px;\n        background: #06000e;\n    }\n\n\n    .btns\n    {\n        margin-top: 0;\n        padding: 0;\n    }\n</style>","import script from \"./ClaimConfirmPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClaimConfirmPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClaimConfirmPage.vue?vue&type=style&index=0&id=f622b9c6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f622b9c6\"]])\n\nexport default __exports__"],"names":["emitter","inject","__exports__","store","useGlobalStore","router","useRouter","i18n","notification","useNotification","memo","ref","showSignTxModal","showTxWarningModal","msgAny","isProcess","async","claim","value","TxFee","isRemember","updateTxFeeInfo","txBytes","signTx","notify","group","clean","speed","duration","title","global","t","type","data","explorer_link","getExplorerLink","currentNetwork","sendTx","catch","error","console","log","showError","push","errorText","code","text","onBeforeMount","hasNativeToken","stakedBalances","forEach","balance","typeUrl","MsgWithdrawDelegatorReward","fromPartial","delegatorAddress","currentAddress","validatorAddress","validator_info","operator_address","onUnmounted","off","on"],"sourceRoot":""}