(function(){var e={60238:function(e,t,n){"use strict";n.d(t,{A:function(){return o}});var a=n(85384),r={en:{message:{page_title:"Bro wallet",create_wallet_title:"New Recovery Phrase",create_wallet_confirm_title:"Verify Your Recovery Phrase",create_pin_title:"Name your wallet",wallet_created_title:"Wallet created!",wallet_title:"Wallet page",import_wallet_title:"Import Existing Wallet",create_wallet_agree_label1:"Do not share your recovery phrase with ANYONE.",create_wallet_agree_label2:"Back up the phrase safely.",create_wallet_agree_checkbox1:"I understand that I have access to my wallet solely because I possess the recovery phrase. If this phrase falls into someone else's hands, I will lose my funds.",create_wallet_agree_checkbox2:"I also understand that if I lose my recovery phrase, I will lose all the funds in this wallet.",confirm_label:"Word",confirm_exp:"Fill out the words according to their numbers to verify that you have stored your phrase safely.",create_pin_wallet_name_label:"Wallet name:",create_pin_create_pin_label:"Create pin:",create_pin_confirm_pin_label:"Repeat pin:",create_pin_wallet_name_placeholder:"Name",auth_title:"Welcome!",auth_enter_pin_label:"Enter pin:",auth_error_warning:"You have {count} attempts left",auth_error_title:"Incorrect pin!",auth_error_desc:"The PIN code was entered incorrectly the maximum number of times. For security reasons, the current wallet will be deleted. You can restore it the next time you log into the app using your saved seed phrase or private key",mnemonic_tab1:"12 words",mnemonic_tab2:"24 words",mnemonic_tab3:"Private Key",import_wallet_exp:"Enter your recovery phrase here to restore your wallet.<br> Or click on any blank and paste the entire phrase.",import_wallet_exp2:"Enter your private key here to restore your wallet.<br> Or click on any blank and paste the entire phrase.",current_balance_title:"Current balance",stacked_balance_title:"Total Staked",available_tokens_title:"Available Balance",staked_tokens_title:"Staked Balance",staked_tokens_validator_label:"By:",claim_rewards_page_title:"Claimable Staking Reward",claim_rewards_title:"Claim Rewards",claim_rewards_not_enought:"You donâ€™t have enough {denom} to pay Fee",calim_confirm_title:"Confirm transction",stake_page_title:"Stake",stake_confirm_page_title:"Confirm",stake_current_staked_label:"Token:",stake_APR_label:"APR",stake_validator_label:"Select validator:",stake_amount_label:"Amount:",stake_unbonding_period_label:"Unbonding Period:",stake_available_label:"Available",stake_staked_label:"Total Staked",stake_unbonding_time_unit:"days",stake_validator_placeholder:"Choose your validator",stake_confirm_voting_power:"of voting power",stake_confirm_token_label:"Token:",stake_confirm_amount_label:"Amount:",stake_confirm_daily_profit_label:"Daily profit:",stake_confirm_commission_label:"Commission:",stake_confirm_unbonding_period_label:"Unbonding Period:",stake_confirm_fee_label:"Fee:",unstake_page_title:"Unstake",unstake_confirm_page_title:"Confirm",unstaking_tokens_title:"Unstaking process",unstaking_tokens_label:"Unstaking in progress:",unstaking_tokens_count_label:"Unstakings:",unstaking_tokens_finish_label:"Available in:",unstaking_tokens_finish_days:"Days",unstaking_tokens_finish_day:"Day",send_page_title:"Send",send_amount_label:"Amount:",send_address_label:"Address:",receive_page_title:"Receive",receive_amount_title:"Choose your amount",receive_amount_label:"Amount:",redelegate_page_title:"Switch validator",redelegate_confirm_page_title:"Confirm",redelegate_validator_from_label:"From:",redelegate_validator_to_label:"To:",redelegate_confirm_token_label:"Token:",redelegate_confirm_amount_label:"Amount:",tx_warning_title:"Warning",tx_warning_desc:"You can still try to make the transaction, but since you don't have enough tokens for gas, it may fail, or it might still go through",validators_page_title:"Validators:",validatoes_staked_label:"Staked:",validatoes_available_label:"Available:",stats_title:"Stats",stats_token_label:"Token:",stats_available_label:"Available:",stats_staked_label:"Staked:",stats_personal_apr_label:"Personal APR:",stats_daily_profit_label:"Est. daily profit:",redelegations_title:"Active redelegations",redelegations_finish_days:"Days",redelegations_finish_day:"Day",tokens_page_title:"Tokens:",tx_fee_label:"Tx Fee:",tx_fee_modal_title:"Fee Options",tx_fee_fee_tier_label:"Fee tier",tx_fee_fee_token_label:"Fee Token:",tx_fee_gas_adjustment_label:"Gas Adjustment:",tx_fee_gas_amount_label:"Gas Amount",tx_fee_remember_label:"Remember my choise",tx_fee_auto_label:"Auto",tx_fee_low_label:"Low",tx_fee_average_label:"Average",tx_fee_high_label:"High",details_label:"Details:",memo_label:"Memo:",sign_tx_title:"Sign transaction",sign_tx_error_title:"Incorrect pin!",sign_tx_error_desc:"Idi nahuj user, ti zablokirovan v blockchaine, prishli sms 4toby razblokirovat Idi nahuj user, ti zablokirovan v blockchaine, prishli sms 4toby razblokirovat Idi nahuj user, ti zablokirovan v blockchaine, prishli sms 4toby razblokirovat",search_placeholder:"Search...",search_empty:"Token not found...",search_empty_validator:"Validator not found...",notification_copied_title:"Copied to clipboard",notification_tx_pending_title:"Transaction is pending",notification_tx_success_title:"Success",notification_tx_error_title:"Error:",notification_error_title:"Something went wrong, try again later",notification_error_invalid_paste_title:"Incorrect address in the clipboard",notification_explorer_link:"Explorer",btn_create_wallet:"Create new wallet",btn_import_wallet:"Import wallet",btn_import_existing_wallet:"Import an existing wallet",btn_show:"Show",btn_next:"Next",btn_copy:"Copy to clipboard",btn_copy_small:"Copy",btn_join:"Join",btn_biometric:"Turn on biometric security",btn_biometric2:"Use biometric",btn_login:"Log in",btn_send:"Send",btn_receive:"Receive",btn_stake:"Earn",btn_confirm_stake:"Confirm Staking",btn_confirm_unstake:"Confirm Unstake",btn_confirm_redelegate:"Confirm",btn_unstake:"Unstake",btn_redelegate:"Switch validator",btn_claim:"Claim",btn_approve:"Approve",btn_json:"View JSON",btn_close:"Close",btn_sign:"Sign",btn_understood:"Understood",btn_waiting_tx:"Waiting tx",btn_MAX:"MAX",btn_cancel:"Cancel",btn_amount:"Amount",btn_share:"Share",btn_accept:"Accept",btn_paste:"Paste",notification_tx_error_2:"tx parse error",notification_tx_error_3:"invalid sequence",notification_tx_error_4:"unauthorized",notification_tx_error_5:"insufficient funds",notification_tx_error_6:"unknown request",notification_tx_error_7:"invalid address",notification_tx_error_8:"invalid pubkey",notification_tx_error_9:"unknown address",notification_tx_error_10:"invalid coins",notification_tx_error_11:"Broadcasting transaction failed: out of gas try again and increase gas amount",notification_tx_error_12:"memo too large",notification_tx_error_13:"insufficient fee",notification_tx_error_14:"maximum number of signatures exceeded",notification_tx_error_15:"no signatures supplied",notification_tx_error_16:"failed to marshal JSON bytes",notification_tx_error_17:"failed to unmarshal JSON bytes",notification_tx_error_18:"invalid request",notification_tx_error_19:"tx already in mempool",notification_tx_error_20:"mempool is full",notification_tx_error_21:"tx too large",notification_tx_error_22:"key not found",notification_tx_error_23:"invalid account password",notification_tx_error_24:"tx intended signer does not match the given signer",notification_tx_error_25:"invalid gas adjustment",notification_tx_error_26:"invalid height",notification_tx_error_27:"invalid version",notification_tx_error_28:"invalid chain-id",notification_tx_error_29:"invalid type",notification_tx_error_30:"tx timeout height",notification_tx_error_31:"unknown extension options",notification_tx_error_32:"incorrect account sequence",notification_tx_error_33:"failed packing protobuf message to Any",notification_tx_error_34:"failed unpacking protobuf message from Any",notification_tx_error_35:"internal logic error",notification_tx_error_36:"conflict",notification_tx_error_37:"feature not supported",notification_tx_error_38:"not found",notification_tx_error_39:"Internal IO error",notification_tx_error_40:"error in app.toml",notification_tx_error_41:"invalid gas limit",notification_tx_error_rejected:"The transaction has been rejected"}}};const i=(0,a.hU)({locale:"en",fallbackLocale:"en",messages:r});var o=i},95578:function(e,t,n){"use strict";var a=n(45130),r=n(93367),i=(n(44114),n(56768)),o=n(24232),s=n(90144),l=n(24113),c=n(96011),u=n(67278),d=n(81387),_=n(38326);const m=l+"#ic_notification_copied",h=l+"#ic_notification_success",p=l+"#ic_notification_error",f={key:0,class:"icon"},g=(0,i.Lk)("svg",null,[(0,i.Lk)("use",{"xlink:href":m})],-1),b=[g],k={key:1,class:"icon"},w=(0,i.Lk)("div",{class:"loader"},null,-1),y=[w],v={key:2,class:"icon"},x=(0,i.Lk)("svg",null,[(0,i.Lk)("use",{"xlink:href":h})],-1),T=[x],C={key:3,class:"icon"},A=(0,i.Lk)("svg",null,[(0,i.Lk)("use",{"xlink:href":p})],-1),N=[A],S={class:"title"},B={key:0,class:"explorer"},F=["href"];var I={__name:"App",setup(e){const t=(0,c.o)(),n=(0,i.WQ)("i18n"),a=(0,d.rd)(),r=(0,d.lq)(),l=(0,i.WQ)("emitter"),m=(0,_.K7Q)(),h=(0,i.EW)((()=>r.meta.layout||"default-layout")),p=(0,u.hN)(),g=(0,s.KR)(null),w={enter:{translateY:"0%"},leave:{translateY:"-100%"}};function x(e){if(t.currentNetwork!==e[1]){a.push({path:"/account"}),t.setCurrentNetwork(e[1]);const n=(0,i.wB)((0,i.EW)((()=>t.isInitialized)),(()=>{t.isInitialized&&"send"==e[0]&&(n(),a.push({path:"/account/send",query:{denom:t.networks[t.currentNetwork].denom,address:e[2],amount:e[3]}}))}))}else"send"==e[0]&&a.push({path:"/account/send",query:{denom:t.networks[t.currentNetwork].denom,address:e[2],amount:e[3]}})}function A(e){e.data.isCollapsible&&(g.value=setTimeout((()=>{let e=document.querySelector(".notification.collapsible");e&&e.classList.add("small"),g.value=null}),t.notificationsCollapsingDelay))}function I(){g.value=null}return(0,i.KC)((()=>{m.value=n.global.t("message.page_title"),t.query=r.query})),(0,i.sV)((async()=>{window.Telegram&&window.Telegram.WebApp&&(await Telegram.WebApp.ready(),Telegram.WebApp.expand(),console.log(Telegram.WebApp),t.start_param=Telegram.WebApp.start_param,t.initData=Telegram.WebApp.initData,Telegram.WebApp.setHeaderColor("#5b3895"),Telegram.WebApp.MainButton.showProgress(!0),Telegram.WebApp.disableVerticalSwipes(),Telegram.WebApp.BiometricManager.init(),Telegram.WebApp.onEvent("qrTextReceived",(e=>{Telegram.WebApp.closeScanQrPopup();let t=e.data.split("|");x(t)})))})),(0,i.wB)((0,i.EW)((()=>t.currentNetwork)),(async()=>{(t.isInitialized||t.forcedUnlock)&&(p.notify({group:"default",clean:!0}),await t.initApp())})),l.on("show_collapsible_notification",(()=>{if(!g.value){let e=document.querySelector(".notification.collapsible");e&&(e.classList.remove("small"),g.value=setTimeout((()=>{e&&e.classList.add("small"),g.value=null}),t.notificationsCollapsingDelay))}})),(e,n)=>{const a=(0,i.g2)("notifications");return(0,i.uX)(),(0,i.CE)(i.FK,null,[(0,i.Lk)("pre",null,(0,o.v_)((0,s.R1)(t).start_param),1),(0,i.Lk)("pre",null,(0,o.v_)((0,s.R1)(r)),1),(0,i.Lk)("pre",null,(0,o.v_)((0,s.R1)(t).initData),1),((0,i.uX)(),(0,i.Wv)((0,i.$y)(h.value))),(0,i.bF)(a,{position:"top left",group:"default",width:"100%","animation-type":"velocity",animation:w,onStart:n[0]||(n[0]=e=>A(e)),onDestroy:n[1]||(n[1]=e=>I())},{body:(0,i.k6)((t=>[(0,i.Lk)("div",{class:(0,o.C4)(["notification",{pending:"pending"==t.item.type,success:"success"==t.item.type,error:"error"==t.item.type,collapsible:t.item.data.isCollapsible}])},["copied"==t.item.type?((0,i.uX)(),(0,i.CE)("div",f,b)):(0,i.Q3)("",!0),"pending"==t.item.type?((0,i.uX)(),(0,i.CE)("div",k,y)):(0,i.Q3)("",!0),"success"==t.item.type?((0,i.uX)(),(0,i.CE)("div",v,T)):(0,i.Q3)("",!0),"error"==t.item.type?((0,i.uX)(),(0,i.CE)("div",C,N)):(0,i.Q3)("",!0),(0,i.Lk)("div",null,[(0,i.Lk)("div",S,(0,o.v_)(t.item.title)+" "+(0,o.v_)(t.item.text),1),t.item.data.explorer_link?((0,i.uX)(),(0,i.CE)("div",B,[(0,i.Lk)("a",{href:t.item.data.explorer_link,target:"_blank",rel:"noopener nofollow"},(0,o.v_)(e.$t("message.notification_explorer_link")),9,F)])):(0,i.Q3)("",!0)])],2)])),_:1})],64)}}};const E=I;var j=E,D=n(36571);const L={class:"main"};function R(e,t){const n=(0,i.g2)("router-view");return(0,i.uX)(),(0,i.CE)("div",L,[(0,i.bF)(n,null,{default:(0,i.k6)((({Component:e})=>[((0,i.uX)(),(0,i.Wv)((0,i.$y)(e)))])),_:1})])}var U=n(71241);const P={},O=(0,U.A)(P,[["render",R]]);var $=O;const G={class:"main"};var W={__name:"Account",setup(e){const t=(0,c.o)(),n=(0,i.WQ)("emitter"),a=(0,s.KR)(0),r=(0,s.KR)(!1),o=70,l=(0,s.KR)(!1);function u(e){0===window.scrollY&&(a.value=e.touches[0].pageY,r.value=!0,l.value=!1)}function d(e){if(r.value&&(t.networks[t.currentNetwork].currentTxHash||t.forcedUnlock))return void n.emit("show_collapsible_notification");if(!r.value||l.value)return;let i=e.touches[0].pageY,s=i-a.value;if(s>0&&s>=o){if(e.preventDefault(),e.stopPropagation(),t.isAnyModalOpen)return n.emit("close_any_modal"),void(r.value=!1);l.value=!0;let a=document.querySelector(".account_page");a&&(a.classList.add("updating"),setTimeout((()=>a.classList.remove("updating")),500),t.updateAllBalances())}}function _(e){r.value=!1}return(0,i.sV)((()=>{window.addEventListener("touchstart",u,{passive:!1}),window.addEventListener("touchmove",d,{passive:!1}),window.addEventListener("touchend",_,{passive:!1})})),(0,i.hi)((()=>{window.removeEventListener("touchstart",u,{passive:!1}),window.removeEventListener("touchmove",d,{passive:!1}),window.removeEventListener("touchend",_,{passive:!1})})),(e,t)=>{const n=(0,i.g2)("router-view");return(0,i.uX)(),(0,i.CE)("div",G,[(0,i.bF)(n,null,{default:(0,i.k6)((({Component:e})=>[((0,i.uX)(),(0,i.Wv)((0,i.$y)(e)))])),_:1})])}}};const K=W;var H=K;const M=[{path:"/",name:"MainPage",component:()=>n.e(28).then(n.bind(n,13065)),meta:{layout:$,accessDenied:["register"]}},{path:"/create_wallet",name:"CreateWallet",component:()=>n.e(820).then(n.bind(n,26820)),meta:{layout:$,accessDenied:["register"]}},{path:"/confirm_wallet",name:"CreateWalletConfirm",component:()=>n.e(377).then(n.bind(n,8920)),meta:{layout:$,accessDenied:["register"]}},{path:"/create_pin",name:"CreatePin",component:()=>n.e(791).then(n.bind(n,60791)),meta:{layout:$,accessDenied:["register"]}},{path:"/wallet_created",name:"CreatedWallet",component:()=>n.e(87).then(n.bind(n,40396)),meta:{layout:$,accessDenied:["not_register"]}},{path:"/import_wallet",name:"ImportWallet",component:()=>n.e(430).then(n.bind(n,25430)),meta:{layout:$,accessDenied:["register"]}},{path:"/auth",name:"Auth",component:()=>n.e(809).then(n.bind(n,6809)),meta:{layout:$,accessDenied:["not_register","authorized"]}},{path:"/account",name:"Account",component:()=>n.e(614).then(n.bind(n,97614)),meta:{layout:H,accessDenied:["not_authorized"]}},{path:"/account/claim_confirm",name:"ClaimConfirm",component:()=>Promise.all([n.e(190),n.e(965)]).then(n.bind(n,94754)),meta:{layout:H,accessDenied:["not_authorized"]}},{path:"/account/stake",name:"Stake",component:()=>Promise.all([n.e(190),n.e(583)]).then(n.bind(n,51504)),meta:{layout:H,accessDenied:["not_authorized"]}},{path:"/account/unstake",name:"Unstake",component:()=>Promise.all([n.e(190),n.e(634)]).then(n.bind(n,51705)),meta:{layout:H,accessDenied:["not_authorized"]}},{path:"/account/redelegate",name:"Redelegate",component:()=>Promise.all([n.e(190),n.e(468)]).then(n.bind(n,8287)),meta:{layout:H,accessDenied:["not_authorized"]}},{path:"/account/receive",name:"Receive",component:()=>n.e(818).then(n.bind(n,81818)),meta:{layout:H,accessDenied:["not_authorized"]}},{path:"/account/send",name:"Send",component:()=>Promise.all([n.e(190),n.e(254)]).then(n.bind(n,36301)),meta:{layout:H,accessDenied:["not_authorized"]}}],V=(0,d.aE)({history:(0,d.LA)(),routes:M});V.beforeResolve((async(e,t,n)=>{let a=(0,c.o)(),r=await(0,D.$R)("wallet","isRegister");e.matched.some((e=>{let t=e.meta.accessDenied;if(t.length){if(t.includes("not_register")&&!r)return n({name:"MainPage"}),!1;if(t.includes("register")&&r)return n({name:"Auth"}),!1;if(t.includes("not_authorized")&&!a.isAuthorized)return n({name:"Auth"}),!1;if(t.includes("authorized")&&a.isAuthorized)return n({name:"Account"}),!1;n()}}))}));var z=V,Y=n(60238),q=n(50595),Q=n(14400),X=n.n(Q),J=n(37359),Z=n(65838);const ee={mounted(e){e.focus()}},te={mounted(e){window.addEventListener("scroll",(function(){window.scrollY<=e.offsetHeight&&(e.style.opacity=1-window.scrollY/(.6*e.offsetHeight),e.style.transform=`translateY(-${window.scrollY/e.offsetHeight*.6*100}%)`)}))}},ne={mounted(e,t){if(t){let n=t.value.toFixed(10).split("");e.innerHTML=n.map((e=>`\n                <div class="digit">\n                    <span class="old">${e}</span>\n                </div>\n            `)).join("")}},updated(e,t){let n=t.value.toFixed(10).split(""),a=t.oldValue?.toFixed(10).split("")||[],r=Math.max(n.length,a.length),i="",o=null,s=0,l=1500,c=50;n=n.concat(Array(r-n.length).fill("")),a=a.concat(Array(r-a.length).fill("")),e.innerHTML=n.map(((e,t)=>{null===o&&e!==a[t]&&(o=t,s=r-t,l-=c*s);let n=0;null!==o&&(n=l/s/1e3),i+=`<div class="digit ${null!==o&&t>=o?"animate":""}">\n                        <span class="new" style="animation-duration: ${parseFloat(n.toFixed(2))}s; animation-delay: ${c*(t-o)/1e3}s;">\n                            ${e}\n                        </span>\n\n                        <span class="old" style="animation-duration: ${parseFloat(n.toFixed(2))}s; animation-delay: ${c*(t-o)/1e3}s;">\n                            ${a[t]}\n                        </span>\n                    </div>`})),e.innerHTML=i}},ae=(0,q.A)(),re=(0,a.Ef)(j),ie=(0,r.Ey)();re.use(ie),re.use(z),re.use(Y.A),re.use(u.Ay,{velocity:X()}),re.provide("i18n",Y.A),re.provide("emitter",ae),re.directive("focus",ee),re.directive("parallax",te),re.directive("odometer",ne),(0,J.kz)(),re.component(Z.A.name,Z.A),re.mount("#app")},96011:function(e,t,n){"use strict";n.d(t,{o:function(){return x}});n(44114);var a=n(93367),r=n(61981),i=n(68527),o=n(36571),s=n(67278),l=n(60238);const c={name:"Cosmos Hub",lcd_api:"https://lcd.cosmoshub-4.bronbro.io",rpc_api:"https://rpc.cosmoshub-4.bronbro.io",websocket_url:"wss://rpc.cosmoshub-4.bronbro.io:443/websocket",denom:"uatom",token_name:"ATOM",chain_id:"cosmoshub-4",prefix:"cosmos",explorer_link:"https://www.mintscan.io/cosmos/tx/{tx_hash}",alias:"cosmoshub",exponent:6,gas_adjustment:1.6,address_length:20,gas_amount_send:1e5,gas_amount_claim:1e6,gas_amount_stake:5e5,gas_amount_unstake:5e5,gas_amount_redelegate:1e6,is_staking_available:!0};var u=c;const d={name:"Bostrom",lcd_api:"https://lcd.bostrom.bronbro.io",rpc_api:"https://rpc.bostrom.bronbro.io",websocket_url:"wss://rpc.bostrom.bronbro.io:443/websocket",denom:"boot",token_name:"BOOT",chain_id:"bostrom",prefix:"bostrom",explorer_link:"https://ping.pub/bostrom/tx/{tx_hash}",alias:"bostrom",exponent:0,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var _=d;const m={name:"Neutron",lcd_api:"https://lcd.neutron.bronbro.io",rpc_api:"https://rpc.neutron.bronbro.io",websocket_url:"wss://rpc.neutron.bronbro.io:443/websocket",denom:"untrn",token_name:"NTRN",chain_id:"neutron-1",prefix:"neutron",explorer_link:"https://www.mintscan.io/neutron/tx/{tx_hash}",alias:"neutron",exponent:6,gas_adjustment:1.6,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!1};var h=m;const p={name:"OmniFlix",lcd_api:"https://lcd.omniflix.bronbro.io",rpc_api:"https://rpc.omniflix.bronbro.io",websocket_url:"wss://rpc.omniflix.bronbro.io:443/websocket",denom:"uflix",token_name:"FLIX",chain_id:"omniflixhub-1",prefix:"omniflix",explorer_link:"https://www.mintscan.io/omniflix/tx/{tx_hash}",alias:"omniflix",exponent:6,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var f=p;const g={name:"Dymension Hub",lcd_api:"https://lcd.dymension.bronbro.io",rpc_api:"https://rpc.dymension.bronbro.io",websocket_url:"wss://rpc.dymension.bronbro.io:443/websocket",denom:"adym",token_name:"DYM",chain_id:"dymension_1100-1",prefix:"dym",explorer_link:"https://www.mintscan.io/dymension/tx/{tx_hash}",alias:"dymension",exponent:6,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var b=g;const k={name:"Stride",lcd_api:"https://lcd.stride.bronbro.io",rpc_api:"https://rpc.stride.bronbro.io",websocket_url:"wss://rpc.stride.bronbro.io:443/websocket",denom:"ustrd",token_name:"STRD",chain_id:"stride-1",prefix:"stride",explorer_link:"https://www.mintscan.io/stride/tx/{tx_hash}",alias:"stride",exponent:6,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var w=k;const y={signingClient:{},websocket:null,currentTxHash:null,unbondingTime:0,totalBondedTokens:0,totalUnstakingTokens:0,isUnstakingCancelSupport:!1},v=(0,s.hN)(),x=(0,a.nY)("global",{state:()=>({isInitialized:!1,isBalancesGot:!1,isStakedBalancesGot:!1,isRewardsGot:!1,isUnstakingBalancesGot:!1,isAuthorized:!1,isAnyModalOpen:!1,forcedUnlock:!1,authErrorLimit:4,currentNetwork:"",currentAddress:"",currentCurrency:"",currentCurrencySymbol:"",stakeCurrentValidator:null,unstakeCurrentValidator:null,redelegateValidatorFrom:null,redelegateValidatorTo:null,prices:[],balances:[],stakedBalances:[],rewardsBalances:[],unstakingBalances:[],redelegations:[],secret:null,secretIV:null,aesKey:null,privateKey:null,notificationsCollapsingDelay:2e3,TxFee:{balance:{},currentLevel:"average",userGasAmount:0,gasAmount:0,isRemember:!1,isGasAdjustmentAuto:!0,isEnough:!1},networks:{cosmoshub:Object.assign(u,y),bostrom:Object.assign(_,y),neutron:Object.assign(h,y),omniflix:Object.assign(f,y),dymension:Object.assign(b,y),stride:Object.assign(w,y)},formatableTokens:[{token_name:"USD",format_token_name:"USDT",exponent:0},{token_name:"BTC",format_token_name:"WBTC",exponent:0}]}),actions:{async initApp(){this.isInitialized=!1,this.forcedUnlock=!1,this.currentAddress="";let e=await this.getMultipleData(["secret","secretIV","aesKey","privateKey","currentCurrency","currentNetwork","TxFeeCurrentLevel","TxFeeIsRemember"]);this.secret=e.secret,this.secretIV=e.secretIV,this.aesKey=e.aesKey,this.privateKey=e.privateKey,this.currentCurrency=e.currentCurrency,this.currentNetwork=e.currentNetwork,this.TxFee.currentLevel=e.TxFeeCurrentLevel||"average",this.TxFee.isRemember=e.TxFeeIsRemember||!1;try{let e=await(0,r.p_)();switch(this.currentAddress=e.address,this.networks[this.currentNetwork].signingClient=e.signingClient,this.currentCurrency){case"BTC":this.currentCurrencySymbol="BTC";break;case"ETH":this.currentCurrencySymbol="ETH";break;default:this.currentCurrencySymbol="$";break}await this.getCurrenciesPrice(),this.getCurrentNetworkAPR(),this.connectWebsocket(),this.networks[this.currentNetwork].isUnstakingCancelSupport=await this.isUnstakingCancelSupport(),this.networks[this.currentNetwork].is_staking_available?Promise.all([await this.getBalances(),await this.getStakedBalances()]).then((()=>{this.isInitialized=!0})):Promise.all([await this.getBalances()]).then((()=>{this.isInitialized=!0}))}catch(t){console.log(t),v.notify({group:"default",clean:!0}),v.notify({group:"default",speed:200,duration:-100,title:l.A.global.t("message.notification_error_title"),type:"error",data:{isCollapsible:!0}}),this.forcedUnlock=!0}},async getCurrenciesPrice(){try{await fetch("https://rpc.bronbro.io/price_feed_api/tokens/").then((e=>e.json())).then((e=>this.prices=e))}catch(e){console.error(e)}},async getCurrentNetworkAPR(){try{await fetch("https://rpc.bronbro.io/networks/").then((e=>e.json())).then((e=>{e.infos.find((e=>{e.denom==this.networks[this.currentNetwork].token_name.toLowerCase()&&(this.networks[this.currentNetwork].APR=e.apr)}))}))}catch(e){console.log(e)}},async getBalances(){if(this.isBalancesGot=!1,this.balances=await this.networks[this.currentNetwork].signingClient.getAllBalances(this.currentAddress),this.balances.length){for(let e of this.balances)await this.getBalanceInfo(e);this.balances=this.balances.filter((e=>e.hasOwnProperty("exponent")))}this.isBalancesGot=!0},async getStakedBalances(){this.isStakedBalancesGot=!1;try{await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegations/${this.currentAddress}`).then((e=>e.json())).then((async e=>{if(e.delegation_responses){this.stakedBalances=e.delegation_responses;for(let e of this.stakedBalances)await this.getBalanceInfo(e.balance),await this.getValidatorInfo(e,e.delegation.validator_address);this.stakedBalances=this.stakedBalances.filter((e=>e.balance.hasOwnProperty("exponent")))}})),this.isStakedBalancesGot=!0}catch(e){console.error(e)}},async getRewards(){this.isRewardsGot=!1;try{await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/distribution/v1beta1/delegators/${this.currentAddress}/rewards`).then((e=>e.json())).then((async e=>{if(e.total.length){this.rewardsBalances=e.total;for(let e of this.rewardsBalances)await this.getBalanceInfo(e);this.rewardsBalances=this.rewardsBalances.filter((e=>e.hasOwnProperty("exponent"))),this.rewardsBalances=this.rewardsBalances.filter((e=>e.chain_info.chain_id==this.networks[this.currentNetwork].chain_id))}else this.rewardsBalances=[]})),this.isRewardsGot=!0}catch(e){console.error(e)}},async getUnstakingBalances(){this.isUnstakingBalancesGot=!1,this.unstakingBalances=[],this.networks[this.currentNetwork].totalUnstakingTokens=0;try{await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegators/${this.currentAddress}/unbonding_delegations`).then((e=>e.json())).then((async e=>{this.unstakingBalances=e.unbonding_responses;for(let t of this.unstakingBalances)t.entries.forEach((e=>this.networks[this.currentNetwork].totalUnstakingTokens+=parseInt(e.balance))),await this.getValidatorInfo(t,t.validator_address)})),this.isUnstakingBalancesGot=!0}catch(e){console.error(e)}},async getRedelegations(){try{await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegators/${this.currentAddress}/redelegations`).then((e=>e.json())).then((async e=>{this.redelegations=e.redelegation_responses}))}catch(e){console.error(e)}},async getBalanceInfo(e){let{base_denom:t}=await(0,r.E0)(e.denom,this.currentNetwork);for(let r of i.mY){switch(t){case"uusdc":var n=i.mY.find((e=>"noble"===e.chain_name));break;default:n=r;break}let a=n.assets.find((e=>e.base===t));if(a){e.token_info=a,e.chain_name=n.chain_name;break}}let a=this.formatableTokens.find((t=>t.token_name===e.token_info.base.toUpperCase()));e.exponent=a?a.exponent:e.token_info.denom_units[1]?.exponent||0,e.chain_info=i.Bt.find((t=>t.chain_name===e.chain_name)),e.price=(0,r.AN)(e.token_info.symbol)},hasNativeToken(){return this.balances.some((e=>e.denom==this.networks[this.currentNetwork].denom))},async getValidatorInfo(e,t){try{await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/validators/${t}`).then((e=>e.json())).then((t=>{e.validator_info=t.validator}))}catch(n){console.error(n)}},async getSecret(){let e=await this.getMultipleData(["secret","secretIV","aesKey"]);return this.secret=e.secret,this.secretIV=e.secretIV,this.aesKey=e.aesKey,await(0,r.af)(this.secret,this.secretIV,this.aesKey)},async setSecret(e){let t=await(0,r.cd)(),{ciphertext:n,iv:a}=await(0,r.yv)(e,t);this.secret=n,this.secretIV=a,this.aesKey=t,await(0,o.IG)("wallet",[["aesKey",t],["secret",n],["secretIV",a]])},async setPrivateKey(e){let t=await(0,r.cd)(),{ciphertext:n,iv:a}=await(0,r.yv)(e,t);this.privateKey=n,this.secretIV=a,this.aesKey=t,await(0,o.IG)("wallet",[["aesKey",t],["privateKey",n],["secretIV",a]])},setCurrentNetwork(e){(0,o.IG)("wallet",[["currentNetwork",e]]),this.currentNetwork=e},async createWallet({pinCode:e,walletName:t,isBiometricEnabled:n}){let a=await(0,r.Q1)();await(0,o.IG)("wallet",[["hmacKey",a],["pin",await(0,r.mK)(e.join(""),a)],["name",t],["isRegister",!0],["isBiometric",n],["authErrorLimit",this.authErrorLimit],["currentNetwork","cosmoshub"],["currentCurrency","USD"]]),this.isAuthorized=!0},async getMultipleData(e){return await(0,o.pQ)("wallet",e)},async updateUserAuthErrorLimit(e){await(0,o.IG)("wallet",[["authErrorLimit",e]])},async updateTxFeeInfo(){await(0,o.IG)("wallet",[["TxFeeCurrentLevel",this.TxFee.currentLevel],["TxFeeIsRemember",this.TxFee.isRemember]])},async updateCurrentCurrency(){switch(this.currentCurrency){case"BTC":this.currentCurrency="ETH",this.currentCurrencySymbol="ETH",(0,o.IG)("wallet",[["currentCurrency","ETH"]]);break;case"ETH":this.currentCurrency="USD",this.currentCurrencySymbol="$",(0,o.IG)("wallet",[["currentCurrency","USD"]]);break;default:this.currentCurrency="BTC",this.currentCurrencySymbol="BTC",(0,o.IG)("wallet",[["currentCurrency","BTC"]]);break}},connectWebsocket(){Object.values(this.networks).forEach((e=>{e.websocket&&(e.websocket.onmessage=null,e.websocket.close())})),this.networks[this.currentNetwork].websocket=new WebSocket(this.networks[this.currentNetwork].websocket_url),this.networks[this.currentNetwork].websocket.onopen=()=>{this.networks[this.currentNetwork].websocket.send(JSON.stringify({jsonrpc:"2.0",method:"subscribe",id:"1",params:{query:`tm.event='Tx' AND transfer.recipient='${this.currentAddress}'`}}))},this.networks[this.currentNetwork].websocket.onmessage=async e=>{let t=JSON.parse(e.data);Object.keys(t.result).length&&("1"==t.id&&(this.updateAllBalances(),this.resetTxFee()),"2"==t.id&&this.checkTxResult())}},TxFeeGetCurrentBalance(e){this.TxFee.balance=this.balances.find((t=>t.denom===e))||{amount:0}},TxFeeSetGasPrices(){let e=i.Bt.find((e=>e.chain_id===this.networks[this.currentNetwork].chain_id));this.TxFee.lowPrice=e.fees.fee_tokens[0].fixed_min_gas_price?1.1*e.fees.fee_tokens[0].fixed_min_gas_price:e.fees.fee_tokens[0].low_gas_price,this.TxFee.averagePrice=1.15*this.TxFee.lowPrice,this.TxFee.highPrice=1.3*this.TxFee.lowPrice},TxFeeIsEnough(){this.isBalancesGot&&(this.TxFee.isEnough=this.TxFee.balance.amount>this.TxFee.userGasAmount*this.TxFee[`${this.TxFee.currentLevel}Price`])},setListenerCurrentTx(){this.networks[this.currentNetwork].websocket.send(JSON.stringify({jsonrpc:"2.0",method:"subscribe",id:"2",params:{query:`tm.event='Tx' AND tx.hash='${this.networks[this.currentNetwork].currentTxHash.toUpperCase()}'`}}))},async getTxInfo(e){try{return await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/tx/v1beta1/txs/${e.toUpperCase()}`).then((e=>e.json()))}catch(t){console.error(t)}},async checkTxResult(){let e=await this.getTxInfo(this.networks[this.currentNetwork].currentTxHash);if(5!=e.code){if(v.notify({group:"default",clean:!0}),"0"==e.tx_response.code)v.notify({group:"default",speed:200,duration:4e3,title:l.A.global.t("message.notification_tx_success_title"),type:"success",data:{explorer_link:(0,r.aS)(this.currentNetwork)}});else{let t="";t=e.tx_response.code?l.A.global.t(`message.notification_tx_error_${e.tx_response.code}`):l.A.global.t("message.notification_tx_error_rejected"),v.notify({group:"default",speed:200,duration:6e3,title:l.A.global.t("message.notification_tx_error_title"),text:t,type:"error"})}this.networks[this.currentNetwork].currentTxHash=null,this.updateAllBalances(),this.resetTxFee()}},async updateAllBalances(){if(this.isBalancesGot)var e=await this.getBalances();if(this.isStakedBalancesGot)var t=await this.getStakedBalances();Promise.all([e,t]).then((()=>{this.isRewardsGot&&this.getRewards(),this.isUnstakingBalancesGot&&this.getUnstakingBalances()}))},async resetTxFee(){let e=await this.getMultipleData(["TxFeeCurrentLevel","TxFeeIsRemember"]);this.TxFee={balance:{},currentLevel:e.TxFeeCurrentLevel||"average",userGasAmount:0,gasAmount:0,isRemember:e.TxFeeIsRemember||!1,isGasAdjustmentAuto:!0,isEnough:!1}},async getNetworkUnbondingTime(){try{await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/params`).then((e=>e.json())).then((e=>{this.networks[this.currentNetwork].unbondingTime=parseInt(e.params.unbonding_time)/86400}))}catch(e){console.error(e)}},async getAllValidators(){try{return await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/validators?status=BOND_STATUS_BONDED&pagination.limit=200`).then((e=>e.json()))}catch(e){console.error(e)}},async getUserValidators(){try{return await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegators/${this.currentAddress}/validators?status=BOND_STATUS_BONDED&pagination.limit=200`).then((e=>e.json()))}catch(e){console.error(e)}},async getTotalBondedTokens(){try{await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/pool`).then((e=>e.json())).then((e=>{this.networks[this.currentNetwork].totalBondedTokens=parseInt(e.pool.bonded_tokens)}))}catch(e){console.error(e)}},async isUnstakingCancelSupport(){try{let e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/base/tendermint/v1beta1/node_info`),t=await e.json(),n=t.application_version.cosmos_sdk_version,a="v0.46",r=n.replace("v","").split("-")[0].split(".").map(Number),i=a.replace("v","").split("-")[0].split(".").map(Number);while(r.length<3)r.push(0);while(i.length<3)i.push(0);for(let o=0;o<3;o++){if(r[o]>i[o])return!0;if(r[o]<i[o])return!1}return!0}catch(e){return console.error(e),!1}},async clearAllData(){await(0,o._e)("wallet")}}})},36571:function(e,t,n){"use strict";n.d(t,{$R:function(){return i},IG:function(){return s},_e:function(){return l},pQ:function(){return o}});var a=n(54837);const r=(0,a.P2)("bro_db",1,{upgrade(e){e.objectStoreNames.contains("wallet")||e.createObjectStore("wallet")}});async function i(e,t){let n=await r;return n.get(e,t)}async function o(e,t){const n=await r,a=await Promise.all(t.map((t=>n.get(e,t))));let i={};return t.forEach(((e,t)=>i[e]=a[t])),i}async function s(e,t){let n=await r,a=n.transaction(e,"readwrite"),i=a.objectStore(e);for(let[r,o]of t)await i.put(o,r);await a.done}async function l(e){const t=await r,n=t.transaction(e,"readwrite"),a=n.objectStore(e);await a.clear(),await n.done}},61981:function(e,t,n){"use strict";n.d(t,{AN:function(){return T},E0:function(){return w},Ko:function(){return B},NJ:function(){return y},NN:function(){return d},Q1:function(){return f},ST:function(){return v},Y$:function(){return A},Yq:function(){return C},_Q:function(){return O},aS:function(){return U},af:function(){return b},cc:function(){return I},cd:function(){return p},eZ:function(){return S},fp:function(){return _},jC:function(){return D},mK:function(){return h},nY:function(){return F},nw:function(){return R},oB:function(){return j},oL:function(){return E},on:function(){return P},p_:function(){return k},qS:function(){return L},r6:function(){return m},s3:function(){return N},yv:function(){return g}});n(16573),n(78100),n(77936),n(37467),n(44732),n(79577);var a=n(96011),r=n(73423),i=n(89354),o=n(26776),s=n(26270),l=n(54),c=n(68527),u=n(83438)["hp"];const d=async e=>await r.DirectSecp256k1HdWallet.generate(e),_=async(e,t=null)=>await r.DirectSecp256k1HdWallet.fromMnemonic(e,{prefix:t}),m=async(e,t=null)=>await r.DirectSecp256k1Wallet.fromKey((0,i.fromHex)(e),t),h=async(e,t)=>{let n=new TextEncoder,a=n.encode(e),r=await crypto.subtle.importKey("jwk",t,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),i=await crypto.subtle.sign("HMAC",r,a),o=Array.from(new Uint8Array(i)),s=o.map((e=>("00"+e.toString(16)).slice(-2))).join("");return s},p=async()=>{let e=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);return e},f=async()=>{let e=await crypto.subtle.generateKey({name:"HMAC",hash:{name:"SHA-256"},length:256},!0,["sign"]),t=await crypto.subtle.exportKey("jwk",e);return t},g=async(e,t)=>{let n=crypto.getRandomValues(new Uint8Array(12)),a=new TextEncoder,r=a.encode(e),i=await crypto.subtle.encrypt({name:"AES-GCM",iv:n},t,r);return{ciphertext:new Uint8Array(i),iv:n}},b=async(e,t,n)=>{let a=await crypto.subtle.decrypt({name:"AES-GCM",iv:t},n,e),r=new TextDecoder;return r.decode(a)},k=async()=>{let e=(0,a.o)(),t=null;if(e.secret){let n=await b(e.secret,e.secretIV,e.aesKey);t=await _(n,e.networks[e.currentNetwork].prefix)}if(e.privateKey){let n=await b(e.privateKey,e.secretIV,e.aesKey);t=await m(n,e.networks[e.currentNetwork].prefix)}let n=(await t.getAccounts())[0].address,r=await o.SigningStargateClient.connectWithSigner(e.networks[e.currentNetwork].rpc_api,t);return{address:n,signingClient:r}},w=async e=>{let t=(0,a.o)(),n={path:null,base_denom:e},r=e.split("/");if("ibc"==r[0])try{await fetch(`${t.networks[t.currentNetwork].lcd_api}/ibc/apps/transfer/v1/denom_traces/${r[1]}`).then((e=>e.json())).then((e=>n=e.denom_trace))}catch(i){console.error(i)}else"factory"==r[0]&&(n.ingnoreTraces=!0,n.base_denom=r[r.length-1]);return n},y=(e,t)=>e/Math.pow(10,t),v=(e,t=null)=>{let n=(0,a.o)(),r=t||n.currentCurrency;switch(r){case"BTC":return e>1e-10||0==e?e.toLocaleString("ru-RU",{maximumFractionDigits:10,minimumFractionDigits:2}).replace(",","."):"<0.0000000001";case"ETH":return e>1e-7||0==e?e.toLocaleString("ru-RU",{maximumFractionDigits:7,minimumFractionDigits:2}).replace(",","."):"<0.0000001";default:return e>.01||0==e?e.toLocaleString("ru-RU",{maximumFractionDigits:2,minimumFractionDigits:2}).replace(",","."):"<0.01"}},x=e=>{let t=(0,a.o)(),n=t.formatableTokens.find((t=>t.token_name==e)),r=n?n.format_token_name:e;return r},T=e=>{let t=(0,a.o)(),n=t.prices.find((t=>t.symbol===e))?.price||0,r=t.formatableTokens.find((t=>t.token_name==e)),i=r?n*Math.pow(10,r.exponent):n;return i},C=(e,t,n)=>{let r=(0,a.o)(),i=0;return i=n?r.prices.find((e=>e.symbol==x(n))).price:r.prices.find((e=>e.symbol==x(r.currentCurrency))).price,e*(T(t)/i)},A=(e,t,n,a=null)=>{let r=y(t,n);return C(r,e,a)},N=(e=null)=>{let t=(0,a.o)(),n=0;return t.balances.length&&t.balances.forEach((t=>n+=A(t.token_info.symbol,t.amount,t.exponent,e))),parseFloat(n)},S=(e=null)=>{let t=(0,a.o)(),n=0;return t.stakedBalances.length&&t.stakedBalances.forEach((t=>n+=A(t.balance.token_info.symbol,t.balance.amount,t.balance.exponent,e))),parseFloat(n)},B=(e=null)=>{let t=(0,a.o)(),n=0;return t.rewardsBalances.length&&t.rewardsBalances.forEach((t=>n+=A(t.token_info.symbol,t.amount,t.exponent,e))),parseFloat(n)},F=()=>{let e=(0,a.o)(),t=e.balances.find((t=>t.denom===e.networks[e.currentNetwork].denom));return t?t.amount:0},I=()=>{let e=(0,a.o)(),t=0;return e.stakedBalances.length&&e.stakedBalances.forEach((e=>t+=parseFloat(e.balance.amount))),t},E=()=>{let e=(0,a.o)(),t=0;return e.unstakingBalances.length&&e.unstakingBalances.forEach((e=>{e.entries.forEach((e=>t+=parseFloat(e.balance)))})),t},j=e=>{let t=null;if(e){let n=c.Bt.find((t=>t.chain_id===e));n&&(t=n.logo_URIs?n.logo_URIs.svg||n.logo_URIs.png:n.images[n.images.length-1].svg||n.images[n.images.length-1].png)}return t},D=async(e,t="")=>{let n=(0,a.o)(),r=await n.networks[n.currentNetwork].signingClient.simulate(n.currentAddress,e,t);n.TxFee.gasAmount=parseInt(r*n.networks[n.currentNetwork].gas_adjustment),n.TxFee.userGasAmount=n.TxFee.gasAmount},L=async(e,t)=>{let n=(0,a.o)(),r={amount:[{denom:n.networks[n.currentNetwork].denom,amount:parseInt(n.TxFee.userGasAmount*n.TxFee[`${n.TxFee.currentLevel}Price`]).toString()}],gas:n.TxFee.userGasAmount.toString()},i=await n.networks[n.currentNetwork].signingClient.sign(n.currentAddress,e,r,t),o=s.TxRaw.encode(i).finish(),c=(0,l.sha256)(o);return n.networks[n.currentNetwork].currentTxHash=u.from(c).toString("hex"),n.setListenerCurrentTx(),o},R=async e=>{let t=(0,a.o)();await t.networks[t.currentNetwork].signingClient.broadcastTx(e,t.networks[t.currentNetwork].signingClient.broadcastTimeoutMs,t.networks[t.currentNetwork].signingClient.broadcastPollIntervalMs)},U=e=>{let t=(0,a.o)();return t.networks[e].explorer_link.replace("{tx_hash}",t.networks[e].currentTxHash)},P=e=>e.target.classList.add("hide"),O=e=>{let t=new Date(e),n=(new Date).getTimezoneOffset()/60*-1;return new Date(t.setHours(t.getHours()+n))}},24113:function(e,t,n){"use strict";e.exports=n.p+"img/sprite.f62616ad.svg"},78982:function(){},47790:function(){},73776:function(){},21638:function(){},92668:function(){},77965:function(){},66089:function(){},79368:function(){},77667:function(){},76447:function(){},64688:function(){},51069:function(){},15340:function(){},79838:function(){}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var i=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.m=e,function(){n.amdO={}}(),function(){var e=[];n.O=function(t,a,r,i){if(!a){var o=1/0;for(u=0;u<e.length;u++){a=e[u][0],r=e[u][1],i=e[u][2];for(var s=!0,l=0;l<a.length;l++)(!1&i||o>=i)&&Object.keys(n.O).every((function(e){return n.O[e](a[l])}))?a.splice(l--,1):(s=!1,i<o&&(o=i));if(s){e.splice(u--,1);var c=r();void 0!==c&&(t=c)}}return t}i=i||0;for(var u=e.length;u>0&&e[u-1][2]>i;u--)e[u]=e[u-1];e[u]=[a,r,i]}}(),function(){n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,{a:t}),t}}(),function(){n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}}(),function(){n.f={},n.e=function(e){return Promise.all(Object.keys(n.f).reduce((function(t,a){return n.f[a](e,t),t}),[]))}}(),function(){n.u=function(e){return"js/"+e+"."+{28:"b9ecbe80",87:"2396e0ed",190:"32d222dc",254:"a42ee5fe",377:"a9271ff8",430:"a1d8219b",468:"2c08063e",583:"47bffa27",614:"20be9fac",634:"41501c8c",791:"9d258848",809:"efe55019",818:"fb60b3be",820:"3ba5ff6b",965:"fe94f1f8"}[e]+".js"}}(),function(){n.miniCssF=function(e){return"css/"+e+"."+{28:"19fc441e",87:"5bb2e078",254:"2413cc0b",377:"afdfc900",430:"c70628d0",468:"6981112c",583:"a5ace911",614:"337baa5e",634:"368051ee",791:"fa3bee54",809:"36fb2ccf",818:"e39ee1f1",820:"0814d0fc",965:"dafe4a83"}[e]+".css"}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="cosmos-telegram-signer:";n.l=function(a,r,i,o){if(e[a])e[a].push(r);else{var s,l;if(void 0!==i)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+i){s=d;break}}s||(l=!0,s=document.createElement("script"),s.charset="utf-8",s.timeout=120,n.nc&&s.setAttribute("nonce",n.nc),s.setAttribute("data-webpack",t+i),s.src=a),e[a]=[r];var _=function(t,n){s.onerror=s.onload=null,clearTimeout(m);var r=e[a];if(delete e[a],s.parentNode&&s.parentNode.removeChild(s),r&&r.forEach((function(e){return e(n)})),t)return t(n)},m=setTimeout(_.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=_.bind(null,s.onerror),s.onload=_.bind(null,s.onload),l&&document.head.appendChild(s)}}}(),function(){n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){n.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){n.p="/"}(),function(){if("undefined"!==typeof document){var e=function(e,t,a,r,i){var o=document.createElement("link");o.rel="stylesheet",o.type="text/css",n.nc&&(o.nonce=n.nc);var s=function(n){if(o.onerror=o.onload=null,"load"===n.type)r();else{var a=n&&n.type,s=n&&n.target&&n.target.href||t,l=new Error("Loading CSS chunk "+e+" failed.\n("+a+": "+s+")");l.name="ChunkLoadError",l.code="CSS_CHUNK_LOAD_FAILED",l.type=a,l.request=s,o.parentNode&&o.parentNode.removeChild(o),i(l)}};return o.onerror=o.onload=s,o.href=t,a?a.parentNode.insertBefore(o,a.nextSibling):document.head.appendChild(o),o},t=function(e,t){for(var n=document.getElementsByTagName("link"),a=0;a<n.length;a++){var r=n[a],i=r.getAttribute("data-href")||r.getAttribute("href");if("stylesheet"===r.rel&&(i===e||i===t))return r}var o=document.getElementsByTagName("style");for(a=0;a<o.length;a++){r=o[a],i=r.getAttribute("data-href");if(i===e||i===t)return r}},a=function(a){return new Promise((function(r,i){var o=n.miniCssF(a),s=n.p+o;if(t(o,s))return r();e(a,s,null,r,i)}))},r={524:0};n.f.miniCss=function(e,t){var n={28:1,87:1,254:1,377:1,430:1,468:1,583:1,614:1,634:1,791:1,809:1,818:1,820:1,965:1};r[e]?t.push(r[e]):0!==r[e]&&n[e]&&t.push(r[e]=a(e).then((function(){r[e]=0}),(function(t){throw delete r[e],t})))}}}(),function(){var e={524:0};n.f.j=function(t,a){var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var i=new Promise((function(n,a){r=e[t]=[n,a]}));a.push(r[2]=i);var o=n.p+n.u(t),s=new Error,l=function(a){if(n.o(e,t)&&(r=e[t],0!==r&&(e[t]=void 0),r)){var i=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;s.message="Loading chunk "+t+" failed.\n("+i+": "+o+")",s.name="ChunkLoadError",s.type=i,s.request=o,r[1](s)}};n.l(o,l,"chunk-"+t,t)}},n.O.j=function(t){return 0===e[t]};var t=function(t,a){var r,i,o=a[0],s=a[1],l=a[2],c=0;if(o.some((function(t){return 0!==e[t]}))){for(r in s)n.o(s,r)&&(n.m[r]=s[r]);if(l)var u=l(n)}for(t&&t(a);c<o.length;c++)i=o[c],n.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return n.O(u)},a=self["webpackChunkcosmos_telegram_signer"]=self["webpackChunkcosmos_telegram_signer"]||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))}();var a=n.O(void 0,[504],(function(){return n(95578)}));a=n.O(a)})();
//# sourceMappingURL=app.a576f12c.js.map