{"version":3,"file":"js/411.3bb1a8a6.js","mappings":"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","sources":["webpack://cosmos-telegram-signer/./src/components/createWallet/CreatePage.vue","webpack://cosmos-telegram-signer/./src/components/createWallet/CreatePage.vue?2bbb","webpack://cosmos-telegram-signer/./src/components/modal/DerivationPathModal.vue","webpack://cosmos-telegram-signer/./src/components/modal/DerivationPathModal.vue?d010","webpack://cosmos-telegram-signer/./src/views/AddWallet/CreatePage.vue"],"sourcesContent":["<template>\n    <!-- Create wallet page -->\n    <section class=\"page_container create_wallet_page\">\n        <div class=\"cont\">\n            <!-- Create wallet page title -->\n            <div class=\"page_title\">\n                {{ $t('message.create_wallet_title') }}\n            </div>\n\n            <!-- Create wallet page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- Loader -->\n                    <Loader v-if=\"loading\" />\n\n                    <template v-else>\n                    <!-- Back button -->\n                    <router-link class=\"back_btn\" to=\"/\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                    </router-link>\n\n\n                    <!-- Tabs -->\n                    <div class=\"tabs_wrap\">\n                        <div class=\"tabs\" :class=\"{ disabled: !agreed }\">\n                            <!-- Tab 12 words -->\n                            <button class=\"btn\" ref=\"tab1\" @click.prevent=\"activeTab = 1; count = 12\" :class=\"{ active: activeTab === 1 }\">\n                                <span>{{ $t('message.mnemonic_tab1') }}</span>\n                            </button>\n\n                            <!-- Tab 24 words -->\n                            <button class=\"btn\" ref=\"tab2\" @click.prevent=\"activeTab = 2; count = 24\" :class=\"{ active: activeTab === 2 }\">\n                                <span>{{ $t('message.mnemonic_tab2') }}</span>\n                            </button>\n\n                            <!-- Tabs roller -->\n                            <div class=\"roller\" :style=\"`width: ${rollerWidth}px; left: ${rollerOffsetLeft}px;`\">\n                                <span></span>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <!-- Mnemonic -->\n                    <div class=\"mnemonic\">\n                        <div class=\"row\">\n                            <!-- Mnemonic words -->\n                            <div class=\"word\" v-for=\"(word, index) in wallet.secret.data.split(' ')\" :key=\"index\">\n                                <!-- Mnemonic field -->\n                                <div class=\"input\">{{ word }}</div>\n                            </div>\n\n                            <!-- Mnemonic blur -->\n                            <div class=\"blur\" v-if=\"!agreed\"></div>\n                        </div>\n\n                        <!-- Mnemonic copy button -->\n                        <button class=\"copy_btn\" :disabled=\"!agreed\" @click.prevent=\"copyHandler()\">\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n\n                            <span>{{ $t('message.btn_copy') }}</span>\n                        </button>\n                    </div>\n\n\n                    <!-- Advanced -->\n                    <div class=\"advanced\" v-if=\"agreed\">\n                        <button class=\"btn\" @click.prevent=\"showAdvanced = true\" v-if=\"!showAdvanced\">\n                            <span>{{ $t('message.btn_advanced') }}</span>\n                        </button>\n\n                        <div v-else>\n                            <div class=\"label\">\n                                {{ $t('message.create_wallet_derivation_path_label') }} <span @click.prevent=\"showDerivationPathModal = true\">?</span>\n                            </div>\n\n                            <div class=\"field\">\n                                <span>m/44'/118'/</span>\n\n                                <input type=\"text\" class=\"input\" v-model=\"derivationPathPart1\">\n\n                                <span>'/</span>\n\n                                <input type=\"text\" class=\"input\" v-model=\"derivationPathPart2\">\n\n                                <span>/</span>\n\n                                <input type=\"text\" class=\"input\" v-model=\"derivationPathPart3\">\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <!-- Agree -->\n                    <div class=\"agree\" v-if=\"!agreed\">\n                        <div>\n                            <!-- Agree label -->\n                            <div class=\"label\">\n                                {{ $t('message.create_wallet_agree_label1') }}\n                            </div>\n\n                            <!-- Agree checkbox -->\n                            <label class=\"checkbox\">\n                                <input type=\"checkbox\" v-model=\"agreeFirst\" value=\"true\">\n\n                                <div class=\"check\">\n                                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                </div>\n\n                                <div>{{ $t('message.create_wallet_agree_checkbox1') }}</div>\n                            </label>\n                        </div>\n\n                        <div>\n                            <!-- Agree label -->\n                            <div class=\"label\">\n                                {{ $t('message.create_wallet_agree_label2') }}\n                            </div>\n\n                            <!-- Agree checkbox -->\n                            <label class=\"checkbox\">\n                                <input type=\"checkbox\" v-model=\"agreeSecond\" value=\"true\">\n\n                                <div class=\"check\">\n                                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                </div>\n\n                                <div>{{ $t('message.create_wallet_agree_checkbox2') }}</div>\n                            </label>\n                        </div>\n                    </div>\n\n\n                    <!-- Create wallet page button -->\n                    <div class=\"btns\">\n                        <!-- Show button -->\n                        <div class=\"btn\" :class=\"{ disabled: !agreeFirst || !agreeSecond }\" @click.prevent=\"agreed = true\" v-if=\"!agreed\">\n                            <span>{{ $t('message.btn_show') }}</span>\n                        </div>\n\n                        <!-- Next button -->\n                        <div class=\"btn\" v-else @click.prevent=\"saveWallet()\">\n                            <span>{{ $t('message.btn_next') }}</span>\n                        </div>\n                    </div>\n                    </template>\n                </div>\n            </div>\n        </div>\n   </section>\n\n\n    <!-- Derivation path modal -->\n    <DerivationPathModal v-if=\"showDerivationPathModal\" />\n</template>\n\n\n<script setup>\n    import { ref, inject, watch, computed, nextTick, onBeforeMount, onMounted, onUnmounted } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { useGlobalStore } from '@/store'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { useClipboard } from '@vueuse/core'\n    import { generateWallet } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import DerivationPathModal from '@/components/modal/DerivationPathModal.vue'\n\n\n    const props = defineProps(['isAdding']),\n        store = useGlobalStore(),\n        router = useRouter(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        emitter = inject('emitter'),\n        loading = ref(true),\n        count = ref(12),\n        wallet = ref(null),\n        agreeFirst = ref(false),\n        agreeSecond = ref(false),\n        agreed = ref(false),\n        activeTab = ref(1),\n        tab1 = ref(null),\n        tab2 = ref(null),\n        tabs = [tab1, tab2],\n        rollerWidth = ref(null),\n        rollerOffsetLeft = ref(null),\n        { copy } = useClipboard(),\n        showAdvanced = ref(false),\n        showDerivationPathModal = ref(false),\n        derivationPathPart1 = ref(0),\n        derivationPathPart2 = ref(0),\n        derivationPathPart3 = ref(0)\n\n\n    onBeforeMount(async () => {\n        // Generate wallet\n        wallet.value = await generateWallet(count.value)\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    onMounted(() => {\n        // Event \"close_derivation_path_modal\"\n        emitter.on('close_derivation_path_modal', closeDerivationPathModal)\n    })\n\n\n    onUnmounted(() => {\n        // Unlisten events\n        emitter.off('close_derivation_path_modal', closeDerivationPathModal)\n    })\n\n\n    watch(computed(() => loading.value), async () => {\n        if (!loading.value) {\n            // Wait\n            await nextTick()\n\n            // Set roller params\n            rollerWidth.value = tabs[activeTab.value - 1].value.offsetWidth\n            rollerOffsetLeft.value = tabs[activeTab.value - 1].value.offsetLeft\n        }\n    })\n\n\n    watch(computed(() => activeTab.value), async () => {\n        // Update roller params\n        rollerWidth.value = tabs[activeTab.value - 1].value.offsetWidth\n        rollerOffsetLeft.value = tabs[activeTab.value - 1].value.offsetLeft\n\n        // Generate wallet\n        wallet.value = await generateWallet(count.value)\n    })\n\n\n    // Copy handler\n    function copyHandler() {\n        // Copy\n        copy(wallet.value.secret.data)\n\n        // Clean notifications\n        notification.notify({\n            group: 'default',\n            clean: true\n        })\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            speed: 200,\n            duration: 750,\n            title: i18n.global.t('message.notification_copied_title'),\n            type: 'copied'\n        })\n    }\n\n\n    // Save wallet\n    async function saveWallet() {\n        // Show loader\n        loading.value = true\n\n        // Save in DB\n        await store.setSecret(wallet.value.secret.data)\n\n        // Save derivation path\n        store.tempDerivationPath = `m/44'/118'/${derivationPathPart1.value}'/${derivationPathPart2.value}/${derivationPathPart3.value}`\n\n        props.isAdding\n            // Go to confirm\n            ? router.push('/add_wallet/confirm')\n            // Go to confirm\n            : router.push('/confirm_wallet')\n    }\n\n\n    // Close derivation path modal\n    function closeDerivationPathModal() {\n        // Hide derivation path modal\n        showDerivationPathModal.value = false\n    }\n</script>\n\n\n<style scoped>\n    .mnemonic .input\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n    }\n\n\n\n    .agree\n    {\n        margin-top: auto;\n        padding-top: 18px;\n    }\n\n\n    .agree > *\n    {\n        margin-top: 8px;\n    }\n\n\n    .agree .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 4px;\n\n        color: #ffc700;\n    }\n\n\n\n    .btns\n    {\n        margin-top: 0;\n    }\n\n\n\n    .advanced\n    {\n        margin-top: 25px;\n        margin-bottom: auto;\n\n        text-align: center;\n    }\n\n\n    .advanced .btn\n    {\n        font-size: 14px;\n        line-height: 10px;\n\n        padding: 1px;\n\n        cursor: pointer;\n        transition: opacity .2s linear;\n\n        border-radius: 8px;\n        background: linear-gradient(to bottom,  #da91fc 0%,#300345 100%);\n    }\n\n\n    .advanced .btn span\n    {\n        display: block;\n\n        padding: 9px 19px;\n\n        border-radius: 7px;\n        background: linear-gradient(to bottom, #ad5dd1 0%, #580280 100%);\n    }\n\n\n    .advanced .btn:active span\n    {\n        background: linear-gradient(to bottom,  #580280 0%,#ac5dd1 100%);\n    }\n\n\n    .advanced > div\n    {\n        text-align: left;\n    }\n\n\n    .advanced .label\n    {\n        font-size: 14px;\n        font-weight: 500;\n\n        margin-bottom: 10px;\n    }\n\n\n    .advanced .label span\n    {\n        line-height: 17px;\n\n        display: inline-block;\n\n        width: 17px;\n        height: 17px;\n\n        text-align: center;\n        vertical-align: middle;\n\n        border-radius: 50%;\n        background: rgba(0, 0, 0, .70);\n    }\n\n\n    .advanced .field\n    {\n        font-size: 12px;\n        font-weight: 500;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding-left: 11px;\n\n        gap: 4px;\n    }\n\n\n    .advanced .input\n    {\n        width: 66px;\n    }\n</style>","import script from \"./CreatePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatePage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CreatePage.vue?vue&type=style&index=0&id=50e791dc&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-50e791dc\"]])\n\nexport default __exports__","<template>\n    <!-- Derivation path modal -->\n    <section class=\"modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\" :class=\"{ closing: isClosing }\">\n                <!-- Close button -->\n                <button class=\"close_btn\" @click.prevent=\"closeHandler()\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <!-- Modal title -->\n                <div class=\"modal_title\">\n                    {{ $t('message.derivation_path_title') }}\n                </div>\n\n                <!-- Modal desc -->\n                <div class=\"modal_desc\" v-html=\"$t('message.derivation_path_desc')\"></div>\n\n                <!-- Modal buttons -->\n                <div class=\"btns\">\n                    <!-- Ok button -->\n                    <button class=\"btn\" @click.prevent=\"emitter.emit('close_derivation_path_modal')\">\n                        <span>{{ $t('message.btn_OK') }}</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Modal overlay -->\n    <div class=\"modal_overlay\" :class=\"{ closing: isClosing }\" @click.prevent=\"closeHandler()\"></div>\n</template>\n\n\n<script setup>\n    import { ref, inject } from 'vue'\n\n\n    const emitter = inject('emitter'),\n        isClosing = ref(false)\n\n\n    // Close modal\n    function closeHandler() {\n        // Closing animation\n        isClosing.value = true\n\n        setTimeout(() => {\n            // Event \"close_derivation_path_modal\"\n            emitter.emit('close_derivation_path_modal')\n        }, 200)\n    }\n</script>\n\n\n<style scoped>\n    .modal_content\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 100%;\n        min-height: 0;\n        padding: 0;\n    }\n\n\n    .modal_content .data\n    {\n        width: 240px;\n        padding: 14px 10px 10px;\n\n        border-radius: 12px;\n    }\n\n    .modal_content .data:before\n    {\n        display: none;\n    }\n\n\n    .modal_content .close_btn\n    {\n        top: 0;\n        right: 0;\n\n        width: 52px;\n        height: 52px;\n    }\n\n\n    .modal_content .modal_title\n    {\n        font-size: 18px;\n        font-weight: 700;\n\n        text-align: center;\n    }\n\n\n    .modal_content .modal_desc\n    {\n        font-weight: 500;\n\n        margin-top: 13px;\n    }\n\n\n    ::v-deep(.modal_desc ul li)\n    {\n        position: relative;\n\n        display: block;\n        overflow: hidden;\n\n        padding-left: 20px;\n\n        list-style-type: none;\n    }\n\n\n    ::v-deep(.modal_desc ul li:before)\n    {\n        position: absolute;\n        top: 8px;\n        left: 4px;\n\n        display: block;\n\n        width: 4px;\n        height: 4px;\n\n        content: '';\n\n        border-radius: 50%;\n        background: currentColor;\n    }\n\n\n    .btns\n    {\n        margin-top: 48px;\n    }\n\n\n    .btns .btn span\n    {\n        padding: 9px;\n\n        text-transform: uppercase;\n    }\n</style>","import script from \"./DerivationPathModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DerivationPathModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DerivationPathModal.vue?vue&type=style&index=0&id=39b60e5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39b60e5a\"]])\n\nexport default __exports__","import script from \"./CreatePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["props","__props","store","useGlobalStore","router","useRouter","i18n","inject","notification","useNotification","emitter","loading","ref","count","wallet","agreeFirst","agreeSecond","agreed","activeTab","tab1","tab2","tabs","rollerWidth","rollerOffsetLeft","copy","useClipboard","showAdvanced","showDerivationPathModal","derivationPathPart1","derivationPathPart2","derivationPathPart3","copyHandler","value","secret","data","notify","group","clean","speed","duration","title","global","t","type","async","saveWallet","setSecret","tempDerivationPath","isAdding","push","closeDerivationPathModal","onBeforeMount","generateWallet","onMounted","on","onUnmounted","off","watch","computed","nextTick","offsetWidth","offsetLeft","__exports__","isClosing","closeHandler","setTimeout","emit"],"sourceRoot":""}