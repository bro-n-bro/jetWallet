{"version":3,"file":"js/820.eaa4ea8a.js","mappings":"oMAESA,MAAM,e,GAEPC,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,UAAQ,EAACC,EAAAA,EAAAA,IAAa,a,GAAjCC,G,kCAFJC,EAAAA,EAAAA,IAGM,MAHNC,EAFJC,E,gBCCA,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,woCCiII,MAAMC,GAAQC,EAAAA,EAAAA,KACVC,GAASC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,IAAO,QACdC,GAAeC,EAAAA,EAAAA,MACfC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAQD,EAAAA,EAAAA,IAAI,IACZE,GAASF,EAAAA,EAAAA,IAAI,MACbG,GAAaH,EAAAA,EAAAA,KAAI,GACjBI,GAAcJ,EAAAA,EAAAA,KAAI,GAClBK,GAASL,EAAAA,EAAAA,KAAI,GACbM,GAAYN,EAAAA,EAAAA,IAAI,GAChBO,GAAOP,EAAAA,EAAAA,IAAI,MACXQ,GAAOR,EAAAA,EAAAA,IAAI,MACXS,EAAO,CAACF,EAAMC,GACdE,GAAcV,EAAAA,EAAAA,IAAI,MAClBW,GAAmBX,EAAAA,EAAAA,IAAI,OACvB,KAAEY,IAASC,EAAAA,EAAAA,OAmCf,SAASC,IAELF,EAAKV,EAAOa,MAAMC,OAAOC,MAGzBpB,EAAaqB,OAAO,CAChBC,MAAO,UACPC,OAAO,IAIXvB,EAAaqB,OAAO,CAChBC,MAAO,UACPE,MAAO,IACPC,SAAU,IACVC,MAAO5B,EAAK6B,OAAOC,EAAE,qCACrBC,KAAM,UAEd,CAIAC,eAAeC,IAEX7B,EAAQgB,OAAQ,QAGVxB,EAAMsC,UAAU3B,EAAOa,MAAMC,OAAOC,MAG1CxB,EAAOqC,KAAK,kBAChB,C,OA/DAC,EAAAA,EAAAA,KAAcJ,UAEVzB,EAAOa,YAAciB,EAAAA,EAAAA,IAAe/B,EAAMc,OAG1ChB,EAAQgB,OAAQ,CAAK,KAIzBkB,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAAS,IAAMnC,EAAQgB,SAAQY,UAC5B5B,EAAQgB,cAEHoB,EAAAA,EAAAA,MAGNzB,EAAYK,MAAQN,EAAKH,EAAUS,MAAQ,GAAGA,MAAMqB,YACpDzB,EAAiBI,MAAQN,EAAKH,EAAUS,MAAQ,GAAGA,MAAMsB,WAC7D,KAIJJ,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAAS,IAAM5B,EAAUS,SAAQY,UAEnCjB,EAAYK,MAAQN,EAAKH,EAAUS,MAAQ,GAAGA,MAAMqB,YACpDzB,EAAiBI,MAAQN,EAAKH,EAAUS,MAAQ,GAAGA,MAAMsB,WAGzDnC,EAAOa,YAAciB,EAAAA,EAAAA,IAAe/B,EAAMc,MAAM,I,mhFCjLxD,MAAM1B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://cosmos-telegram-signer/./src/components/Loader.vue","webpack://cosmos-telegram-signer/./src/components/Loader.vue?b8fd","webpack://cosmos-telegram-signer/./src/views/CreateWalletPage.vue","webpack://cosmos-telegram-signer/./src/views/CreateWalletPage.vue?d1f4"],"sourcesContent":["<template>\n    <!-- Loader wrap -->\n    <div class=\"loader_wrap\">\n        <!-- Loader -->\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n        background: rgba(0, 0, 0, .5);\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=7c4ddd1d\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=7c4ddd1d&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <!-- Create wallet page -->\n    <section class=\"page_container create_wallet_page\">\n        <div class=\"cont\">\n            <!-- Create wallet page title -->\n            <div class=\"page_title\">\n                {{ $t('message.create_wallet_title') }}\n            </div>\n\n            <!-- Create wallet page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- Loader -->\n                    <Loader v-if=\"loading\" />\n\n                    <template v-else>\n                    <!-- Back button -->\n                    <router-link class=\"back_btn\" to=\"/\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                    </router-link>\n\n\n                    <!-- Tabs -->\n                    <div class=\"tabs_wrap\">\n                        <div class=\"tabs\" :class=\"{ disabled: !agreed }\">\n                            <!-- Tab 12 words -->\n                            <button class=\"btn\" ref=\"tab1\" @click.prevent=\"activeTab = 1; count = 12\" :class=\"{ active: activeTab === 1 }\">\n                                <span>{{ $t('message.mnemonic_tab1') }}</span>\n                            </button>\n\n                            <!-- Tab 24 words -->\n                            <button class=\"btn\" ref=\"tab2\" @click.prevent=\"activeTab = 2; count = 24\" :class=\"{ active: activeTab === 2 }\">\n                                <span>{{ $t('message.mnemonic_tab2') }}</span>\n                            </button>\n\n                            <!-- Tabs roller -->\n                            <div class=\"roller\" :style=\"`width: ${rollerWidth}px; left: ${rollerOffsetLeft}px;`\">\n                                <span></span>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <!-- Mnemonic -->\n                    <div class=\"mnemonic\">\n                        <div class=\"row\">\n                            <!-- Mnemonic words -->\n                            <div class=\"word\" v-for=\"(word, index) in wallet.secret.data.split(' ')\" :key=\"index\">\n                                <!-- Mnemonic field -->\n                                <div class=\"input\">{{ word }}</div>\n                            </div>\n\n                            <!-- Mnemonic blur -->\n                            <div class=\"blur\" v-if=\"!agreed\"></div>\n                        </div>\n\n                        <!-- Mnemonic copy button -->\n                        <button class=\"copy_btn\" :disabled=\"!agreed\"  @click.prevent=\"copyHandler()\">\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n\n                            <span>{{ $t('message.btn_copy') }}</span>\n                        </button>\n                    </div>\n\n\n                    <!-- Agree -->\n                    <div class=\"agree\" v-if=\"!agreed\">\n                        <div>\n                            <!-- Agree label -->\n                            <div class=\"label\">\n                                {{ $t('message.create_wallet_agree_label1') }}\n                            </div>\n\n                            <!-- Agree checkbox -->\n                            <label class=\"checkbox\">\n                                <input type=\"checkbox\" v-model=\"agreeFirst\" value=\"true\">\n\n                                <div class=\"check\">\n                                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                </div>\n\n                                <div>{{ $t('message.create_wallet_agree_checkbox1') }}</div>\n                            </label>\n                        </div>\n\n                        <div>\n                            <!-- Agree label -->\n                            <div class=\"label\">\n                                {{ $t('message.create_wallet_agree_label2') }}\n                            </div>\n\n                            <!-- Agree checkbox -->\n                            <label class=\"checkbox\">\n                                <input type=\"checkbox\" v-model=\"agreeSecond\" value=\"true\">\n\n                                <div class=\"check\">\n                                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                </div>\n\n                                <div>{{ $t('message.create_wallet_agree_checkbox2') }}</div>\n                            </label>\n                        </div>\n                    </div>\n\n\n                    <!-- Create wallet page button -->\n                    <div class=\"btns\">\n                        <!-- Show button -->\n                        <div class=\"btn\" :class=\"{ disabled: !agreeFirst || !agreeSecond }\" @click.prevent=\"agreed = true\" v-if=\"!agreed\">\n                            <span>{{ $t('message.btn_show') }}</span>\n                        </div>\n\n                        <!-- Next button -->\n                        <div class=\"btn\" v-else @click.prevent=\"saveWallet()\">\n                            <span>{{ $t('message.btn_next') }}</span>\n                        </div>\n                    </div>\n                    </template>\n                </div>\n            </div>\n        </div>\n   </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref, inject, watch, computed, nextTick } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { useGlobalStore } from '@/store'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { useClipboard } from '@vueuse/core'\n    import { generateWallet } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        loading = ref(true),\n        count = ref(12),\n        wallet = ref(null),\n        agreeFirst = ref(false),\n        agreeSecond = ref(false),\n        agreed = ref(false),\n        activeTab = ref(1),\n        tab1 = ref(null),\n        tab2 = ref(null),\n        tabs = [tab1, tab2],\n        rollerWidth = ref(null),\n        rollerOffsetLeft = ref(null),\n        { copy } = useClipboard()\n\n\n    onBeforeMount(async () => {\n        // Generate wallet\n        wallet.value = await generateWallet(count.value)\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    watch(computed(() => loading.value), async () => {\n        if (!loading.value) {\n            // Wait\n            await nextTick()\n\n            // Set roller params\n            rollerWidth.value = tabs[activeTab.value - 1].value.offsetWidth\n            rollerOffsetLeft.value = tabs[activeTab.value - 1].value.offsetLeft\n        }\n    })\n\n\n    watch(computed(() => activeTab.value), async () => {\n        // Update roller params\n        rollerWidth.value = tabs[activeTab.value - 1].value.offsetWidth\n        rollerOffsetLeft.value = tabs[activeTab.value - 1].value.offsetLeft\n\n        // Generate wallet\n        wallet.value = await generateWallet(count.value)\n    })\n\n\n    // Copy handler\n    function copyHandler() {\n        // Copy\n        copy(wallet.value.secret.data)\n\n        // Clean notifications\n        notification.notify({\n            group: 'default',\n            clean: true\n        })\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            speed: 200,\n            duration: 750,\n            title: i18n.global.t('message.notification_copied_title'),\n            type: 'copied'\n        })\n    }\n\n\n    // Save wallet\n    async function saveWallet() {\n        // Show loader\n        loading.value = true\n\n        // Save in DB\n        await store.setSecret(wallet.value.secret.data)\n\n        // Go to confirm\n        router.push('/confirm_wallet')\n    }\n</script>\n\n\n<style scoped>\n    .mnemonic .input\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n    }\n\n\n\n    .agree\n    {\n        margin-top: auto;\n        padding-top: 18px;\n    }\n\n\n    .agree > *\n    {\n        margin-top: 8px;\n    }\n\n\n    .agree .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 4px;\n\n        color: #ffc700;\n    }\n\n\n\n    .agree + .btns\n    {\n        margin-top: 0;\n    }\n</style>","import script from \"./CreateWalletPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreateWalletPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CreateWalletPage.vue?vue&type=style&index=0&id=13624c59&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-13624c59\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","store","useGlobalStore","router","useRouter","i18n","inject","notification","useNotification","loading","ref","count","wallet","agreeFirst","agreeSecond","agreed","activeTab","tab1","tab2","tabs","rollerWidth","rollerOffsetLeft","copy","useClipboard","copyHandler","value","secret","data","notify","group","clean","speed","duration","title","global","t","type","async","saveWallet","setSecret","push","onBeforeMount","generateWallet","watch","computed","nextTick","offsetWidth","offsetLeft"],"sourceRoot":""}