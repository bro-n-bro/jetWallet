{"version":3,"file":"js/844.84643c37.js","mappings":"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","sources":["webpack://cosmos-telegram-signer/./src/components/Loader.vue","webpack://cosmos-telegram-signer/./src/components/Loader.vue?b8fd","webpack://cosmos-telegram-signer/./src/components/Search.vue","webpack://cosmos-telegram-signer/./src/components/Search.vue?0923","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokensItem.vue","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokensItem.vue?9683","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokens.vue","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokens.vue?8e74","webpack://cosmos-telegram-signer/./src/components/account/QRCodeScanner.vue","webpack://cosmos-telegram-signer/./src/components/account/QRCodeScanner.vue?400c","webpack://cosmos-telegram-signer/./src/components/account/NetworkChooser.vue","webpack://cosmos-telegram-signer/./src/components/account/NetworkChooser.vue?d767","webpack://cosmos-telegram-signer/./src/components/account/Currency.vue","webpack://cosmos-telegram-signer/./src/components/account/Currency.vue?e4ea","webpack://cosmos-telegram-signer/./src/components/account/Address.vue","webpack://cosmos-telegram-signer/./src/components/account/Address.vue?f7b9","webpack://cosmos-telegram-signer/./src/components/account/Available.vue","webpack://cosmos-telegram-signer/./src/components/account/Available.vue?725b","webpack://cosmos-telegram-signer/./src/components/account/Animation.vue","webpack://cosmos-telegram-signer/./src/components/account/Animation.vue?3fe1","webpack://cosmos-telegram-signer/./src/components/account/Staked.vue","webpack://cosmos-telegram-signer/./src/components/account/Staked.vue?03d8","webpack://cosmos-telegram-signer/./src/components/account/ClaimRewardsItem.vue","webpack://cosmos-telegram-signer/./src/components/account/ClaimRewardsItem.vue?079b","webpack://cosmos-telegram-signer/./src/components/account/ClaimRewards.vue","webpack://cosmos-telegram-signer/./src/components/account/ClaimRewards.vue?2ae8","webpack://cosmos-telegram-signer/./src/components/account/UnstakingTokensItem.vue","webpack://cosmos-telegram-signer/./src/components/account/UnstakingTokensItem.vue?b7a3","webpack://cosmos-telegram-signer/./src/components/account/UnstakingTokens.vue","webpack://cosmos-telegram-signer/./src/components/account/UnstakingTokens.vue?f3b1","webpack://cosmos-telegram-signer/./src/components/account/StakedTokensItem.vue","webpack://cosmos-telegram-signer/./src/components/account/StakedTokensItem.vue?6707","webpack://cosmos-telegram-signer/./src/components/account/StakedTokens.vue","webpack://cosmos-telegram-signer/./src/components/account/StakedTokens.vue?3122","webpack://cosmos-telegram-signer/./src/components/modal/StatsModal.vue","webpack://cosmos-telegram-signer/./src/components/modal/StatsModal.vue?e5d5","webpack://cosmos-telegram-signer/./src/views/AccountPage.vue","webpack://cosmos-telegram-signer/./src/views/AccountPage.vue?f333"],"sourcesContent":["<template>\n    <!-- Loader wrap -->\n    <div class=\"loader_wrap\">\n        <!-- Loader -->\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n        background: rgba(0, 0, 0, .5);\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=7c4ddd1d\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=7c4ddd1d&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <!-- Search -->\n    <div class=\"search\">\n        <!-- Search back button -->\n        <button class=\"back_btn\" @click.prevent=\"setBlurEvent\">\n            <span><svg><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg></span>\n        </button>\n\n        <!-- Search field -->\n        <div class=\"field\">\n            <!-- Search field icon -->\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_search\"></use></svg>\n\n            <!-- Search field input -->\n            <input type=\"text\" v-model=\"query\" class=\"input\" :placeholder=\"$t('message.search_placeholder')\"\n                @focus=\"setFocusEvent\"\n                @blur=\"setBlurEvent\"\n                @input=\"setEnterEvent\">\n\n            <!-- Search field clear button -->\n            <button class=\"clear_btn\" v-if=\"query.length\" @click.prevent=\"clearField()\">\n                <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n            </button>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref, inject } from 'vue'\n\n\n    const props = defineProps(['source']),\n        emitter = inject('emitter'),\n        query = ref('')\n\n\n    // Set focus event\n    function setFocusEvent() {\n        // Set event \"search_focus\"\n        setTimeout(() => emitter.emit('search_focus'), 100)\n    }\n\n\n    // Set blur event\n    function setBlurEvent() {\n        // Set event \"search_blur\"\n        setTimeout(() => emitter.emit('search_blur'), 100)\n    }\n\n\n    // Set event \"search\"\n    function setEnterEvent() {\n        emitter.emit('search', {\n            query: query.value,\n            source: props.source\n        })\n    }\n\n\n    // Clear field\n    function clearField() {\n        //clear query\n        query.value = ''\n\n        /// Set event \"search\"\n        emitter.emit('search', {\n            query: query.value,\n            source: props.source\n        })\n    }\n</script>\n\n\n<style scoped>\n    .search\n    {\n        position: sticky;\n        z-index: 5;\n        top: 0;\n\n        padding: 12px 0;\n\n        background: #170232;\n    }\n\n\n    .search ::-webkit-input-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n    .search :-moz-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n    .search ::-moz-placeholder\n    {\n        opacity: 1;\n        color: rgba(255,255,255,.6);\n    }\n\n    .search :-ms-input-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n\n    .search .back_btn\n    {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        bottom: 0;\n        left: 0;\n\n        visibility: hidden;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n        padding: 1px;\n\n        transition: .2s linear;\n\n        opacity: 0;\n        border-radius: 50%;\n        background: linear-gradient(to bottom,  #5c32cc 0%,#210750 100%);\n    }\n\n\n    .search .back_btn span\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 26px;\n        height: 26px;\n\n        border-radius: 50%;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .search .back_btn svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .searching .search .back_btn\n    {\n        visibility: visible;\n\n        opacity: 1;\n    }\n\n\n    .search .field\n    {\n        position: relative;\n        z-index: 2;\n\n        width: 100%;\n        margin-left: auto;\n        padding: 1px;\n\n        transition: width .2s linear;\n\n        border-radius: 23px;\n        background: linear-gradient(to bottom,  #5c32cc 0%,#210750 100%);\n    }\n\n\n    .searching .search .field\n    {\n        width: calc(100% - 40px);\n    }\n\n\n    .search .icon\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        bottom: 0;\n        left: 10px;\n\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin: auto 0;\n\n        pointer-events: none;\n    }\n\n\n    .search .input\n    {\n        font-family: var(--font_family);\n        font-size: 16px;\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 28px;\n        padding: 0 39px 2px;\n\n        color: #fff;\n        border: none;\n        border-radius: 23px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .clear_btn\n    {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        right: 6px;\n        bottom: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 24px;\n        height: 24px;\n        margin: auto 0;\n    }\n\n\n    .clear_btn svg\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n    }\n</style>","import script from \"./Search.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Search.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Search.vue?vue&type=style&index=0&id=aba77f5c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-aba77f5c\"]])\n\nexport default __exports__","<template>\n    <router-link :to=\"`/account/send?denom=${props.balance.denom}`\" class=\"token_wrap\" :class=\"{ current: isCurrentToken(props.balance.denom) }\">\n        <div class=\"token\">\n            <!-- Token logo -->\n            <div class=\"logo\">\n                <img :src=\"props.balance.token_info.logo_URIs.svg\" alt=\"\" loading=\"lazy\">\n\n                <!-- Token check -->\n                <div class=\"check\" v-if=\"isCurrentToken(props.balance.denom)\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                </div>\n            </div>\n\n            <!-- Token denom -->\n            <div class=\"denom\">\n                {{ props.balance.token_info.symbol }}\n            </div>\n\n            <!-- Token amount -->\n            <div class=\"amount\">\n                <!-- Token amount value -->\n                <div class=\"val\">\n                    {{ formatTokenAmount(props.balance.amount, props.balance.exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n                </div>\n\n                <!-- Token amount cost -->\n                <div class=\"cost\">\n                    {{ formatTokenCost(calcTokenCost(props.balance.token_info.symbol, props.balance.amount, props.balance.exponent)) }}\n\n                    {{ store.currentCurrencySymbol }}\n                </div>\n            </div>\n        </div>\n    </router-link>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/store'\n    import { formatTokenAmount, formatTokenCost, calcTokenCost } from '@/utils'\n\n\n    const props = defineProps({\n        balance: {\n            type: Object,\n            default: () => ({})\n        },\n        currentToken: {\n            type: Object,\n            default: () => ({\n                denom: ''\n            })\n        }\n    }),\n        store = useGlobalStore()\n\n\n    // Is current token\n    function isCurrentToken(denom) {\n        return denom === props.currentToken.denom\n    }\n</script>\n\n\n<style scoped>\n    .token_wrap\n    {\n        display: block;\n\n        padding: 1px;\n\n        text-decoration: none;\n\n        color: currentColor;\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .token\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding-right: 9px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .token .logo\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 55px;\n        height: 55px;\n        margin-right: 8px;\n        padding: 8px;\n\n        border-radius: 11px;\n    }\n\n\n    .token .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .token .check\n    {\n        position: absolute;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: calc(100% - 8px);\n        height: calc(100% - 8px);\n        margin: auto;\n\n        border-radius: 50%;\n        background: rgba(53, 12, 107, .65);\n\n        inset: 0;\n    }\n\n\n    .token .check svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .token .denom\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        text-transform: uppercase;\n    }\n\n\n    .token .amount\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .token .amount .cost\n    {\n        font-size: 16px;\n        font-weight: 400;\n\n        color: #836b9e;\n    }\n\n\n    .token_wrap:active,\n    .token_wrap.current\n    {\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n    .token_wrap:active .token,\n    .token_wrap.current .token\n    {\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n</style>","import script from \"./AvailableTokensItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AvailableTokensItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AvailableTokensItem.vue?vue&type=style&index=0&id=2a50009b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2a50009b\"]])\n\nexport default __exports__","<template>\n    <!-- Available tokens -->\n    <section class=\"available_tokens\">\n        <div class=\"cont\">\n            <!-- Search -->\n            <Search source=\"availables\" />\n\n            <!-- Loader -->\n            <Loader v-if=\"!store.isInitialized || !store.isBalancesGot\" />\n\n            <!-- Tokens -->\n            <div class=\"tokens\" v-else>\n                <!-- Tokens count -->\n                <div class=\"count\" v-if=\"searchResult.length === store.balances.length\">\n                    <b>{{ store.balances.length }}</b> {{ $t('message.available_tokens_title') }}\n                </div>\n\n                <!-- Tokens list -->\n                <div class=\"list\" v-if=\"searchResult.length\">\n                    <!-- Tokens item -->\n                    <div class=\"item\" v-for=\"(balance, index) in searchResult\" :key=\"index\" :style=\"`order: ${parseInt(calcTokenCost(balance.token_info.symbol, balance.amount, balance.exponent) * -1000000)};`\">\n                        <!-- Tokens token -->\n                        <AvailableTokensItem :balance :currentToken=\"props.currentToken\" />\n                    </div>\n                </div>\n\n                <!-- Tokens empty -->\n                <div class=\"empty\" v-else>\n                    {{ $t('message.search_empty') }}\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, watch, ref, computed, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { calcTokenCost } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import Search from '@/components/Search.vue'\n    import AvailableTokensItem from '@/components/account/AvailableTokensItem.vue'\n\n\n    const props = defineProps(['currentToken']),\n        store = useGlobalStore(),\n        emitter = inject('emitter'),\n        searchResult = ref([])\n\n\n    onBeforeMount(() => {\n        if (store.isBalancesGot) {\n            // Default search result\n            searchResult.value = store.balances\n        }\n    })\n\n\n    watch(computed(() => store.isBalancesGot), () => {\n        if (store.isBalancesGot) {\n            // Default search result\n            searchResult.value = store.balances\n        }\n    })\n\n\n    // Event \"search\"\n    emitter.on('search', ({ query, source }) => {\n        if (source === 'availables') {\n            // Clear search result\n            searchResult.value = []\n\n            // Set new result\n            for (let key in store.balances) {\n                if (store.balances[key].token_info.symbol.toLocaleLowerCase().includes(query.toLocaleLowerCase())) {\n                    searchResult.value.push(store.balances[key])\n                }\n            }\n        }\n    })\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px;\n\n        background: none;\n    }\n\n\n    .available_tokens\n    {\n        position: relative;\n        z-index: 9;\n\n        flex: 1 0 auto;\n\n        background: #170232;\n    }\n\n\n    .searching .available_tokens\n    {\n        overflow: auto;\n        flex: none;\n\n        height: var(--tg-viewport-stable-height);\n        margin-bottom: -14px;\n        padding-bottom: 14px;\n\n        overscroll-behavior-y: contain;\n    }\n\n\n    .empty\n    {\n        font-size: 20px;\n        font-weight: 500;\n\n        padding: 10px;\n\n        text-align: center;\n\n        opacity: .7;\n    }\n\n\n\n    .searching .tokens\n    {\n        margin: 0;\n    }\n\n\n    .tokens .count\n    {\n        font-size: 14px;\n\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n\n        padding: 2px 10px;\n\n        color: rgba(255,255,255,.6);\n\n        gap: 4px;\n    }\n\n\n    .tokens .count b\n    {\n        color: #fff;\n    }\n\n\n    .tokens .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .tokens .list > *\n    {\n        margin-top: 8px;\n    }\n\n\n\n    .inside_modal .cont\n    {\n        padding: 0;\n    }\n\n\n    .inside_modal .tokens .count\n    {\n        display: none;\n    }\n</style>","import script from \"./AvailableTokens.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AvailableTokens.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AvailableTokens.vue?vue&type=style&index=0&id=96d84aba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-96d84aba\"]])\n\nexport default __exports__","<template>\n    <!-- QR code button -->\n    <button class=\"btn\" @click.prevent=\"openScanner()\">\n        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_scaner\"></use></svg>\n    </button>\n</template>\n\n\n<script setup>\n    // Open QR popup\n    function openScanner() {\n        Telegram.WebApp.showScanQrPopup({ text: '' })\n    }\n</script>\n\n\n<style scoped>\n    .btn\n    {\n        position: absolute;\n        z-index: 9;\n        top: 17px;\n        right: 12px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 28px;\n        height: 28px;\n        margin-left: auto;\n\n        transition: .2s linear;\n\n        background: url(@/assets/bg_action_btn.svg) 0 0/100% 100% no-repeat;\n    }\n\n\n    .btn.in_field\n    {\n        top: 0;\n        right: 16px;\n        bottom: 0;\n\n        margin: auto 0;\n\n        background: none;\n    }\n\n\n    .btn .icon\n    {\n        display: block;\n\n        width: 14px;\n        height: 14px;\n    }\n\n\n    .btn:active\n    {\n        color: #5b3895;\n        background: url(@/assets/bg_action_btn_a.svg) 0 0/100% 100% no-repeat;\n    }\n</style>","import script from \"./QRCodeScanner.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./QRCodeScanner.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./QRCodeScanner.vue?vue&type=style&index=0&id=721280d5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-721280d5\"]])\n\nexport default __exports__","<template>\n    <!-- Networks chooser -->\n    <div class=\"choose_network\" ref=\"target\" :class=\"{ disabled: !store.forcedUnlock && (!store.isInitialized || !store.isBalancesGot || !store.isStakedBalancesGot || !store.isRewardsGot) }\">\n        <!-- Current chain -->\n        <div class=\"btn\" @click.prevent=\"showDropdown = !showDropdown\" :class=\"{ active: showDropdown }\">\n            <!-- Current chain logo -->\n            <div class=\"logo\">\n                <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n            </div>\n\n            <!-- Current chain name -->\n            <div class=\"name\">\n                {{ store.networks[store.currentNetwork].name }}\n            </div>\n\n            <!-- Current chain arrow -->\n            <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n        </div>\n\n\n        <!-- Dropdown -->\n        <div class=\"mini_modal\" v-show=\"showDropdown\">\n            <div class=\"scroll\">\n                <!-- Chain -->\n                <div v-for=\"(network, index) in store.networks\" :key=\"index\">\n                    <div class=\"network\" :class=\"{ active: store.currentNetwork == network.alias }\" @click.prevent=\"changeNetwork(network.alias)\">\n                        <!-- Chain logo -->\n                        <div class=\"logo\">\n                            <img :src=\"getNetworkLogo(network.chain_id)\" alt=\"\">\n                        </div>\n\n                        <!-- Chain name -->\n                        <div class=\"name\">\n                            {{ network.name }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { onClickOutside } from '@vueuse/core'\n    import { getNetworkLogo } from '@/utils'\n\n\n    const store = useGlobalStore(),\n        showDropdown = ref(false),\n        target = ref(null)\n\n\n    // Click outside\n    onClickOutside(target, () => showDropdown.value = false)\n\n\n    // Change network\n    function changeNetwork(chain) {\n        // Hide dropdown\n        showDropdown.value = false\n\n        // Set current network\n        store.setCurrentNetwork(chain)\n    }\n</script>\n\n\n<style scoped>\n    .choose_network\n    {\n        position: absolute;\n        z-index: 9;\n        top: 11px;\n        left: 8px;\n\n        transition: opacity .2s linear;\n    }\n\n\n    .choose_network.disabled\n    {\n        pointer-events: none;\n\n        opacity: .5;\n    }\n\n\n\n    .choose_network .btn\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        min-width: 148px;\n        padding: 6px 10px;\n\n        text-align: left;\n        white-space: nowrap;\n\n        border-radius: 8px;\n        background: #5b3895;\n    }\n\n\n    .choose_network .btn .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 28px;\n        height: 28px;\n        margin-right: 12px;\n    }\n\n\n    .choose_network .btn .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .choose_network .btn .name\n    {\n        width: calc(100% - 60px);\n    }\n\n\n    .choose_network .btn .arr\n    {\n        display: block;\n\n        width: 12px;\n        height: 8px;\n        margin-left: 8px;\n\n        transition: transform .2s linear;\n    }\n\n\n    .choose_network .btn.active\n    {\n        border-radius: 8px 8px 0 0;\n    }\n\n    .choose_network .btn.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n\n\n    .choose_network .mini_modal\n    {\n        position: absolute;\n        top: 100%;\n        left: 0;\n\n        width: 100%;\n        padding: 0 10px 6px;\n\n        border-radius: 0 0 8px 8px;\n        background: #5b3895;\n    }\n\n\n    .choose_network .scroll\n    {\n        overflow: auto;\n\n        max-height: 345px;\n\n        overscroll-behavior-y: contain;\n    }\n\n\n    .choose_network .scroll::-webkit-scrollbar\n    {\n        width: 4px;\n        height: 4px;\n    }\n\n\n    .choose_network .scroll > *\n    {\n        margin-top: 12px;\n    }\n\n\n    .choose_network .network\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n        padding: 2px 4px;\n\n        transition: background .2s linear;\n        text-align: left;\n\n        border-radius: 4px;\n    }\n\n\n    .choose_network .network .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 28px;\n        height: 28px;\n    }\n\n\n    .choose_network .network .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .choose_network .network .name\n    {\n        width: calc(100% - 40px);\n    }\n\n\n    .choose_network .network:active\n    {\n        background: #a072ea;\n    }\n\n\n    .choose_network .network.active\n    {\n        display: none;\n    }\n</style>","import script from \"./NetworkChooser.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NetworkChooser.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NetworkChooser.vue?vue&type=style&index=0&id=2702f9ad&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2702f9ad\"]])\n\nexport default __exports__","<template>\n    <!-- Currency button -->\n    <div class=\"currency\" @click.prevent=\"store.updateCurrentCurrency()\">\n        {{ store.currentCurrency }}\n    </div>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/store'\n\n\n    const store = useGlobalStore()\n</script>\n\n\n<style scoped>\n    .currency\n    {\n        font-size: 12px;\n\n        position: absolute;\n        z-index: 9;\n        top: 65px;\n        right: 12px;\n\n        min-width: 32px;\n        padding: 2px 4px;\n\n        transition: .2s linear;\n        text-align: center;\n        white-space: nowrap;\n\n        border-radius: 5px;\n        background: #5b3895;\n    }\n\n\n    .currency:active\n    {\n        color: #5b3895;\n        background: #fff;\n    }\n</style>","import script from \"./Currency.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Currency.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Currency.vue?vue&type=style&index=0&id=259fda50&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-259fda50\"]])\n\nexport default __exports__","<template>\n    <!-- Current address -->\n    <div class=\"address\" @click.prevent=\"copyHandler()\">\n        <!-- Current address icon -->\n        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_copy2\"></use></svg>\n\n        <!-- Current address value -->\n        <span>{{ store.currentAddress.slice(0, 9) + '...' + store.currentAddress.slice(-6) }}</span>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useClipboard } from '@vueuse/core'\n    import { useGlobalStore } from '@/store'\n    import { useNotification } from '@kyvg/vue3-notification'\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        { copy } = useClipboard()\n\n\n    // Copy handler\n    function copyHandler() {\n        // Copy\n        copy(store.currentAddress)\n\n        // Clean notifications\n        notification.notify({\n            group: 'default',\n            clean: true\n        })\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            speed: 200,\n            duration: 1000,\n            title: i18n.global.t('message.notification_copied_title'),\n            type: 'copied'\n        })\n    }\n</script>\n\n\n<style scoped>\n    .address\n    {\n        font-size: 12px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        padding: 2px;\n\n        cursor: pointer;\n        transition: .2s linear;\n\n        border-radius: 5px;\n        background: #5b3895;\n\n        gap: 4px;\n    }\n\n\n    .address .icon\n    {\n        display: block;\n\n        width: 14px;\n        height: 14px;\n    }\n\n\n    .address:active\n    {\n        color: #5b3895;\n        background: #fff;\n    }\n</style>","import script from \"./Address.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Address.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Address.vue?vue&type=style&index=0&id=5c93b91f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5c93b91f\"]])\n\nexport default __exports__","<template>\n    <!-- Available section -->\n    <div class=\"available_section\">\n        <!-- Balance -->\n        <div class=\"balance\">\n            <!-- Balance label -->\n            <div class=\"label\">\n                {{ $t('message.current_balance_title') }}\n            </div>\n\n            <!-- Loader -->\n            <Loader v-if=\"!store.isInitialized || !store.isBalancesGot\" />\n\n            <!-- Balance value -->\n            <div v-else class=\"val\">\n                <span @click.prevent=\"store.updateAllBalances()\">\n                    {{ formatTokenCost(calcBalancesCost()) }}\n                </span>\n            </div>\n\n            <!-- Address -->\n            <KeepAlive>\n            <Address />\n            </KeepAlive>\n        </div>\n\n\n        <!-- Actions -->\n        <div class=\"actions\">\n            <!-- Send button -->\n            <button class=\"btn\" @click.prevent=\"emitter.emit('search_focus')\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_send\"></use></svg>\n                </div>\n\n                <div>{{ $t('message.btn_send') }}</div>\n            </button>\n\n            <!-- Receive button -->\n            <router-link to=\"/account/receive\" class=\"btn\" :class=\"{ disabled: !store.currentAddress }\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_receive\"></use></svg>\n                </div>\n\n                <div>{{ $t('message.btn_receive') }}</div>\n            </router-link>\n\n            <!-- Stake button -->\n            <button class=\"btn\" @click.prevent=\"emitter.emit('swiper_slideTo', { index: 1 })\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_stake\"></use></svg>\n                </div>\n\n                <div>{{ $t('message.btn_stake') }}</div>\n            </button>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { formatTokenCost, calcBalancesCost } from '@/utils'\n    import { useGlobalStore } from '@/store'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import Address from '@/components/account/Address.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .available_section\n    {\n        position: relative;\n        z-index: 3;\n\n        height: 266px;\n        padding: 67px 22px 19px;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: 48px;\n\n        background: none;\n    }\n\n\n    .loader_wrap > *\n    {\n        width: 20px;\n        height: 20px;\n    }\n</style>","import script from \"./Available.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Available.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Available.vue?vue&type=style&index=0&id=4778253a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4778253a\"]])\n\nexport default __exports__","<template>\n    <div class=\"animation\" ref=\"container\" :class=\"{ show: !loading }\">\n        <div class=\"top\" ref=\"top\" :style=\"`height: ${topHeight}px;`\"></div>\n\n        <div class=\"bottom\" :style=\"`height: ${bottomHeight}px;`\"></div>\n\n        <svg>\n            <filter id=\"gooey\">\n                <feGaussianBlur stdDeviation=\"10\"/>\n                <feColorMatrix values=\"1 0 0 0 0\n                        0 1 0 0 0\n                        0 0 1 0 0\n                        0 0 0 20 -10\"/>\n            </filter>\n        </svg>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref, watch, computed, onMounted, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { calcAvailableAmount, calcStakedAmount } from '@/utils'\n\n\n    const store = useGlobalStore(),\n        count = 10,\n        topBar = ref(null),\n        container = ref(null),\n        loading = ref(true),\n        topHeight = ref(0),\n        bottomHeight = ref(0),\n        availableAmount = calcAvailableAmount(),\n        stakedAmount = calcStakedAmount()\n\n\n    onBeforeMount(() => {\n        // Total tokens\n        let sumAmounts = parseInt(availableAmount) + parseInt(stakedAmount),\n            totalHeight = 266\n\n        // Get heights\n        topHeight.value = Math.floor(totalHeight * 0.25 * (stakedAmount / sumAmounts))\n        bottomHeight.value = Math.floor(totalHeight * 0.25 * (availableAmount / sumAmounts))\n    })\n\n\n    onMounted(() => {\n        if (store.isUnstakingBalancesGot && store.unstakingBalances.length) {\n            // Generate balls\n            for(let i = 0; i < count; i++) {\n                container.value.insertBefore(randomizedBall(), topBar.value)\n            }\n        }\n\n        // Show animation\n        setTimeout(() => loading.value = false, 750)\n    })\n\n\n    watch(computed(() => store.isUnstakingBalancesGot), () => {\n        if (store.isUnstakingBalancesGot && store.unstakingBalances.length) {\n            // Generate balls\n            for(let i = 0; i < count; i++) {\n                container.value.insertBefore(randomizedBall(), topBar.value)\n            }\n        }\n    })\n\n\n    function randomizedBall() {\n        let ball = document.createElement('div'),\n            randomSize = getRandomBetween(40, 25),\n            translate = getRandomBetween(container.value.clientWidth - 40, 0)\n\n        ball.classList.add('ball')\n\n        ball.style.setProperty('--anim-delay', `${getRandomBetween(9, 0, 3)}s`)\n        ball.style.setProperty('--transform-start', `translateX(${translate}px) translateY(-${randomSize}px)`)\n        ball.style.setProperty('--transform-x', `translateX(${translate}px)`)\n        ball.style.setProperty('--size', `${randomSize}px`)\n\n        return ball\n    }\n\n\n    function getRandomBetween(max, min, decimalPlaces = 0) {\n        return (Math.random() * (max - min) + min).toFixed(decimalPlaces)\n    }\n</script>\n\n\n<style>\n    .animation\n    {\n        position: absolute;\n        z-index: 1;\n        top: -4px;\n        left: -12%;\n\n        width: 124%;\n        height: calc(100% + 8px);\n\n        transition: opacity .35s linear;\n        pointer-events: none;\n\n        opacity: 0;\n\n        filter: url(#gooey);\n    }\n\n\n    .animation.show\n    {\n        opacity: .1;\n    }\n\n\n    .animation .top,\n    .animation .bottom\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n\n        background: #fff;\n    }\n\n\n    .animation .bottom\n    {\n        top: auto;\n        bottom: 0;\n    }\n\n\n    .animation .ball\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: var(--size);\n        height: var(--size);\n\n        animation: fall 10s infinite;\n        animation-delay: var(--anim-delay);\n\n        color: #fff;\n        border-radius: 50%;\n        background: #fff;\n    }\n\n\n\n    @keyframes fall\n    {\n        from\n        {\n            transform: var(--transform-start);\n        }\n        100%\n        {\n            transform: var(--transform-x) translateY(306px);\n        }\n    }\n\n\n    .animation svg\n    {\n        position: absolute !important;\n\n        display: none;\n        overflow: hidden;\n        clip: rect(1px, 1px, 1px, 1px);\n\n        width: 1px;\n        height: 1px;\n\n        white-space: nowrap;\n    }\n</style>","import script from \"./Animation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Animation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Animation.vue?vue&type=style&index=0&id=c7c7edae&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <!-- Staked section -->\n    <div class=\"staked_section\">\n        <!-- Balance -->\n        <div class=\"balance\">\n            <!-- Balance label -->\n            <div class=\"label\">\n                {{ $t('message.stacked_balance_title') }}\n            </div>\n\n            <!-- Loader -->\n            <Loader v-if=\"!store.isInitialized || !store.isStakedBalancesGot\" />\n\n            <!-- Balance value -->\n            <div v-else class=\"val\">\n                <span @click.prevent=\"store.updateAllBalances()\">\n                    {{ formatTokenCost(calcStakedBalancesCost()) }}\n                </span>\n            </div>\n\n            <!-- Address -->\n            <KeepAlive>\n            <Address />\n            </KeepAlive>\n        </div>\n\n\n        <!-- Actions -->\n        <div class=\"actions\">\n            <!-- Stake button -->\n            <router-link to=\"/account/stake\" class=\"btn stake_btn\" :class=\"{ disabled: !store.isBalancesGot && !store.isStakedBalancesGot }\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_stake\"></use></svg>\n                </div>\n\n                <div>{{ $t('message.btn_stake') }}</div>\n            </router-link>\n\n            <!-- Unstake button -->\n            <router-link to=\"/account/unstake\" class=\"btn\" :class=\"{ disabled: !store.isBalancesGot }\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_unstake\"></use></svg>\n                </div>\n\n                <div>{{ $t('message.btn_unstake') }}</div>\n            </router-link>\n\n            <!-- Redelegate button -->\n            <router-link to=\"/account/redelegate\" class=\"btn\" :class=\"{ disabled: !store.isStakedBalancesGot }\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_redelegate\"></use></svg>\n                </div>\n\n                <div>{{ $t('message.btn_redelegate') }}</div>\n            </router-link>\n        </div>\n\n\n        <!-- Animation -->\n        <Animation v-if=\"store.isInitialized && props.swiperActiveIndex == 1\" />\n    </div>\n</template>\n\n\n<script setup>\n    import { formatTokenCost, calcStakedBalancesCost } from '@/utils'\n    import { useGlobalStore } from '@/store'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import Address from '@/components/account/Address.vue'\n    import Animation from '@/components/account/Animation.vue'\n\n\n    const props = defineProps(['swiperActiveIndex']),\n        store = useGlobalStore()\n</script>\n\n\n<style scoped>\n    .staked_section\n    {\n        position: relative;\n        z-index: 3;\n\n        height: 266px;\n        overflow: hidden;\n        padding: 67px 22px 19px;\n        border-radius: 0 0 20px 20px;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: 48px;\n\n        background: none;\n    }\n\n\n    .loader_wrap > *\n    {\n        width: 20px;\n        height: 20px;\n    }\n</style>","import script from \"./Staked.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Staked.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Staked.vue?vue&type=style&index=0&id=09be048c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-09be048c\"]])\n\nexport default __exports__","<template>\n    <div class=\"token\">\n        <!-- Claim rewards token logo -->\n        <div class=\"logo\">\n            <img :src=\"props.balance.token_info.logo_URIs.svg\" alt=\"\" loading=\"lazy\">\n        </div>\n\n        <div>\n            <!-- Claim rewards token denom -->\n            <div class=\"denom\">\n                {{ props.balance.token_info.symbol }}\n            </div>\n\n            <!-- Claim rewards token cost -->\n            <div class=\"cost\">\n                ~ <div class=\"odometer\" v-odometer=\"props.rewardsCost\"></div> $\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    const props = defineProps(['balance', 'rewardsCost'])\n</script>\n\n\n<style scoped>\n    .token\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 100%;\n    }\n\n\n    .token .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 55px;\n        height: 55px;\n        margin-right: 8px;\n        padding: 8px;\n\n        border-radius: 11px;\n    }\n\n\n    .token .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .token .logo + *\n    {\n        width: calc(100% - 63px);\n    }\n\n\n    .token .denom\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        text-transform: uppercase;\n    }\n\n\n    .token .price\n    {\n        font-size: 16px;\n        font-weight: 500;\n    }\n\n\n    .token .cost\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 20px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        white-space: nowrap;\n    }\n\n\n    .token .cost .odometer\n    {\n        margin: 0 4px;\n    }\n</style>","import script from \"./ClaimRewardsItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClaimRewardsItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClaimRewardsItem.vue?vue&type=style&index=0&id=9c97189c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9c97189c\"]])\n\nexport default __exports__","<template>\n    <!-- Claim rewards -->\n    <section class=\"claim_rewards\">\n        <div class=\"cont\">\n            <!-- Claim rewards data -->\n            <div class=\"data_wrap\">\n                <div class=\"data\">\n                    <!-- Loader -->\n                    <Loader v-if=\"!store.isInitialized || !isReady\" />\n\n\n                    <template v-else>\n                    <!-- Claim rewards info -->\n                    <div class=\"info\">\n                        <!-- Claim rewards title -->\n                        <div class=\"title\">\n                            {{ $t('message.claim_rewards_title') }}\n                        </div>\n\n                        <!-- Claim rewards cost -->\n                        <div class=\"cost\">\n                            ~ <div class=\"odometer\" v-odometer=\"rewardsCost\"></div> $\n                        </div>\n                    </div>\n\n\n                    <!-- Claim rewards button -->\n                    <router-link to=\"/account/claim_confirm\" class=\"btn\" :class=\"{ disabled: !rewardsCost }\">\n                        <span>{{ $t('message.btn_claim') }}</span>\n                    </router-link>\n\n\n                    <!-- Claim rewards spoler button -->\n                    <button class=\"spoler_btn\" @click.prevent=\"showDropdown = !showDropdown\" :class=\"{ active: showDropdown }\" v-if=\"rewardsCost\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n                    </button>\n\n\n                    <!-- Claim rewards dropdown -->\n                    <div class=\"dropdown\" v-show=\"showDropdown\">\n                        <!-- Claim rewards list -->\n                        <div class=\"list\">\n                            <div class=\"token_wrap\" v-for=\"(balance, index) in store.rewardsBalances\" :key=\"index\">\n                                <!-- Claim rewards token -->\n                                <ClaimRewardsItem :balance :rewardsCost />\n                            </div>\n                        </div>\n                    </div>\n                    </template>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, watch, computed, onBeforeMount, onBeforeUnmount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { calcRewardsBalancesCost, calcStakedBalancesCost } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import ClaimRewardsItem from '@/components/account/ClaimRewardsItem.vue'\n\n\n    const store = useGlobalStore(),\n        isReady = ref(false),\n        showDropdown = ref(false),\n        rewardsCost = ref(0),\n        secondProfit = ref(0),\n        stakedBalancesCost = ref(0),\n        intervalID = ref(null)\n\n\n    onBeforeMount(async() => {\n        if (store.isInitialized) {\n            // Get rewards\n            await getRewards()\n        }\n    })\n\n\n    onBeforeUnmount(() => {\n        // Clear interval\n        clearInterval(intervalID.value)\n    })\n\n\n    watch(computed(() => store.isInitialized), async () => {\n        if (store.isInitialized) {\n            // Clear interval\n            clearInterval(intervalID.value)\n        }\n\n        // Get rewards\n        await getRewards()\n    })\n\n\n    watch(computed(() => store.isRewardsGot), () => {\n        // Ready status\n        isReady.value = false\n\n        // Clear interval\n        clearInterval(intervalID.value)\n\n        if (store.isRewardsGot) {\n            // Calc second profit\n            calcSecondProfit()\n\n            // Update rewards cost\n            updateRewardsCost()\n\n            // Ready status\n            isReady.value = true\n        }\n    })\n\n\n    // Get rewards\n    async function getRewards() {\n        if (store.isInitialized) {\n            // Ready status\n            isReady.value = false\n\n            // Get rewards\n            await store.getRewards()\n        }\n    }\n\n\n    // Calc second profit\n    function calcSecondProfit() {\n        // Get Staked balances cost\n        stakedBalancesCost.value = calcStakedBalancesCost('USD')\n\n        // Set second percent\n        secondProfit.value = stakedBalancesCost.value * store.networks[store.currentNetwork].APR / (365 * 24 * 60 * 60)\n    }\n\n\n    // Update rewards cost\n    function updateRewardsCost() {\n        // Set rewards cost\n        rewardsCost.value = calcRewardsBalancesCost('USD')\n\n        // Update rewards with timeout\n        if (!rewardsCost.value && stakedBalancesCost.value) {\n            setTimeout(async () => await getRewards(), 5000)\n        }\n\n        // Update rewards cost\n        if (rewardsCost.value != null) {\n            intervalID.value = setInterval(() => rewardsCost.value += secondProfit.value * 2.5, 3000)\n        }\n    }\n</script>\n\n\n<style scoped>\n    .claim_rewards\n    {\n        position: relative;\n        z-index: 9;\n\n        padding-top: 12px;\n\n        background: #170232;\n    }\n\n\n    .account_page.searching .claim_rewards\n    {\n        display: none;\n    }\n\n\n    .data_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .data\n    {\n        position: relative;\n\n        display: flex;\n        align-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        padding: 5px 9px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: 60px;\n\n        background: none;\n    }\n\n\n    .loader_wrap > *\n    {\n        width: 24px;\n        height: 24px;\n    }\n\n\n\n    .title\n    {\n        font-size: 14px;\n        font-weight: 500;\n\n        color: #b78ce6;\n    }\n\n\n\n    .cost\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 20px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        white-space: nowrap;\n    }\n\n\n    .cost .odometer\n    {\n        margin: 0 4px;\n    }\n\n\n\n    .btn\n    {\n        font-size: 16px;\n        font-weight: 700;\n\n        position: relative;\n\n        width: 71px;\n        height: 34px;\n        margin: 2px 0 2px auto;\n        padding: 1px;\n\n        text-align: center;\n        text-decoration: none;\n\n        color: currentColor;\n        border-radius: 8px;\n        background: linear-gradient(to bottom,  #67c3f8 0%,#2474ca 100%);\n    }\n\n\n    .btn span\n    {\n        line-height: 30px;\n\n        display: block;\n\n        height: 32px;\n\n        border-radius: 7px;\n        background: linear-gradient(to bottom,  #66baf8 0%,#2e89eb 100%);\n    }\n\n\n    .btn.disabled\n    {\n        pointer-events: none;\n\n        opacity: .5;\n        background: #5b3895;\n    }\n\n\n    .btn.disabled span\n    {\n        background: none;\n    }\n\n\n    .btn:active span\n    {\n        background: linear-gradient(to bottom,  #195fa8 0%,#66baf7 100%);\n    }\n\n\n\n    .spoler_btn\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 22px;\n    }\n\n\n    .spoler_btn .icon\n    {\n        display: block;\n\n        width: 10px;\n        height: 11px;\n\n        transition: .2s linear;\n    }\n\n\n    .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n\n\n    .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n</style>","import script from \"./ClaimRewards.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ClaimRewards.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ClaimRewards.vue?vue&type=style&index=0&id=b39f0a02&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b39f0a02\"]])\n\nexport default __exports__","<template>\n    <div ref=\"swipeable\" :class=\"{ swiped: isSwiped }\"\n        @touchstart=\"handleTouchStart\"\n        @touchmove=\"handleTouchMove\"\n    >\n        <!-- Token validator -->\n        <slot name=\"validator\"></slot>\n\n        <!-- Token cancel button -->\n        <slot name=\"cancel_btn\"></slot>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref } from 'vue'\n    import { useGlobalStore } from '@/store'\n\n\n    const store = useGlobalStore(),\n        swipeable = ref(null),\n        minSwipeDistance = 30,\n        startX = ref(0),\n        deltaX = ref(0),\n        isSwiped = ref(false)\n\n\n    // Handle touch start\n    function handleTouchStart(e) {\n        if (store.networks[store.currentNetwork].isunstakingCancelSupport) {\n            startX.value = e.touches[0].clientX\n        }\n    }\n\n\n    // Handle touch move\n    function handleTouchMove(e) {\n        if (store.networks[store.currentNetwork].isunstakingCancelSupport) {\n            let touch = e.touches[0]\n\n            // Calc horizontal offset\n            deltaX.value = touch.clientX - startX.value\n\n            // Direction definitions\n            deltaX.value > minSwipeDistance\n                ? isSwiped.value = false\n                : isSwiped.value = true\n        }\n    }\n</script>","import script from \"./UnstakingTokensItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UnstakingTokensItem.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <!-- Unstaking tokens -->\n    <section class=\"unstaking_tokens\" v-if=\"store.isUnstakingBalancesGot && store.unstakingBalances.length\">\n        <div class=\"cont\">\n            <!-- Unstaking tokens title -->\n            <div class=\"title\">\n                {{ $t('message.unstaking_tokens_title') }}\n            </div>\n\n            <!-- Unstaking tokens data -->\n            <div class=\"data_wrap\">\n                <div class=\"data\">\n                    <!-- Loader -->\n                    <Loader v-if=\"isProcess\" />\n\n                    <!-- Unstaking tokens info -->\n                    <div class=\"info\">\n                        <!-- Unstaking tokens info label -->\n                        <div class=\"label\">\n                            {{ $t('message.unstaking_tokens_label') }}\n\n                            <!-- Unstaking tokens countdown -->\n                            <vue-countdown :time=\"dateCalc(getEarliestDate()) - new Date()\" v-slot=\"{ days, hours, minutes }\">\n                                <span v-if=\"days > 1\">{{ days }} {{ $t('message.unstaking_tokens_finish_days') }}</span>\n                                <span v-if=\"days == 1\">{{ days }} {{ $t('message.unstaking_tokens_finish_day') }}</span>\n                                <span v-if=\"!days\">{{ hours }}h {{ minutes }}m</span>\n                            </vue-countdown>\n                        </div>\n\n                        <!-- Unstaking token -->\n                        <div class=\"token\">\n                            <!-- Unstaking token logo -->\n                            <div class=\"logo\">\n                                <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n                            </div>\n\n                            <div>\n                                <!-- Unstaking token denom -->\n                                <div class=\"denom\">\n                                    {{ store.networks[store.currentNetwork].token_name }}\n                                </div>\n\n                                <!-- Unstaking token count -->\n                                <div class=\"count\">\n                                    {{ $t('message.unstaking_tokens_count_label') }} <b>{{ getUnstakingsCount() }}</b>\n                                </div>\n                            </div>\n\n                            <!-- Unstaking token amount -->\n                            <div class=\"amount\">\n                                <!-- Unstaking token amount value -->\n                                <div class=\"val\">\n                                    {{ formatTokenAmount(store.networks[store.currentNetwork].totalUnstakingTokens, store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n\n                                    {{ store.networks[store.currentNetwork].token_name }}\n                                </div>\n\n                                <!-- Unstaking token amount cost -->\n                                <div class=\"cost\">\n                                    {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, store.networks[store.currentNetwork].totalUnstakingTokens, store.networks[store.currentNetwork].exponent)) }}\n\n                                    {{ store.currentCurrencySymbol }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <!-- Unstaking tokens spoler button -->\n                    <button class=\"spoler_btn\" @click.prevent=\"showDropdown = !showDropdown\" :class=\"{ active: showDropdown }\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver\"></use></svg>\n                    </button>\n\n\n                    <!-- Unstaking tokens dropdown -->\n                    <div class=\"dropdown\" v-show=\"showDropdown\">\n                        <!-- Unstaking tokens list -->\n                        <div class=\"list\">\n                            <div v-for=\"(item, index) in store.unstakingBalances\" :key=\"index\">\n                                <!-- Unstaking token -->\n                                <UnstakingTokensItem class=\"item\" v-for=\"(entry, entryIndex) in item.entries\" :key=\"entryIndex\">\n                                    <template #validator>\n                                    <!-- Unstaking token validator -->\n                                    <div class=\"validator_wrap\">\n                                        <div class=\"validator\">\n                                            <!-- Unstaking token validator logo -->\n                                            <div class=\"logo\">\n                                                <img :src=\"`https://raw.githubusercontent.com/cosmostation/chainlist/main/chain/${store.networks[store.currentNetwork].prefix}/moniker/${item.validator_info.operator_address}.png`\" alt=\"\" loading=\"lazy\" @error=\"imageLoadError($event)\">\n\n                                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                                            </div>\n\n                                            <div>\n                                                <!-- Unstaking token validator moniker -->\n                                                <div class=\"moniker\">\n                                                    {{ item.validator_info.description.moniker }}\n                                                </div>\n\n                                                <!-- Unstaking token validator finish -->\n                                                <div class=\"finish\">\n                                                    <!-- Unstaking token validator finish label -->\n                                                    {{ $t('message.unstaking_tokens_finish_label') }}\n\n                                                    <!-- Unstaking token validator finish countdown -->\n                                                    <vue-countdown :time=\"dateCalc(entry.completion_time) - new Date()\" v-slot=\"{ days, hours, minutes }\">\n                                                        <span v-if=\"days > 1\">{{ days }} {{ $t('message.unstaking_tokens_finish_days') }}</span>\n                                                        <span v-if=\"days == 1\">{{ days }} {{ $t('message.unstaking_tokens_finish_day') }}</span>\n                                                        <span v-if=\"!days\">{{ hours }}h {{ minutes }}m</span>\n                                                    </vue-countdown>\n                                                </div>\n                                            </div>\n\n                                            <!-- Unstaking token validator amount -->\n                                            <div class=\"amount\">\n                                                <!-- Unstaking token validator amount value -->\n                                                <div class=\"val\">\n                                                    {{ formatTokenAmount(entry.balance, store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }) }}\n\n                                                    {{ store.networks[store.currentNetwork].token_name }}\n                                                </div>\n\n                                                <!-- Unstaking token validator amount cost -->\n                                                <div class=\"cost\">\n                                                    {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, entry.balance, store.networks[store.currentNetwork].exponent)) }}\n\n                                                    {{ store.currentCurrencySymbol }}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    </template>\n\n                                    <!-- Unstaking token cancel button -->\n                                    <template #cancel_btn v-if=\"store.networks[store.currentNetwork].isunstakingCancelSupport\">\n                                    <button class=\"cancel_btn\" @click.prevent=\"cancelUnstaking(item.validator_info.operator_address, entry)\">\n                                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n\n                                        <span>{{ $t('message.btn_cancel') }}</span>\n                                    </button>\n                                    </template>\n                                </UnstakingTokensItem>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount, inject } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { getNetworkLogo, calcTokenCost, formatTokenCost, formatTokenAmount, imageLoadError, dateCalc, signTx, sendTx, getExplorerLink } from '@/utils'\n    import { MsgCancelUnbondingDelegation } from 'cosmjs-types/cosmos/staking/v1beta1/tx'\n\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import UnstakingTokensItem from '@/components/account/UnstakingTokensItem.vue'\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        isProcess = ref(false),\n        showDropdown = ref(false),\n        msgAny = ref([])\n\n\n    onBeforeMount(() => {\n        // Get unstaking balances\n        store.getUnstakingBalances()\n    })\n\n\n    // Get earliest date\n    function getEarliestDate() {\n        let allDates = store.unstakingBalances.flatMap(item => item.entries.map(entry => new Date(entry.completion_time)))\n\n        return Math.min(...allDates)\n    }\n\n\n    // Get unstakings count\n    function getUnstakingsCount() {\n        let result = 0\n\n        // Calc\n        store.unstakingBalances.forEach(balance => result += balance.entries.length)\n\n        return result\n    }\n\n\n    // Cancel unstaking\n    async function cancelUnstaking(validator_address, entry) {\n        // Set message\n        msgAny.value.push({\n            typeUrl: '/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation',\n            value: MsgCancelUnbondingDelegation.fromPartial({\n                delegatorAddress: store.currentAddress,\n                validatorAddress: validator_address,\n                amount: [{\n                    denom: store.networks[store.currentNetwork].denom,\n                    amount: `${parseFloat(entry.balance.toString().replace(',', '.')).toFixed(store.networks[store.currentNetwork].exponent) * Math.pow(10, store.networks[store.currentNetwork].exponent)}`\n                }],\n                creation_height: entry.creation_height\n            })\n        })\n\n\n        // Set process status\n        isProcess.value = true\n\n        try {\n            // Sign Tx\n            let txBytes = await signTx(msgAny.value)\n\n            // Clean notifications\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: -100,\n                title: i18n.global.t('message.notification_tx_pending_title'),\n                type: 'pending',\n                data: {\n                    isCollapsible: true,\n                    explorer_link: getExplorerLink(store.currentNetwork)\n                }\n            })\n\n            // Send Tx\n            sendTx(txBytes)\n        } catch (error) {\n            console.log(error)\n\n            // Show error\n            showError(error)\n        }\n\n\n        // Show error message\n        function showError(error) {\n            // Get error code\n            let errorText = ''\n\n            // Get error title\n            error.code\n                ? errorText = i18n.global.t(`message.notification_tx_error_${error.code}`)\n                : errorText = i18n.global.t('message.notification_tx_error_rejected')\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: 6000,\n                title: 'Tx error',\n                text: errorText,\n                type: 'error'\n            })\n        }\n    }\n</script>\n\n\n<style scoped>\n    .unstaking_tokens\n    {\n        position: relative;\n        z-index: 9;\n\n        padding-top: 12px;\n\n        background: #170232;\n    }\n\n\n    .account_page.searching .unstaking_tokens\n    {\n        display: none;\n    }\n\n\n    .unstaking_tokens .title\n    {\n        font-size: 14px;\n\n        padding: 2px 10px;\n\n        opacity: .6;\n    }\n\n\n    .data_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .data\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        padding: 5px 9px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n\n    .label\n    {\n        font-size: 14px;\n        font-weight: 500;\n\n        margin-bottom: 4px;\n\n        color: #b78ce6;\n    }\n\n\n\n    .token\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n\n    .token .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 38px;\n        height: 38px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n\n    .token .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: 50%;\n    }\n\n\n    .token .denom\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        text-transform: uppercase;\n    }\n\n\n    .token .count\n    {\n        font-size: 14px;\n\n        color: rgba(183, 140, 230, .80);\n    }\n\n\n    .token .count b\n    {\n        font-weight: 600;\n    }\n\n\n    .token .amount\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        margin-left: auto;\n\n        text-align: right;\n    }\n\n\n    .token .amount .cost\n    {\n        font-weight: 400;\n\n        color: #836b9e;\n    }\n\n\n\n    .spoler_btn\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 22px;\n    }\n\n\n    .spoler_btn .icon\n    {\n        display: block;\n\n        width: 10px;\n        height: 11px;\n\n        transition: .2s linear;\n    }\n\n\n    .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n\n\n    .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .item\n    {\n        position: relative;\n    }\n\n\n\n    .validator_wrap\n    {\n        position: relative;\n        z-index: 3;\n\n        width: calc(100% + 18px);\n        margin-right: -9px;\n        margin-left: -9px;\n        padding: 1px;\n\n        cursor: pointer;\n        transition: transform .2s linear;\n\n        border-radius: 12px;\n    }\n\n\n    .validator\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding: 5px 9px;\n\n        border-radius: 11px;\n    }\n\n\n    .validator .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 38px;\n        height: 38px;\n        margin-right: 8px;\n        padding: 6px;\n\n        border-radius: 50%;\n        background: #950fff;\n    }\n\n\n    .validator .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .validator .logo .icon\n    {\n        display: none;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .validator .logo img.hide\n    {\n        display: none;\n    }\n\n    .validator .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n    .validator .logo + *\n    {\n        width: calc(100% - 179px);\n    }\n\n\n    .validator .moniker\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        overflow: hidden;\n\n        width: 100%;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .validator .finish\n    {\n        font-size: 14px;\n\n        color: rgba(183, 140, 230, .80);\n    }\n\n\n    .validator .amount\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        width: 125px;\n        max-width: 100%;\n        margin-left: auto;\n\n        text-align: right;\n    }\n\n\n    .validator .amount .cost\n    {\n        font-weight: 400;\n\n        color: #836b9e;\n    }\n\n\n    .swiped .validator_wrap\n    {\n        transform: translateX(-57px);\n\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n    .swiped .validator_wrap .validator\n    {\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n\n\n\n    .cancel_btn\n    {\n        font-weight: 300;\n\n        position: absolute;\n        top: 0;\n        right: -9px;\n\n        display: none;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 69px;\n        height: 100%;\n        padding-left: 12px;\n\n        text-align: center;\n\n        background: #c41e1e;\n    }\n\n\n    .swiped .cancel_btn\n    {\n        display: flex;\n    }\n\n\n    .cancel_btn .icon\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n        margin: 0 auto 4px;\n    }\n\n\n    .cancel_btn span\n    {\n        width: 100%;\n    }\n</style>","import script from \"./UnstakingTokens.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UnstakingTokens.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UnstakingTokens.vue?vue&type=style&index=0&id=defd91ec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-defd91ec\"]])\n\nexport default __exports__","<template>\n    <div class=\"token_wrap\">\n        <div class=\"token\">\n            <!-- Token logo -->\n            <div class=\"logo\">\n                <img :src=\"props.item.balance.token_info.logo_URIs.svg\" alt=\"\" loading=\"lazy\">\n            </div>\n\n            <div>\n                <!-- Token denom -->\n                <div class=\"denom\">\n                    {{ props.item.balance.token_info.symbol }}\n                </div>\n\n                <!-- Token validator -->\n                <div class=\"validator\">\n                    <!-- Token validator label -->\n                    <div class=\"label\">\n                        {{ $t('message.staked_tokens_validator_label') }}\n                    </div>\n\n                    <!-- Token validator moniker -->\n                    <div class=\"moniker\">\n                        {{ props.item.validator_info.description.moniker }}\n                    </div>\n\n                    <!-- Token validator logo -->\n                    <div class=\"logo\">\n                        <img :src=\"`https://raw.githubusercontent.com/cosmostation/chainlist/main/chain/${store.networks[store.currentNetwork].prefix}/moniker/${props.item.validator_info.operator_address}.png`\" alt=\"\" loading=\"lazy\" @error=\"imageLoadError($event)\">\n\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Token amount -->\n            <div class=\"amount\">\n                <!-- Token amount value -->\n                <div class=\"val\">\n                    {{ formatTokenAmount(props.item.balance.amount, props.item.balance.exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n                </div>\n\n                <!-- Token amount cost -->\n                <div class=\"cost\">\n                    {{ formatTokenCost(calcTokenCost(props.item.balance.token_info.symbol, props.item.balance.amount, props.item.balance.exponent)) }}\n\n                    {{ store.currentCurrencySymbol }}\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/store'\n    import { formatTokenAmount, formatTokenCost, calcTokenCost, imageLoadError } from '@/utils'\n\n\n    const props = defineProps(['item']),\n        store = useGlobalStore()\n</script>\n\n\n<style scoped>\n    .token_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .token\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        padding: 7px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .token .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 28px;\n        height: 28px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n\n    .token .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n    }\n\n\n    .token .logo > *\n    {\n        width: calc(100% - 192px);\n    }\n\n\n    .token .denom\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        text-transform: uppercase;\n    }\n\n\n    .token .validator\n    {\n        font-size: 14px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n\n        color: rgba(183, 140, 230, .80);\n    }\n\n\n    .token .validator .label\n    {\n        margin-right: 2px;\n    }\n\n\n    .token .validator .logo\n    {\n        width: 18px;\n        min-width: 18px;\n        height: 18px;\n        margin-left: 4px;\n\n        border-radius: 50%;\n        background: #950fff;\n    }\n\n\n    .token .validator .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .token .validator .logo .icon\n    {\n        display: none;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .token .validator .logo img.hide\n    {\n        display: none;\n    }\n\n    .token .validator .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n    .token .validator .moniker\n    {\n        overflow: hidden;\n\n        max-width: 100%;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .token .amount\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .token .amount .cost\n    {\n        font-size: 16px;\n        font-weight: 400;\n\n        color: #836b9e;\n    }\n\n\n    .token_wrap:active\n    {\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n    .token_wrap:active .token\n    {\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n</style>","import script from \"./StakedTokensItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StakedTokensItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./StakedTokensItem.vue?vue&type=style&index=0&id=be6f0a56&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-be6f0a56\"]])\n\nexport default __exports__","<template>\n    <!-- Staked tokens -->\n    <section class=\"staked_tokens\">\n        <div class=\"cont\">\n            <!-- Search -->\n            <Search source=\"staked\" />\n\n            <!-- Loader -->\n            <Loader v-if=\"!store.isInitialized || !store.isStakedBalancesGot\" />\n\n            <!-- Tokens -->\n            <div class=\"tokens\" v-else>\n                <!-- Tokens count -->\n                <div class=\"count\" v-if=\"searchResult.length === store.stakedBalances.length\">\n                    <b>{{ store.stakedBalances.length }}</b> {{ $t('message.staked_tokens_title') }}\n                </div>\n\n                <!-- Tokens list -->\n                <div class=\"list\" v-if=\"searchResult.length\">\n                    <!-- Tokens item -->\n                    <div class=\"item\" v-for=\"(item, index) in searchResult\" :key=\"index\" :style=\"`order: ${parseInt(calcTokenCost(item.balance.token_info.symbol, item.balance.amount, item.balance.exponent) * -1000000)};`\">\n                        <!-- Tokens token -->\n                        <StakedTokensItem :item />\n                    </div>\n                </div>\n\n                <!-- Tokens empty -->\n                <div class=\"empty\" v-else>\n                    {{ $t('message.search_empty_validator') }}\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, watch, ref, computed, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { calcTokenCost } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import Search from '@/components/Search.vue'\n    import StakedTokensItem from '@/components/account/StakedTokensItem.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        searchResult = ref([])\n\n\n    onBeforeMount(() => {\n        if (store.isStakedBalancesGot) {\n            // Default search result\n            searchResult.value = store.stakedBalances\n        }\n    })\n\n\n    watch(computed(() => store.isStakedBalancesGot), () => {\n        if (store.isStakedBalancesGot) {\n            // Default search result\n            searchResult.value = store.stakedBalances\n        }\n    })\n\n\n    // Event \"search\"\n    emitter.on('search', ({ query, source }) => {\n        if (source === 'staked') {\n            // Clear search result\n            searchResult.value = []\n\n            // Set new result\n            for (let key in store.stakedBalances) {\n                if (store.stakedBalances[key].validator_info.description.moniker.toLocaleLowerCase().includes(query.toLocaleLowerCase())) {\n                    searchResult.value.push(store.stakedBalances[key])\n                }\n            }\n        }\n    })\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px;\n\n        background: none;\n    }\n\n\n    .staked_tokens\n    {\n        position: relative;\n        z-index: 9;\n\n        flex: 1 0 auto;\n\n        background: #170232;\n    }\n\n\n    .searching .staked_tokens\n    {\n        overflow: auto;\n        flex: none;\n\n        height: var(--tg-viewport-stable-height);\n        margin-bottom: -14px;\n        padding-bottom: 14px;\n\n        overscroll-behavior-y: contain;\n    }\n\n\n    .empty\n    {\n        font-size: 20px;\n        font-weight: 500;\n\n        padding: 10px;\n\n        text-align: center;\n\n        opacity: .7;\n    }\n\n\n\n    .searching .tokens\n    {\n        margin: 0;\n    }\n\n\n    .tokens .count\n    {\n        font-size: 14px;\n\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n\n        padding: 2px 10px;\n\n        color: rgba(255,255,255,.6);\n\n        gap: 4px;\n    }\n\n\n    .tokens .count b\n    {\n        color: #fff;\n    }\n\n\n    .tokens .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .tokens .list > *\n    {\n        margin-top: 8px;\n    }\n</style>","import script from \"./StakedTokens.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StakedTokens.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./StakedTokens.vue?vue&type=style&index=0&id=5bc39e48&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5bc39e48\"]])\n\nexport default __exports__","<template>\n    <!-- Stats modal -->\n    <section class=\"modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <!-- Close button -->\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('close_stats_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <!-- Modal title -->\n                <div class=\"modal_title\">\n                    {{ $t('message.stats_title') }}\n                </div>\n\n                <!-- Stats modal data -->\n                <div class=\"info_wrap\">\n                    <div class=\"info\">\n                        <div>\n                            <!-- Stats modal label -->\n                            <div class=\"label\">\n                                {{ $t('message.stats_token_label') }}\n                            </div>\n\n                            <!-- Stats modal value -->\n                            <div class=\"val\">\n                                <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n\n                                <span>{{ store.networks[store.currentNetwork].token_name }}</span>\n                            </div>\n                        </div>\n\n                        <div>\n                            <!-- Stats modal label -->\n                            <div class=\"label\">\n                                {{ $t('message.stats_available_label') }}\n                            </div>\n\n                            <!-- Stats modal value -->\n                            <div class=\"val\">\n                                {{ formatTokenAmount(calcAvailableAmount(), store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 5 }).replace(',', '.') }}\n\n                                {{ store.networks[store.currentNetwork].token_name }}\n\n                                <div class=\"cost\">\n                                    ({{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, calcAvailableAmount(), store.networks[store.currentNetwork].exponent)) }}{{ store.currentCurrencySymbol }})\n                                </div>\n                            </div>\n                        </div>\n\n                        <div>\n                            <!-- Stats modal label -->\n                            <div class=\"label\">\n                                {{ $t('message.stats_staked_label') }}\n                            </div>\n\n                            <!-- Stats modal value -->\n                            <div class=\"val\">\n                                {{ formatTokenAmount(calcStakedAmount(), store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 5 }).replace(',', '.') }}\n\n                                {{ store.networks[store.currentNetwork].token_name }}\n\n                                <div class=\"cost\">\n                                    ({{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, calcStakedAmount(), store.networks[store.currentNetwork].exponent)) }}{{ store.currentCurrencySymbol }})\n                                </div>\n                            </div>\n                        </div>\n\n                        <div>\n                            <!-- Stats modal label -->\n                            <div class=\"label\">\n                                {{ $t('message.stats_personal_apr_label') }}\n                            </div>\n\n                            <!-- Stats modal value -->\n                            <div class=\"val gradient\">\n                                {{ personalAPR.toFixed(2) }}%\n                            </div>\n                        </div>\n\n                        <div>\n                            <!-- Stats modal label -->\n                            <div class=\"label\">\n                                {{ $t('message.stats_daily_profit_label') }}\n                            </div>\n\n                            <!-- Stats modal value -->\n                            <div class=\"val\">\n                                {{ formatTokenAmount(dailyProfit, store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 3 }).replace(',', '.') }}\n\n                                {{ store.networks[store.currentNetwork].token_name }}\n\n                                <div class=\"cost\">\n                                    ({{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, dailyProfit, store.networks[store.currentNetwork].exponent)) }}{{ store.currentCurrencySymbol }})\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, inject, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { formatTokenAmount, formatTokenCost, calcTokenCost, calcStakedAmount, getNetworkLogo, calcAvailableAmount } from '@/utils'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        personalAPR = ref(0),\n        dailyProfit = ref(0)\n\n\n    onBeforeMount(async () => {\n        // Calc personal APR\n        await calcPersonalAPR()\n\n        // Calc daily profit\n        calcDailyProfit()\n    })\n\n\n    // Calc personal APR\n    async function calcPersonalAPR() {\n        let aprs = []\n\n        // Calc\n        if (store.stakedBalances.length) {\n            // Calc APR with validator commission\n            store.stakedBalances.forEach(balance => aprs.push(\n                (store.networks[store.currentNetwork].APR * 100) - (store.networks[store.currentNetwork].APR * 100 * balance.validator_info.commission.commission_rates.rate))\n            )\n\n            // Calc sum\n            let sum = aprs.reduce((accumulator, currentValue) => accumulator + currentValue, 0)\n\n            // Average\n            personalAPR.value = sum / aprs.length\n        }\n    }\n\n\n    // Calc daily profit\n    function calcDailyProfit() {\n        // Calc\n        dailyProfit.value = calcStakedAmount() * (personalAPR.value / 100) / 365\n    }\n</script>\n\n\n<style scoped>\n    .modal_title\n    {\n        padding-left: 10px;\n    }\n\n\n\n    .info_wrap\n    {\n        margin-top: 16px;\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .info\n    {\n        position: relative;\n\n        padding: 7px 9px;\n\n        border-radius: 11px;\n        background: #06000e;\n    }\n\n\n\n    .info > *\n    {\n        font-size: 16px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n\n        white-space: nowrap;\n    }\n\n\n    .info > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .info .val\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-end;\n\n        margin-left: 20px;\n\n        text-align: right;\n    }\n\n\n    .info .val.gradient\n    {\n        background: linear-gradient(180deg, #dd93fe 0%, #aa36de 100%);\n        -webkit-background-clip: text;\n                background-clip: text;\n\n        -webkit-text-fill-color: transparent;\n    }\n\n\n    .info .val img\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n        margin-right: 4px;\n\n        border-radius: 50%;\n    }\n\n\n    .info .val .cost\n    {\n        margin-left: 4px;\n\n        color: #836b9e;\n    }\n</style>","import script from \"./StatsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StatsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./StatsModal.vue?vue&type=style&index=0&id=812e21c0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-812e21c0\"]])\n\nexport default __exports__","<template>\n    <!-- Update balances loader -->\n    <div class=\"update_balances_loader\"></div>\n\n    <section class=\"page_container account_page\" :class=\"{ searching: searchingClass }\">\n        <section class=\"top_block\" v-parallax>\n            <!-- Network selection -->\n            <KeepAlive>\n            <NetworkChooser v-if=\"store.currentNetwork\" />\n            </KeepAlive>\n\n            <div class=\"stats_btn\" v-if=\"swiperActiveIndex == 1 && store.isInitialized\" @click.prevent=\"openStatsModal()\">\n                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_stats\"></use></svg>\n            </div>\n\n            <!-- QR code scanner -->\n            <KeepAlive>\n            <QRCodeScanner v-if=\"store.isInitialized\" />\n            </KeepAlive>\n\n            <!-- Currency -->\n            <KeepAlive>\n            <CurrentCurrency />\n            </KeepAlive>\n\n            <!-- Swiper -->\n            <swiper-container :initial-slide=\"swiperActiveIndex\" :injectStyles=\"swiperInjectStyles\" speed=\"500\" touchMoveStopPropagation=\"true\" :pagination=\"{\n\t\t\t\ttype: 'bullets',\n\t\t\t\tclickable: true,\n\t\t\t\tbulletActiveClass: 'active'\n            }\">\n                <!-- Main section -->\n                <swiper-slide>\n                    <AvailableSection />\n                </swiper-slide>\n\n                <!-- Stacked section -->\n                <swiper-slide>\n                    <StakedSection :swiperActiveIndex />\n                </swiper-slide>\n            </swiper-container>\n        </section>\n\n\n        <!-- Available tokens -->\n        <AvailableTokens v-show=\"swiperActiveIndex == 0\" />\n\n        <!-- Claim rewards -->\n        <ClaimRewards v-show=\"swiperActiveIndex == 1\" />\n\n        <!-- Unstaking tokens -->\n        <UnstakingTokens v-show=\"swiperActiveIndex == 1\" v-if=\"store.isInitialized\" />\n\n        <!-- Stacked tokens -->\n        <StakedTokens v-show=\"swiperActiveIndex == 1\" />\n    </section>\n\n    <!-- Stats modal -->\n    <transition name=\"modal\">\n    <StatsModal v-if=\"showStatsModal\" />\n    </transition>\n\n    <!-- Overlay -->\n    <transition name=\"fade\">\n    <div class=\"modal_overlay\" @click.prevent=\"emitter.emit('close_any_modal')\" v-if=\"showStatsModal\"></div>\n    </transition>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount, onMounted, inject } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useUrlSearchParams } from '@vueuse/core'\n\n    // Components\n    import NetworkChooser from '@/components/account/NetworkChooser.vue'\n    import QRCodeScanner from '@/components/account/QRCodeScanner.vue'\n    import CurrentCurrency from '@/components/account/Currency.vue'\n\n    import AvailableSection from '@/components/account/Available.vue'\n    import StakedSection from '@/components/account/Staked.vue'\n\n    import AvailableTokens from '@/components/account/AvailableTokens.vue'\n    import ClaimRewards from '@/components/account/ClaimRewards.vue'\n    import UnstakingTokens from '@/components/account/UnstakingTokens.vue'\n    import StakedTokens from '@/components/account/StakedTokens.vue'\n\n    import StatsModal from '@/components/modal/StatsModal.vue'\n\n\n    const store = useGlobalStore(),\n        params = useUrlSearchParams('history'),\n        emitter = inject('emitter'),\n        searchingClass = ref(''),\n        showStatsModal = ref(false),\n        swiperEl = ref(null),\n        swiperActiveIndex = ref(params.activeSlide || 0),\n        swiperInjectStyles = [`\n            .swiper-horizontal > .swiper-pagination-bullets,\n            .swiper-pagination-bullets.swiper-pagination-horizontal,\n            .swiper-pagination-custom,\n            .swiper-pagination-fraction\n            {\n                top: auto;\n                bottom: 8px;\n\n                height: 4px;\n            }\n\n            .swiper-pagination-bullet\n            {\n                width: 8px;\n                height: 4px;\n\n                transition: .2s linear;\n                vertical-align: top;\n\n                opacity: 1;\n                border-radius: 2px;\n                background: #fff;\n            }\n\n            .swiper-pagination-bullet.active\n            {\n                width: 20px;\n            }\n        `]\n\n\n    onBeforeMount(async () => {\n        if (!store.isInitialized) {\n            // Init app\n            await store.initApp()\n        }\n    })\n\n\n    onMounted(() => {\n        // Get swiper instance\n        swiperEl.value = document.querySelector('swiper-container')\n\n        swiperEl.value.addEventListener('swiperslidechangetransitionstart', async e => {\n            // Set active slide\n            swiperActiveIndex.value = swiperEl.value.swiper.activeIndex\n        })\n    })\n\n\n    // Open stats modal\n    function openStatsModal() {\n        // Show Stats modal\n        showStatsModal.value = true\n\n        store.isAnyModalOpen = true\n    }\n\n\n    // Event \"swiper_slideTo\"\n    emitter.on('swiper_slideTo', ({ index }) => {\n        // Swiper move slides\n        swiperEl.value.swiper.slideTo(index, 500)\n\n        setTimeout(() => {\n            let stakeBtn = document.querySelector('.staked_section .stake_btn')\n\n            if (stakeBtn) {\n                stakeBtn.classList.add('click_animate')\n\n                setTimeout(() => stakeBtn.click(), 500)\n            }\n        }, 500)\n    })\n\n\n    // Event \"search_focus\"\n    emitter.on('search_focus', () => {\n        searchingClass.value = true\n    })\n\n\n    // Event \"search_focus\"\n    emitter.on('search_blur', () => {\n        searchingClass.value = false\n    })\n\n\n    // Event \"close_stats_modal\"\n    emitter.on('close_stats_modal', () => {\n        // Hide Stats modal\n        showStatsModal.value = false\n\n        // Update status\n        store.isAnyModalOpen = false\n    })\n\n\n    // Event \"close_any_modal\"\n    emitter.on('close_any_modal', () => {\n        // Hide Stats modal\n        showStatsModal.value = false\n\n        // Update status\n        store.isAnyModalOpen = false\n    })\n</script>\n\n\n<style>\n    .update_balances_loader\n    {\n        position: absolute;\n        top: 18px;\n        right: 0;\n        left: 0;\n\n        width: 18px;\n        height: 18px;\n        margin: 0 auto;\n\n        animation: spin 1s linear infinite;\n\n        border-top: 2px solid currentColor;\n        border-right: 2px solid transparent;\n        border-left: 2px solid currentColor;\n        border-radius: 50%;\n    }\n\n\n    .account_page\n    {\n        position: relative;\n        z-index: 9;\n\n        display: flex;\n        flex-direction: column;\n\n        padding-top: 266px;\n\n        transition: .2s linear;\n        transform: translateY(0%);\n\n        background: #170232;\n\n        will-change: transform, padding;\n    }\n\n\n    .account_page.updating\n    {\n        transform: translateY(54px);\n    }\n\n\n    .account_page.searching\n    {\n        padding-top: 0;\n    }\n\n\n\n    .top_block\n    {\n        position: fixed;\n        z-index: 3;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n\n        transition: opacity .2s linear;\n\n        opacity: 1;\n        border-radius: 0 0 20px 20px;\n\n        will-change: opacity;\n    }\n\n\n    .searching .top_block\n    {\n        pointer-events: none;\n\n        opacity: 0;\n    }\n\n\n    .top_block:before\n    {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n        pointer-events: none;\n\n        opacity: .8;\n        border-radius: inherit;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .top_block .balance\n    {\n        display: flex;\n        align-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        text-align: center;\n    }\n\n\n    .top_block .balance .val\n    {\n        font-size: 38px;\n        font-weight: 700;\n\n        width: 100%;\n\n        cursor: pointer;\n    }\n\n\n\n    .top_block .stats_btn\n    {\n        position: absolute;\n        z-index: 9;\n        top: 17px;\n        right: 60px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 28px;\n        height: 28px;\n\n        transition: .2s linear;\n\n        background: url(@/assets/bg_action_btn.svg) 0 0/100% 100% no-repeat;\n    }\n\n\n    .top_block .stats_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .top_block .stats_btn:active\n    {\n        color: #170232;\n        background-image: url(@/assets/bg_action_btn_a.svg);\n    }\n\n\n\n    .top_block .actions\n    {\n        position: relative;\n        z-index: 3;\n\n        display: flex;\n        align-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        margin-top: 20px;\n    }\n\n\n    .top_block .actions .btn\n    {\n        font-size: 12px;\n\n        position: relative;\n\n        width: 50px;\n        max-width: 100%;\n\n        transition: opacity .2s linear;\n        text-align: center;\n        text-decoration: none;\n\n        color: currentColor;\n    }\n\n\n    .top_block .actions .stake_btn:before\n    {\n        position: absolute;\n        top: -20px;\n        left: 50%;\n\n        display: block;\n\n        width: 80px;\n        height: 80px;\n        margin-left: -40px;\n\n        content: '';\n        transform: scale(.001, .001);\n\n        border-radius: 50%;\n        background-color: rgba(240, 248, 255, .65);\n    }\n\n\n    .top_block .actions .btn .icon\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 44px;\n        height: 44px;\n        margin: 0 auto 4px;\n\n        transition: .2s linear;\n\n        background: url(@/assets/bg_action_btn.svg) 0 0/100% 100% no-repeat;\n    }\n\n\n    .top_block .actions .btn .icon svg\n    {\n        display: block;\n\n        width: 22px;\n        height: 22px;\n    }\n\n\n    .top_block .actions .stake_btn.click_animate:before\n    {\n        -webkit-animation: effect_dylan .5s ease-out;\n                animation: effect_dylan .5s ease-out;\n    }\n\n\n    .top_block .actions .btn.disabled\n    {\n        pointer-events: none;\n\n        opacity: .4;\n    }\n\n\n    .top_block .actions .btn:active .icon:hover\n    {\n        color: #170232;\n        background: url(@/assets/bg_action_btn_a.svg) 0 0/100% 100% no-repeat;\n    }\n</style>","import script from \"./AccountPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AccountPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AccountPage.vue?vue&type=style&index=0&id=51dd7186&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","props","__props","emitter","inject","query","ref","setFocusEvent","setTimeout","emit","setBlurEvent","setEnterEvent","value","source","clearField","store","useGlobalStore","isCurrentToken","denom","currentToken","searchResult","onBeforeMount","isBalancesGot","balances","watch","computed","on","key","token_info","symbol","toLocaleLowerCase","includes","push","openScanner","Telegram","WebApp","showScanQrPopup","text","showDropdown","target","changeNetwork","chain","setCurrentNetwork","onClickOutside","i18n","notification","useNotification","copy","useClipboard","copyHandler","currentAddress","notify","group","clean","speed","duration","title","global","t","type","count","topBar","container","loading","topHeight","bottomHeight","availableAmount","calcAvailableAmount","stakedAmount","calcStakedAmount","randomizedBall","ball","document","createElement","randomSize","getRandomBetween","translate","clientWidth","classList","add","style","setProperty","max","min","decimalPlaces","Math","random","toFixed","sumAmounts","parseInt","totalHeight","floor","onMounted","isUnstakingBalancesGot","unstakingBalances","length","i","insertBefore","isReady","rewardsCost","secondProfit","stakedBalancesCost","intervalID","async","getRewards","isInitialized","calcSecondProfit","calcStakedBalancesCost","networks","currentNetwork","APR","updateRewardsCost","calcRewardsBalancesCost","setInterval","onBeforeUnmount","clearInterval","isRewardsGot","swipeable","minSwipeDistance","startX","deltaX","isSwiped","handleTouchStart","e","isunstakingCancelSupport","touches","clientX","handleTouchMove","touch","isProcess","msgAny","getEarliestDate","allDates","flatMap","item","entries","map","entry","Date","completion_time","getUnstakingsCount","result","forEach","balance","cancelUnstaking","validator_address","typeUrl","MsgCancelUnbondingDelegation","fromPartial","delegatorAddress","validatorAddress","amount","parseFloat","toString","replace","exponent","pow","creation_height","txBytes","signTx","data","isCollapsible","explorer_link","getExplorerLink","sendTx","error","console","log","showError","errorText","code","getUnstakingBalances","isStakedBalancesGot","stakedBalances","validator_info","description","moniker","personalAPR","dailyProfit","calcPersonalAPR","aprs","commission","commission_rates","rate","sum","reduce","accumulator","currentValue","calcDailyProfit","params","useUrlSearchParams","searchingClass","showStatsModal","swiperEl","swiperActiveIndex","activeSlide","swiperInjectStyles","openStatsModal","isAnyModalOpen","initApp","querySelector","addEventListener","swiper","activeIndex","index","slideTo","stakeBtn","click"],"sourceRoot":""}