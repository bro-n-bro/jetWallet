{"version":3,"file":"js/528.9621ea5d.js","mappings":"oMAESA,MAAM,e,GACPC,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,UAAQ,EAACC,EAAAA,EAAAA,IAAa,a,GAAjCC,G,kCADJC,EAAAA,EAAAA,IAEM,MAFNC,EAFJC,E,gBCCA,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,4pCCgTI,MAAMC,GAAQC,EAAAA,EAAAA,KACVC,GAASC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,IAAO,WACjBC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAYD,EAAAA,EAAAA,IAAI,GAChBE,GAASF,EAAAA,EAAAA,IAAI,MACbG,IAASH,EAAAA,EAAAA,IAAI,IACbI,IAAyBJ,EAAAA,EAAAA,IAAI,IAC7BK,IAAaL,EAAAA,EAAAA,IAAI,IACjBM,IAAoBN,EAAAA,EAAAA,KAAI,GACxBO,IAAsBP,EAAAA,EAAAA,KAAI,GAmB9B,SAASQ,GAAYC,GAEjB,IAAIC,EAAgBD,EAAEC,eAAiBC,OAAOD,cAC1CE,EAAaF,EAAcG,QAAQ,QACnCC,EAAgBF,EAAWG,MAAM,KAET,IAAxBD,EAAcE,SAEdf,EAAUgB,MAAQ,EAGlBC,YAAW,IAAMf,GAAOc,MAAQH,IAGhCI,YAAW,IAAMC,QAGO,IAAxBL,EAAcE,SAEdf,EAAUgB,MAAQ,EAGlBC,YAAW,IAAMf,GAAOc,MAAQH,IAGhCI,YAAW,IAAMC,OAEzB,CAIA,SAASA,KACLhB,GAAOc,MAAMG,KAAI,CAACH,EAAOI,IAAMC,GAAaL,EAAOI,IACvD,CAIA,SAASC,GAAaC,EAAKF,GACvB,IAAIG,GAAS,EAGRD,EAAIE,OAAOT,SACZQ,GAAS,GAIb,IAAIE,EAAQ,WAEPA,EAAMC,KAAKJ,EAAIE,UAChBD,GAAS,GAGbpB,GAAuBa,MAAMI,GAAKG,CACtC,CAIA,SAASI,GAAmBP,GACxB,IAAIG,EAASpB,GAAuBa,MAAMI,GAE1C,OAAe,OAAXG,QAA8BK,IAAXL,EACZ,GAGJA,EAAS,UAAY,OAChC,CAIA,SAASM,KAELzB,GAAWY,MAAMQ,OAAOT,OAClBV,GAAkBW,OAAQ,EAC1BX,GAAkBW,OAAQ,EAGhCV,GAAoBU,OAAQ,CAChC,EA7FAc,EAAAA,EAAAA,KAAc,KAEVhC,EAAQkB,OAAQ,CAAK,KAIzBe,EAAAA,EAAAA,IAAM/B,GAAW,KAEbE,GAAOc,MAAQ,GACfb,GAAuBa,MAAQ,GAC/BZ,GAAWY,MAAQ,GACnBV,GAAoBU,OAAQ,CAAK,IAsFrC,MAAMgB,IAAcC,EAAAA,EAAAA,KAAS,KACzB,IAAIV,GAAS,EAEb,OAAQvB,EAAUgB,OACd,KAAK,EACDO,EAAiC,KAAxBrB,GAAOc,MAAMD,QAAiBb,GAAOc,MAAMkB,OAAMC,GAAa,KAAPA,IAChE,MAEJ,KAAK,EACDZ,EAAiC,KAAxBrB,GAAOc,MAAMD,QAAiBb,GAAOc,MAAMkB,OAAMC,GAAa,KAAPA,IAChE,MAEJ,QACIZ,EAASlB,GAAkBW,MAC3B,MAGR,OAAOO,CAAM,IAKjBa,eAAeC,KAEY,GAAnBrC,EAAUgB,OAEVf,EAAOe,YAAcsB,EAAAA,EAAAA,IAAyBpC,GAAOc,MAAMuB,KAAK,YAG1D/C,EAAMgD,UAAUvC,EAAOe,MAAMd,OAAOuC,QAG1CxC,EAAOe,YAAc0B,EAAAA,EAAAA,IAA2BtC,GAAWY,aAGrDxB,EAAMmD,cAAcvC,GAAWY,QAIzCtB,EAAOkD,KAAK,cAChB,C,g7UCxcJ,MAAMtD,IAA2B,QAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://cosmos-telegram-signer/./src/components/Loader.vue","webpack://cosmos-telegram-signer/./src/components/Loader.vue?b8fd","webpack://cosmos-telegram-signer/./src/views/ImportWalletPage.vue","webpack://cosmos-telegram-signer/./src/views/ImportWalletPage.vue?8fc1"],"sourcesContent":["<template>\n    <!-- Loader -->\n    <div class=\"loader_wrap\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n        background: rgba(0, 0, 0, .5);\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=4d5f23d7\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=4d5f23d7&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <!-- Import wallet page -->\n    <section class=\"page_container import_wallet_page\">\n        <div class=\"cont\">\n            <!-- Import wallet page title -->\n            <div class=\"page_title\">\n                {{ $t('message.import_wallet_title') }}\n            </div>\n\n            <!-- Import wallet page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- Loader -->\n                    <Loader v-if=\"loading\" />\n\n                    <template v-else>\n                    <!-- Back button -->\n                    <router-link class=\"back_btn\" to=\"/\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                    </router-link>\n\n                    <!-- Tabs -->\n                    <div class=\"tabs_wrap\">\n                        <div class=\"tabs\">\n                            <!-- Tab 12 words -->\n                            <button class=\"btn\" @click.prevent=\"activeTab = 1\" :class=\"{ active: activeTab === 1 }\">\n                                <span>{{ $t('message.mnemonic_tab1') }}</span>\n                            </button>\n\n                            <!-- Tab 24 words -->\n                            <button class=\"btn\" @click.prevent=\"activeTab = 2\" :class=\"{ active: activeTab === 2 }\">\n                                <span>{{ $t('message.mnemonic_tab2') }}</span>\n                            </button>\n\n                            <!-- Tab Private Key -->\n                            <button class=\"btn\" @click.prevent=\"activeTab = 3\" :class=\"{ active: activeTab === 3 }\">\n                                <span>{{ $t('message.mnemonic_tab3') }}</span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <!-- Mnemonic -->\n                    <div class=\"mnemonic\" v-if=\"activeTab != 3\">\n                        <div class=\"row\">\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[0]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 0)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(0)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[1]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 1)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(1)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[2]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 2)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(2)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[3]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 3)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(3)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[4]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 4)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(4)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[5]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 5)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(5)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[6]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 6)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(6)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[7]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 7)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(7)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[8]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 8)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(8)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[9]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 9)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(9)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[10]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 10)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(10)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[11]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 11)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(11)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[12]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 12)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(12)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[13]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 13)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(13)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[14]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 14)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(14)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[15]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 15)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(15)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[16]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 16)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(16)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[17]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 17)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(17)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[18]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 18)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(18)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[19]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 19)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(19)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[20]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 20)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(20)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[21]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 21)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(21)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[22]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 22)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(22)\">\n                            </div>\n\n                            <!-- Mnemonic word -->\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[23]\"\n                                    @focus=\"emitter.emit('show_keyboard')\"\n                                    @blur=\"emitter.emit('hide_keyboard')\"\n                                    @input=\"validateWord($event.target.value, 23)\"\n                                    @paste=\"handlePaste\" :class=\"getValidationClass(23)\">\n                            </div>\n                        </div>\n\n                        <!-- Import wallet page exp -->\n                        <div class=\"exp\">\n                            {{ $t('message.import_wallet_exp') }}\n                        </div>\n                    </div>\n\n\n                    <!-- Import private key -->\n                    <div class=\"private_key\" v-else>\n                        <div class=\"field\">\n                            <!-- Import private key field -->\n                            <input type=\"text\" class=\"input big\" v-model=\"privateKey\"\n                                :class=\"{\n                                    error: !idValidPrivateKey && isTouchedPrivateKey,\n                                    success: idValidPrivateKey && isTouchedPrivateKey\n                                }\"\n                                @input=\"validatePrivateKey\">\n                        </div>\n\n                        <!-- Import private key exp -->\n                        <div class=\"exp\">\n                            {{ $t('message.import_wallet_exp') }}\n                        </div>\n                    </div>\n\n\n                    <!-- Import wallet page button -->\n                    <div class=\"btns\">\n                        <!-- Next button -->\n                        <button class=\"btn\" :class=\"{ disabled: !isFormValid }\" @click.prevent=\"save\">\n                            <span>{{ $t('message.btn_next') }}</span>\n                        </button>\n                    </div>\n                    </template>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount, watch, computed, inject } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { useGlobalStore } from '@/store'\n    import { importWalletFromMnemonic, importWalletFromPrivateKey } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        emitter = inject('emitter'),\n        loading = ref(true),\n        activeTab = ref(1),\n        wallet = ref(null),\n        secret = ref([]),\n        validateAllWordsResult = ref([]),\n        privateKey = ref(''),\n        idValidPrivateKey = ref(false),\n        isTouchedPrivateKey = ref(false)\n\n\n    onBeforeMount(() => {\n        // Hide loader\n        loading.value = false\n    })\n\n\n    watch(activeTab, () => {\n        // Reset data\n        secret.value = []\n        validateAllWordsResult.value = []\n        privateKey.value = ''\n        isTouchedPrivateKey.value = false\n    })\n\n\n    // Event handler for pasting text from clipboard\n    function handlePaste(e) {\n        // Get data from the clipboard\n        let clipboardData = e.clipboardData || window.clipboardData,\n            pastedText = clipboardData.getData('text'),\n            pastedTextArr = pastedText.split(' ')\n\n        if (pastedTextArr.length == 12) {\n            // Set active tab\n            activeTab.value = 1\n\n            // Set secret\n            setTimeout(() => secret.value = pastedTextArr)\n\n            // Validate\n            setTimeout(() => validateAllWords())\n        }\n\n        if (pastedTextArr.length == 24) {\n            // Set active tab\n            activeTab.value = 2\n\n            // Set secret\n            setTimeout(() => secret.value = pastedTextArr)\n\n            // Validate\n            setTimeout(() => validateAllWords())\n        }\n    }\n\n\n    // Validate all words\n    function validateAllWords() {\n        secret.value.map((value, i) => validateWord(value, i))\n    }\n\n\n    // Validate word\n    function validateWord(str, i) {\n        let result = true\n\n        // Validate length\n        if (!str.trim().length) {\n            result = false\n        }\n\n        // Validate symbols\n        let regex = /^[a-z]+$/\n\n        if (!regex.test(str.trim())) {\n            result = false\n        }\n\n        validateAllWordsResult.value[i] = result\n    }\n\n\n    // Get validate class\n    function getValidationClass(i) {\n        let result = validateAllWordsResult.value[i]\n\n        if (result === null || result === undefined) {\n            return ''\n        }\n\n        return result ? 'success' : 'error'\n    }\n\n\n    // Validate private key\n    function validatePrivateKey() {\n        // Validate length\n        privateKey.value.trim().length\n            ? idValidPrivateKey.value = true\n            : idValidPrivateKey.value = false\n\n        // Touched status\n        isTouchedPrivateKey.value = true\n    }\n\n\n    // Validate form\n    const isFormValid = computed(() => {\n        let result = false\n\n        switch (activeTab.value) {\n            case 1:\n                result = secret.value.length === 12 && secret.value.every(el => el !== '')\n                break;\n\n            case 2:\n                result = secret.value.length === 24 && secret.value.every(el => el !== '')\n                break;\n\n            default:\n                result = idValidPrivateKey.value\n                break;\n        }\n\n        return result\n    })\n\n\n    // Save data\n    async function save() {\n        // Import wallet\n        if (activeTab.value != 3) {\n            // Import\n            wallet.value = await importWalletFromMnemonic(secret.value.join(' '))\n\n            // Save in DB\n            await store.setSecret(wallet.value.secret.data)\n        } else {\n            // Import\n            wallet.value = await importWalletFromPrivateKey(privateKey.value)\n\n            // Save in DB\n            await store.setPrivateKey(privateKey.value)\n        }\n\n        // Redirect\n        router.push('/create_pin')\n    }\n</script>\n\n\n<style scoped>\n    .tabs_wrap\n    {\n        margin-top: 54px;\n    }\n\n\n\n    .exp\n    {\n        font-size: 12px;\n\n        margin-top: 8px;\n    }\n</style>","import script from \"./ImportWalletPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImportWalletPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImportWalletPage.vue?vue&type=style&index=0&id=b2f543ce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b2f543ce\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","store","useGlobalStore","router","useRouter","emitter","inject","loading","ref","activeTab","wallet","secret","validateAllWordsResult","privateKey","idValidPrivateKey","isTouchedPrivateKey","handlePaste","e","clipboardData","window","pastedText","getData","pastedTextArr","split","length","value","setTimeout","validateAllWords","map","i","validateWord","str","result","trim","regex","test","getValidationClass","undefined","validatePrivateKey","onBeforeMount","watch","isFormValid","computed","every","el","async","save","importWalletFromMnemonic","join","setSecret","data","importWalletFromPrivateKey","setPrivateKey","push"],"sourceRoot":""}