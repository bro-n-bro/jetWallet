{"version":3,"file":"js/596.a4ce1919.js","mappings":"qrBAgCI,MAAMA,EAAQC,EACVC,GAAUC,EAAAA,EAAAA,IAAO,WACjBC,GAAQC,EAAAA,EAAAA,IAAI,IAIhB,SAASC,IAELJ,EAAQK,KAAK,iBAGbC,YAAW,IAAMN,EAAQK,KAAK,iBAAiB,IACnD,CAIA,SAASE,IAELP,EAAQK,KAAK,iBAGbC,YAAW,IAAMN,EAAQK,KAAK,gBAAgB,IAClD,CAIA,SAASG,IACLR,EAAQK,KAAK,SAAU,CACnBH,MAAOA,EAAMO,MACbC,OAAQZ,EAAMY,QAEtB,CAIA,SAASC,IAELT,EAAMO,MAAQ,GAGdT,EAAQK,KAAK,SAAU,CACnBH,MAAOA,EAAMO,MACbC,OAAQZ,EAAMY,QAEtB,C,ufCtEJ,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,o/BCyEI,MAAMd,EAAQC,EACVc,GAAQC,EAAAA,EAAAA,KACRd,GAAUC,EAAAA,EAAAA,IAAO,WACjBc,GAAkBZ,EAAAA,EAAAA,KAAI,GACtBa,GAAab,EAAAA,EAAAA,IAAI,IACjBc,GAAed,EAAAA,EAAAA,IAAI,IAoCvB,SAASe,EAAkBC,GACvB,OAAON,EAAMO,eAAeC,MAAKC,GAAWA,EAAQC,eAAeC,mBAAqBL,GAC5F,CAIA,SAASM,EAAmBN,GACxB,GAAIrB,EAAM4B,SAEN,GAAIb,EAAMc,yBAA2Bd,EAAMc,wBAAwBH,mBAAqBL,EACpF,OAAO,OAER,GAAGrB,EAAM8B,YACZ,GAAyB,SAArB9B,EAAM8B,YAEN,GAAIf,EAAMgB,yBAA2BhB,EAAMgB,wBAAwBL,mBAAqBL,EACpF,OAAO,OAIX,GAAIN,EAAMiB,uBAAyBjB,EAAMiB,sBAAsBN,mBAAqBL,EAChF,OAAO,OAKf,GAAIN,EAAMkB,uBAAyBlB,EAAMkB,sBAAsBP,mBAAqBL,EAChF,OAAO,CAGnB,CAGA,SAASa,EAAaC,GACdnC,EAAM4B,QAENb,EAAMc,wBAA0BM,EACzBnC,EAAM8B,WACY,SAArB9B,EAAM8B,YAENf,EAAMgB,wBAA0BI,EAG5BpB,EAAMgB,wBAAwBL,mBAAqBX,EAAMiB,uBAAuBN,mBAChFX,EAAMiB,sBAAwB,OAIlCjB,EAAMiB,sBAAwBG,EAIlCpB,EAAMkB,sBAAwBE,EAIlCjC,EAAQK,KAAK,yBACjB,C,OA1FA6B,EAAAA,EAAAA,KAAcC,UACNrC,EAAM4B,QAENV,EAAWP,aAAeI,EAAMuB,qBAAqBpB,WAC/ClB,EAAM8B,WACa,SAArB9B,EAAM8B,WAENZ,EAAWP,aAAeI,EAAMuB,qBAAqBpB,WAGrDA,EAAWP,aAAeI,EAAMwB,oBAAoBrB,WAAWsB,QAAOL,GAAaA,EAAUT,mBAAqBX,EAAMgB,yBAAyBL,mBAIrJR,EAAWP,aAAeI,EAAMwB,oBAAoBrB,WAIxDA,EAAWP,MAAM8B,MAAK,CAACC,EAAGC,IAClBC,SAASF,EAAEG,QAAUD,SAASD,EAAEE,SAAmB,EACnDD,SAASF,EAAEG,QAAUD,SAASD,EAAEE,QAAkB,EAC/C,IAIX1B,EAAaR,MAAQO,EAAWP,MAGhCM,EAAgBN,OAAQ,CAAI,IAkEhCT,EAAQ4C,GAAG,UAAU,EAAG1C,QAAOQ,aAC3B,GAAe,eAAXA,EAAyB,CAEzBO,EAAaR,MAAQ,GAGrB,IAAK,IAAIoC,KAAO7B,EAAWP,MACnBO,EAAWP,MAAMoC,GAAKC,YAAYC,QAAQC,oBAAoBC,SAAS/C,EAAM8C,sBAC7E/B,EAAaR,MAAMyC,KAAKlC,EAAWP,MAAMoC,GAGrD,K,ykEC5LR,MAAMjC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,kuCCoII,MAAMd,EAAQC,EACVc,GAAQC,EAAAA,EAAAA,KACRqC,GAASC,EAAAA,EAAAA,MACTpD,GAAUC,EAAAA,EAAAA,IAAO,WACjBoD,GAAOpD,EAAAA,EAAAA,IAAO,QACdqD,GAAeC,EAAAA,EAAAA,MACfC,GAAkBrD,EAAAA,EAAAA,KAAI,GACtBsD,GAAOtD,EAAAA,EAAAA,IAAI,IACXuD,GAAUC,EAAAA,EAAAA,KAAS,KAAMC,EAAAA,EAAAA,IAAkB/C,EAAMgD,MAAMC,cAAgBjD,EAAMgD,MAAM,GAAGhD,EAAMgD,MAAME,qBAAsBlD,EAAMgD,MAAMvC,QAAQ0C,YAC5IC,GAAY9D,EAAAA,EAAAA,KAAI,GAWpBgC,eAAeP,KAEXqC,EAAUxD,OAAQ,EAElB,IAEQI,EAAMgD,MAAMK,kBACNrD,EAAMsD,kBAIhB,IAAIC,QAAgBC,EAAAA,EAAAA,IAAOvE,EAAMwE,OAAQb,EAAKhD,OAG9C6C,EAAaiB,OAAO,CAChBC,MAAO,UACPC,OAAO,IAIXnB,EAAaiB,OAAO,CAChBC,MAAO,UACPE,MAAO,IACPC,UAAW,IACXC,MAAOvB,EAAKwB,OAAOC,EAAE,yCACrBC,KAAM,UACNC,KAAM,CACFC,eAAeC,EAAAA,EAAAA,IAAgBrE,EAAMsE,oBAK7CC,EAAAA,EAAAA,IAAOhB,GAASiB,OAAMC,IAClBC,QAAQC,IAAIF,GAGZG,GAAUH,EAAM,IAIpBzE,EAAM6E,gBAGNvC,EAAOD,KAAK,WAChB,CAAE,MAAOoC,GACLC,QAAQC,IAAIF,GAGZG,GAAUH,EACd,CACJ,CAIA,SAASG,GAAUH,GAEfrB,EAAUxD,OAAQ,EAGlB,IAAIkF,EAAY,GAIVA,EADNL,EAAMM,KACYvC,EAAKwB,OAAOC,EAAE,iCAAiCQ,EAAMM,QACrDvC,EAAKwB,OAAOC,EAAE,0CAGhCxB,EAAaiB,OAAO,CAChBC,MAAO,UACPC,OAAO,IAIXnB,EAAaiB,OAAO,CAChBC,MAAO,UACPE,MAAO,IACPC,SAAU,IACVC,MAAOvB,EAAKwB,OAAOC,EAAE,uCACrBe,KAAMF,EACNZ,KAAM,UAIVlE,EAAMiF,SAASjF,EAAMsE,gBAAgBY,cAAgB,KAGrDlF,EAAMmF,YACV,C,OA/FAC,EAAAA,EAAAA,KAAY,KAERjG,EAAQkG,IAAI,QACZlG,EAAQkG,IAAI,sBAAsB,IAgGtClG,EAAQ4C,GAAG,QAAQ,KAEfY,EAAgB/C,OAAQ,EAGxBmB,IAAY,IAKhB5B,EAAQ4C,GAAG,uBAAuB,KAE9BY,EAAgB/C,OAAQ,CAAK,I,wlGCjQrC,MAAMG,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,U,+jDCqLI,MAAMC,GAAQC,EAAAA,EAAAA,KACVd,GAAUC,EAAAA,EAAAA,IAAO,WACjBkG,GAA0BhG,EAAAA,EAAAA,KAAI,GAC9BiG,GAAwBjG,EAAAA,EAAAA,KAAI,GAC5BkG,GAA6BlG,EAAAA,EAAAA,KAAI,GACjCmE,GAASnE,EAAAA,EAAAA,IAAI,IACbmG,GAASnG,EAAAA,EAAAA,IAAI,IACboG,GAAYpG,EAAAA,EAAAA,IAAI,GAChBqG,GAAgBrG,EAAAA,EAAAA,KAAI,GACpBsG,GAActG,EAAAA,EAAAA,KAAIwD,EAAAA,EAAAA,KAAS,IAAM6C,EAAc/F,SAAWI,EAAMgB,2BAA6BhB,EAAMiB,yBACnG4E,GAAsB/C,EAAAA,EAAAA,KAAS,KAC3B,IAAIgD,EAASzF,EAAkBL,EAAMgB,yBAAyBL,kBAE9D,OAAOmF,GAAU,CACbrF,QAAS,CACLgF,OAAQ,GAEf,IAELM,GAAoBjD,EAAAA,EAAAA,KAAS,KACzB,IAAIgD,EAASzF,EAAkBL,EAAMiB,uBAAuBN,kBAE5D,OAAOmF,GAAU,CACbrF,QAAS,CACLgF,OAAQ,GAEf,IAgDT,SAASO,IAELL,EAAc/F,OAAQ,EAEtBH,YAAW,KAEPgG,EAAO7F,OAAQmD,EAAAA,EAAAA,IAAkB2C,EAAU9F,MAAOI,EAAMiF,SAASjF,EAAMsE,gBAAgBnB,UAGvFwC,EAAc/F,OAAQ,CAAI,GAElC,CAIA,SAASqG,EAAeC,GAEpBP,EAAc/F,OAAQ,EAEtBH,YAAW,KAEHyG,EAAEC,OAAOvG,MAAMwG,QAAUF,EAAEC,OAAOvG,OAAS,IAE3C6F,EAAO7F,MAAQ,IAIfsG,EAAEC,OAAOvG,MAAMwG,QAAUF,EAAEC,OAAOvG,MAAQ,GAAKsG,EAAEC,OAAOvG,OAAQmD,EAAAA,EAAAA,IAAkB2C,EAAU9F,MAAOI,EAAMiF,SAASjF,EAAMsE,gBAAgBnB,YAExIwC,EAAc/F,OAAQ,GAItBsG,EAAEC,OAAOvG,OAAQmD,EAAAA,EAAAA,IAAkB2C,EAAU9F,MAAOI,EAAMiF,SAASjF,EAAMsE,gBAAgBnB,WAEzF6C,GACJ,GAER,CAIA,SAAS3F,EAAkBC,GACvB,OAAON,EAAMO,eAAeC,MAAKC,GAAWA,EAAQC,eAAeC,mBAAqBL,GAC5F,C,OAxFAe,EAAAA,EAAAA,KAAc,KAEVrB,EAAMgB,wBAA0B,KAChChB,EAAMiB,sBAAwB,IAAI,KAItCmE,EAAAA,EAAAA,KAAY,KAERpF,EAAMgB,wBAA0B,KAChChB,EAAMiB,sBAAwB,KAG9B9B,EAAQkG,IAAI,kCACZlG,EAAQkG,IAAI,yBAAyB,KAIzCgB,EAAAA,EAAAA,KAAMvD,EAAAA,EAAAA,KAAS,IAAM9C,EAAMgB,2BAA0B,KAEjD0E,EAAU9F,MAASS,EAAkBL,EAAMgB,wBAAwBL,kBAAmBF,QAAQgF,MAAM,KAIxGY,EAAAA,EAAAA,KAAMvD,EAAAA,EAAAA,KAAS,IAAM8C,EAAYhG,SAAQ,KACjCgG,EAAYhG,QAEZ6D,EAAO7D,MAAQ,CAAC,CACZ0G,QAAS,6CACT1G,MAAO2G,EAAAA,mBAAmBC,YAAY,CAClCC,iBAAkBzG,EAAM0G,eACxBC,oBAAqB3G,EAAMgB,wBAAwBL,iBACnDiG,oBAAqB5G,EAAMiB,sBAAsBN,iBACjD8E,OAAQ,CACJoB,MAAO7G,EAAMiF,SAASjF,EAAMsE,gBAAgBuC,MAC5CpB,OAAQ,GAAGqB,WAAYrB,EAAO7F,MAAOmH,WAAWC,QAAQ,IAAK,MAAMC,QAAQjH,EAAMiF,SAASjF,EAAMsE,gBAAgBnB,UAAY+D,KAAKC,IAAI,GAAInH,EAAMiF,SAASjF,EAAMsE,gBAAgBnB,eAI9L,IAqDJhE,EAAQ4C,GAAG,0BAA0B,KAEjCuD,EAAwB1F,OAAQ,EAChC2F,EAAsB3F,OAAQ,CAAK,IAKvCT,EAAQ4C,GAAG,kCAAkC,KAEzCyD,EAA2B5F,OAAQ,CAAK,I,mtKC3ThD,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://cosmos-telegram-signer/./src/components/Search.vue","webpack://cosmos-telegram-signer/./src/components/Search.vue?0923","webpack://cosmos-telegram-signer/./src/components/modal/ValidatorsModal.vue","webpack://cosmos-telegram-signer/./src/components/modal/ValidatorsModal.vue?cf99","webpack://cosmos-telegram-signer/./src/components/modal/RedelegateConfirmModal.vue","webpack://cosmos-telegram-signer/./src/components/modal/RedelegateConfirmModal.vue?8f76","webpack://cosmos-telegram-signer/./src/views/Redelegate.vue","webpack://cosmos-telegram-signer/./src/views/Redelegate.vue?462a"],"sourcesContent":["<template>\n    <!-- Search -->\n    <div class=\"search\">\n        <!-- Search back button -->\n        <button class=\"back_btn\" @click.prevent=\"setBlurEvent\">\n            <span><svg><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg></span>\n        </button>\n\n        <!-- Search field -->\n        <div class=\"field\">\n            <!-- Search field icon -->\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_search\"></use></svg>\n\n            <!-- Search field input -->\n            <input type=\"text\" v-model=\"query\" class=\"input\" :placeholder=\"$t('message.search_placeholder')\"\n                @focus=\"setFocusEvent\"\n                @blur=\"setBlurEvent\"\n                @input=\"setEnterEvent\">\n\n            <!-- Search field clear button -->\n            <button class=\"clear_btn\" v-if=\"query.length\" @click.prevent=\"clearField()\">\n                <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n            </button>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref, inject } from 'vue'\n\n\n    const props = defineProps(['source']),\n        emitter = inject('emitter'),\n        query = ref('')\n\n\n    // Set focus event\n    function setFocusEvent() {\n        // Set event \"show_keyboard\"\n        emitter.emit('show_keyboard')\n\n        // Set event \"search_focus\"\n        setTimeout(() => emitter.emit('search_focus'), 100)\n    }\n\n\n    // Set blur event\n    function setBlurEvent() {\n        // Set event \"hide_keyboard\"\n        emitter.emit('hide_keyboard')\n\n        // Set event \"search_blur\"\n        setTimeout(() => emitter.emit('search_blur'), 100)\n    }\n\n\n    // Set event \"search\"\n    function setEnterEvent() {\n        emitter.emit('search', {\n            query: query.value,\n            source: props.source\n        })\n    }\n\n\n    // Clear field\n    function clearField() {\n        //clear query\n        query.value = ''\n\n        /// Set event \"search\"\n        emitter.emit('search', {\n            query: query.value,\n            source: props.source\n        })\n    }\n</script>\n\n\n<style scoped>\n    .search\n    {\n        position: sticky;\n        z-index: 5;\n        top: 0;\n\n        padding: 12px 0;\n\n        background: #170232;\n    }\n\n\n    .search ::-webkit-input-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n    .search :-moz-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n    .search ::-moz-placeholder\n    {\n        opacity: 1;\n        color: rgba(255,255,255,.6);\n    }\n\n    .search :-ms-input-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n\n    .search .back_btn\n    {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        bottom: 0;\n        left: 0;\n\n        visibility: hidden;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n        padding: 1px;\n\n        transition: .2s linear;\n\n        opacity: 0;\n        border-radius: 50%;\n        background: linear-gradient(to bottom,  #5c32cc 0%,#210750 100%);\n    }\n\n\n    .search .back_btn span\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 26px;\n        height: 26px;\n\n        border-radius: 50%;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .search .back_btn svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .searching .search .back_btn\n    {\n        visibility: visible;\n\n        opacity: 1;\n    }\n\n\n    .search .field\n    {\n        position: relative;\n        z-index: 2;\n\n        width: 100%;\n        margin-left: auto;\n        padding: 1px;\n\n        transition: width .2s linear;\n\n        border-radius: 23px;\n        background: linear-gradient(to bottom,  #5c32cc 0%,#210750 100%);\n    }\n\n\n    .searching .search .field\n    {\n        width: calc(100% - 40px);\n    }\n\n\n    .search .icon\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        bottom: 0;\n        left: 10px;\n\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin: auto 0;\n\n        pointer-events: none;\n    }\n\n\n    .search .input\n    {\n        font-family: var(--font_family);\n        font-size: 16px;\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 28px;\n        padding: 0 39px 2px;\n\n        color: #fff;\n        border: none;\n        border-radius: 23px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .clear_btn\n    {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        right: 6px;\n        bottom: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 24px;\n        height: 24px;\n        margin: auto 0;\n    }\n\n\n    .clear_btn svg\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n    }\n</style>","import script from \"./Search.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Search.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Search.vue?vue&type=style&index=0&id=33f4e966&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-33f4e966\"]])\n\nexport default __exports__","<template>\n    <section class=\"page_container inner_page_container validators_page\">\n        <div class=\"cont\">\n            <div class=\"head\">\n                <button class=\"back_btn\" @click=\"emitter.emit('close_validators_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </button>\n\n                <div class=\"page_title\">\n                    {{ $t('message.validators_page_title') }}\n                </div>\n            </div>\n\n            <!-- Search -->\n            <Search source=\"validators\" />\n\n            <Loader v-if=\"!isValidatorsGot\" />\n\n            <div class=\"validators\" v-else>\n                <div class=\"list\" v-if=\"searchResult.length\">\n                    <div class=\"item\" v-for=\"(validator, index) in searchResult\" :key=\"index\">\n                        <div class=\"validator_wrap\" @click.prevent=\"setValidator(validator)\" :class=\"{ current: isCurrentValidator(validator.operator_address) }\">\n                            <div class=\"validator\">\n                                <div class=\"logo\">\n                                    <img :src=\"`https://raw.githubusercontent.com/cosmostation/chainlist/main/chain/${store.networks[store.currentNetwork].prefix}/moniker/${validator.operator_address}.png`\" alt=\"\" loading=\"lazy\" @error=\"imageLoadError($event)\">\n\n                                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                                </div>\n\n                                <div>\n                                    <div class=\"moniker\">\n                                        {{ validator.description.moniker }}\n                                    </div>\n\n                                    <div class=\"commission\">\n                                        {{ (validator.commission.commission_rates.rate * 100).toLocaleString('ru-RU', { maximumFractionDigits: 2 }).replace(',', '.') }}%\n                                    </div>\n\n                                    <div class=\"staked\" v-if=\"item = isStakedValidator(validator.operator_address)\">\n                                        {{ $t('message.validatoes_staked_label') }}\n\n                                        {{ formatTokenAmount(item.balance.amount, store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n\n                                        <div class=\"logo\">\n                                            <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"apr\">\n                                    <span>{{ $t('message.stake_APR_label') }}<br> {{ ((store.networks[store.currentNetwork].APR * 100) - (store.networks[store.currentNetwork].APR * 100 * validator.commission.commission_rates.rate)).toFixed(2) }}%</span>\n                                </div>\n\n                                <div class=\"check\">\n                                    <svg v-if=\"isCurrentValidator(validator.operator_address)\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"empty\" v-else>\n                    {{ $t('message.search_empty_validator') }}\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, inject, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { imageLoadError, getNetworkLogo, formatTokenAmount } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import Search from '@/components/Search.vue'\n\n\n    const props = defineProps(['unstake', 'redelegate']),\n        store = useGlobalStore(),\n        emitter = inject('emitter'),\n        isValidatorsGot = ref(false),\n        validators = ref([]),\n        searchResult = ref([])\n\n\n    onBeforeMount(async() => {\n        if (props.unstake) {\n            // Get validators\n            validators.value = (await store.getUserValidators()).validators\n        } else if(props.redelegate) {\n            if (props.redelegate === 'from') {\n                // Get validators\n                validators.value = (await store.getUserValidators()).validators\n            } else {\n                // Get validators (Exclude validator from)\n                validators.value = (await store.getAllValidators()).validators.filter(validator => validator.operator_address !== store.redelegateValidatorFrom?.operator_address)\n            }\n        } else {\n            // Get validators\n            validators.value = (await store.getAllValidators()).validators\n        }\n\n        // Sort by voiting power\n        validators.value.sort((a, b) => {\n            if (parseInt(a.tokens) > parseInt(b.tokens)) { return -1 }\n            if (parseInt(a.tokens) < parseInt(b.tokens)) { return 1 }\n            return 0\n        })\n\n        // Default search result\n        searchResult.value = validators.value\n\n        // Hide loader\n        isValidatorsGot.value = true\n    })\n\n\n    // Is staked validator\n    function isStakedValidator(address) {\n        return store.stakedBalances.find(balance => balance.validator_info.operator_address === address)\n    }\n\n\n    // Is current validator\n    function isCurrentValidator(address) {\n        if (props.unstake) {\n            // Check\n            if (store.unstakeCurrentValidator && store.unstakeCurrentValidator.operator_address === address) {\n                return true\n            }\n        } else if(props.redelegate) {\n            if (props.redelegate === 'from') {\n                // Check\n                if (store.redelegateValidatorFrom && store.redelegateValidatorFrom.operator_address === address) {\n                    return true\n                }\n            } else {\n                // Check\n                if (store.redelegateValidatorTo && store.redelegateValidatorTo.operator_address === address) {\n                    return true\n                }\n            }\n        } else {\n            // Check\n            if (store.stakeCurrentValidator && store.stakeCurrentValidator.operator_address === address) {\n                return true\n            }\n        }\n    }\n\n\n    function setValidator(validator) {\n        if (props.unstake) {\n            // Set data\n            store.unstakeCurrentValidator = validator\n        } else if (props.redelegate) {\n            if (props.redelegate === 'from') {\n                // Set data\n                store.redelegateValidatorFrom = validator\n\n                // Remove duplicate\n                if (store.redelegateValidatorFrom.operator_address === store.redelegateValidatorTo?.operator_address) {\n                    store.redelegateValidatorTo = null\n                }\n            } else {\n                // Set data\n                store.redelegateValidatorTo = validator\n            }\n        } else {\n            // Set data\n            store.stakeCurrentValidator = validator\n        }\n\n        // Event \"close_validators_modal\"\n        emitter.emit('close_validators_modal')\n    }\n\n\n    // Event \"search\"\n    emitter.on('search', ({ query, source }) => {\n        if (source === 'validators') {\n            // Clear search result\n            searchResult.value = []\n\n            // Set new result\n            for (let key in validators.value) {\n                if (validators.value[key].description.moniker.toLocaleLowerCase().includes(query.toLocaleLowerCase())) {\n                    searchResult.value.push(validators.value[key])\n                }\n            }\n        }\n    })\n</script>\n\n\n<style scoped>\n    .validators_page\n    {\n        position: fixed;\n        z-index: 9;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        background: #170232;\n    }\n\n\n    .validators_page .head\n    {\n        margin-bottom: 0;\n    }\n\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px;\n\n        background: none;\n    }\n\n\n\n    .validators\n    {\n        overflow: auto;\n\n        width: calc(100% + 32px);\n        height: calc(var(--tg-viewport-stable-height) - 110px);\n        margin: 0 -16px;\n        padding: 0 16px 12px;\n\n        overscroll-behavior-y: contain;\n    }\n\n\n    .empty\n    {\n        font-size: 20px;\n        font-weight: 500;\n\n        padding: 10px;\n\n        text-align: center;\n\n        opacity: .7;\n    }\n\n\n    .validators .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .validators .list > *\n    {\n        margin-top: 8px;\n    }\n\n\n\n    .validators .validator_wrap\n    {\n        padding: 1px;\n\n        cursor: pointer;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .validators .validator\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding: 5px 7px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .validators .validator .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 44px;\n        height: 44px;\n        margin-right: 8px;\n        padding: 6px;\n\n        border-radius: 50%;\n        background: #950fff;\n    }\n\n\n    .validators .validator .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .validators .validator .logo .icon\n    {\n        display: none;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .validators .validator .logo img.hide\n    {\n        display: none;\n    }\n\n    .validators .validator .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n    .validators .validator .logo + *\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        width: calc(100% - 160px);\n    }\n\n\n    .validators .validator .moniker\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        overflow: hidden;\n\n        width: calc(100% - 46px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .validators .validator .commission\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        margin-left: auto;\n\n        white-space: nowrap;\n    }\n\n\n    .validators .validator .staked\n    {\n        font-size: 16px;\n        font-weight: 300;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        color: rgba(255, 255, 255, .80);\n    }\n\n\n    .validators .validator .staked .logo\n    {\n        width: 18px;\n        height: 18px;\n        margin: 0 0 0 4px;\n        padding: 0;\n    }\n\n\n    .validators .validator .apr\n    {\n        font-size: 12px;\n\n        margin-left: auto;\n        padding: 2px 6px;\n\n        text-align: center;\n\n        border-radius: 4px;\n        background: #170232;\n    }\n\n\n    .validators .validator .apr span\n    {\n        display: block;\n\n        background: linear-gradient(180deg, #dd93fe 0%, #aa36de 100%);\n        -webkit-background-clip: text;\n                background-clip: text;\n\n        -webkit-text-fill-color: transparent;\n    }\n\n\n    .validators .validator .check\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 44px;\n        height: 44px;\n        margin-left: 6px;\n    }\n\n\n    .validators .validator .check svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .validators .validator_wrap.current\n    {\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n    .validators .current .validator\n    {\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n</style>","import script from \"./ValidatorsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidatorsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ValidatorsModal.vue?vue&type=style&index=0&id=467099ce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-467099ce\"]])\n\nexport default __exports__","<template>\n    <section class=\"page_container inner_page_container redelegate_confirm\">\n        <Loader v-if=\"isProcess\" />\n\n        <div class=\"cont\">\n            <div class=\"head\">\n                <button class=\"back_btn\" @click=\"emitter.emit('close_redelegate_confirm_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </button>\n\n                <div class=\"page_title\">\n                    {{ $t('message.redelegate_confirm_page_title') }}\n                </div>\n            </div>\n\n\n            <div class=\"data\">\n                <div class=\"field_label\">\n                    {{ $t('message.details_label') }}\n                </div>\n\n                <div class=\"info_wrap\">\n                    <div class=\"info\">\n                        <div class=\"features\">\n                            <div>\n                                <div class=\"label\">\n                                    {{ $t('message.redelegate_confirm_token_label') }}\n                                </div>\n\n                                <div class=\"val\">\n                                    <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n\n                                    <span>{{ store.networks[store.currentNetwork].token_name }}</span>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">\n                                    {{ $t('message.redelegate_confirm_amount_label') }}\n                                </div>\n\n                                <div class=\"val\">\n                                    {{ props.amount }}\n\n                                    {{ store.networks[store.currentNetwork].token_name }}\n\n                                    <span class=\"currency\">\n                                        ({{ formatTokenCost(currencyConversion(props.amount, store.networks[store.currentNetwork].token_name)) }}{{ store.currentCurrencySymbol }})\n                                    </span>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">\n                                    {{ $t('message.redelegate_validator_from_label') }}\n                                </div>\n\n                                <div class=\"val\">\n                                    <span class=\"moniker\">{{ store.redelegateValidatorFrom.description.moniker }}</span>\n\n                                    <div class=\"logo\">\n                                        <img :src=\"`https://raw.githubusercontent.com/cosmostation/chainlist/main/chain/${store.networks[store.currentNetwork].prefix}/moniker/${store.redelegateValidatorFrom.operator_address}.png`\" alt=\"\" loading=\"lazy\" @error=\"imageLoadError($event)\">\n\n                                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">\n                                    {{ $t('message.redelegate_validator_to_label') }}\n                                </div>\n\n                                <div class=\"val\">\n                                    <span class=\"moniker\">{{ store.redelegateValidatorTo.description.moniker }}</span>\n\n                                    <div class=\"logo\">\n                                        <img :src=\"`https://raw.githubusercontent.com/cosmostation/chainlist/main/chain/${store.networks[store.currentNetwork].prefix}/moniker/${store.redelegateValidatorTo.operator_address}.png`\" alt=\"\" loading=\"lazy\" @error=\"imageLoadError($event)\">\n\n                                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">\n                                    {{ $t('message.stake_confirm_fee_label') }}\n                                </div>\n\n                                <div class=\"val\">\n                                    {{ feeCost.toLocaleString('ru-RU', { maximumFractionDigits: 5 }).replace(',', '.') }}\n\n                                    {{ store.networks[store.currentNetwork].token_name }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"memo\">\n                <div class=\"field_label\">\n                    {{ $t('message.memo_label') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input big\" v-model=\"memo\"\n                        @focus=\"emitter.emit('show_keyboard')\"\n                        @blur=\"emitter.emit('hide_keyboard')\">\n                </div>\n            </div>\n\n\n            <div class=\"btns\">\n                <button class=\"btn\" @click.prevent=\"showSignTxModal = true\">\n                    <span>{{ $t('message.btn_confirm_redelegate') }}</span>\n                </button>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Sign transaction -->\n    <SignTx v-if=\"showSignTxModal\"/>\n</template>\n\n\n<script setup>\n    import { ref, inject, computed, onUnmounted } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useRouter } from 'vue-router'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { currencyConversion, formatTokenCost, formatTokenAmount, getNetworkLogo, imageLoadError, signTx, sendTx, getExplorerLink } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import SignTx from '@/components/modal/SignTx.vue'\n\n\n    const props = defineProps(['amount', 'msgAny']),\n        store = useGlobalStore(),\n        router = useRouter(),\n        emitter = inject('emitter'),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        showSignTxModal = ref(false),\n        memo = ref(''),\n        feeCost = computed(() => formatTokenAmount(store.TxFee.userGasAmount * store.TxFee[`${store.TxFee.currentLevel}Price`], store.TxFee.balance.exponent)),\n        isProcess = ref(false)\n\n\n    onUnmounted(() => {\n        // Unlisten events\n        emitter.off('auth')\n        emitter.off('close_sign_tx_modal')\n    })\n\n\n    // Redelegate tokens\n    async function redelegate() {\n        // Set process status\n        isProcess.value = true\n\n        try {\n            // Update TxFee info\n            if (store.TxFee.isRemember) {\n                await store.updateTxFeeInfo()\n            }\n\n            // Sign Tx\n            let txBytes = await signTx(props.msgAny, memo.value)\n\n            // Clean notifications\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: -100,\n                title: i18n.global.t('message.notification_tx_pending_title'),\n                type: 'pending',\n                data: {\n                    explorer_link: getExplorerLink(store.currentNetwork)\n                }\n            })\n\n            // Send Tx\n            sendTx(txBytes).catch(error => {\n                console.log(error)\n\n                // Show error\n                showError(error)\n            })\n\n            // Check Tx result\n            store.checkTxResult()\n\n            // Redirect\n            router.push('/account')\n        } catch (error) {\n            console.log(error)\n\n            // Show error\n            showError(error)\n        }\n    }\n\n\n    // Show error message\n    function showError(error) {\n        // Set process status\n        isProcess.value = false\n\n        // Get error code\n        let errorText = ''\n\n        // Get error title\n        error.code\n            ? errorText = i18n.global.t(`message.notification_tx_error_${error.code}`)\n            : errorText = i18n.global.t('message.notification_tx_error_rejected')\n\n        // Clean notifications\n        notification.notify({\n            group: 'default',\n            clean: true\n        })\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            speed: 200,\n            duration: 6000,\n            title: i18n.global.t('message.notification_tx_error_title'),\n            text: errorText,\n            type: 'error'\n        })\n\n        // Clear tx hash\n        store.networks[store.currentNetwork].currentTxHash = null\n\n        // Reset Tx Fee\n        store.resetTxFee()\n    }\n\n\n    // Event \"auth\"\n    emitter.on('auth', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n\n        // Redelegate tokens\n        redelegate()\n    })\n\n\n    // Event \"close_sign_tx_modal\"\n    emitter.on('close_sign_tx_modal', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n    })\n</script>\n\n\n<style scoped>\n    .redelegate_confirm\n    {\n        position: fixed;\n        z-index: 9;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        background: #170232;\n    }\n\n\n\n    .info_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .info\n    {\n        position: relative;\n\n        padding: 7px 9px;\n\n        border-radius: 11px;\n        background: #06000e;\n    }\n\n\n\n    .features > *\n    {\n        font-size: 16px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n\n    .features > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .features .val\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-end;\n\n        text-align: right;\n        max-width: 50%;\n    }\n\n\n    .features .label\n    {\n        font-size: inherit;\n\n        display: block;\n\n        margin: 0;\n        padding: 0;\n    }\n\n\n    .features .val > img\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n        margin-right: 4px;\n\n        border-radius: 50%;\n    }\n\n\n    .features .moniker\n    {\n        overflow: hidden;\n\n        max-width: calc(100% - 22px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .features .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 18px;\n        height: 18px;\n        margin-left: 4px;\n        padding: 4px;\n\n        border-radius: 50%;\n        background: #950fff;\n    }\n\n\n    .features .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .features .logo .icon\n    {\n        display: none;\n\n        width: 14px;\n        height: 14px;\n    }\n\n\n    .features .logo img.hide\n    {\n        display: none;\n    }\n\n    .features .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n    .features .val .currency\n    {\n        color: #836b9e;\n    }\n\n\n\n    .memo\n    {\n        margin-top: 12px;\n        margin-bottom: auto;\n    }\n\n\n\n    .field\n    {\n        padding: 1px;\n\n        border-radius: 10px;\n        background: linear-gradient(to bottom,  #5d33ce 0%,#200750 100%);\n    }\n\n\n    .input\n    {\n        border-radius: 9px;\n        background: #06000e;\n    }\n</style>","import script from \"./RedelegateConfirmModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RedelegateConfirmModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./RedelegateConfirmModal.vue?vue&type=style&index=0&id=151e6081&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-151e6081\"]])\n\nexport default __exports__","<template>\n    <section class=\"page_container inner_page_container redelegate\">\n        <div class=\"cont\">\n            <div class=\"head\">\n                <router-link to=\"/account?activeSlide=1\" class=\"back_btn\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </router-link>\n\n                <div class=\"page_title\">\n                    {{ $t('message.redelegate_page_title') }}\n                </div>\n            </div>\n\n\n            <div class=\"validator_info from\">\n                <div class=\"field_label\">\n                    {{ $t('message.redelegate_validator_from_label') }}\n                </div>\n\n                <div class=\"info_wrap\" @click.prevent=\"showValidatorsFromModal = true\" v-if=\"!store.redelegateValidatorFrom\">\n                    <div class=\"info\">\n                        <div class=\"placeholder\">\n                            {{ $t('message.stake_validator_placeholder') }}\n                        </div>\n\n                        <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver2\"></use></svg>\n                    </div>\n                </div>\n\n                <div class=\"validator_wrap\" @click.prevent=\"showValidatorsFromModal = true\" v-else>\n                    <div class=\"validator\">\n                        <div class=\"logo\">\n                            <img :src=\"`https://raw.githubusercontent.com/cosmostation/chainlist/main/chain/${store.networks[store.currentNetwork].prefix}/moniker/${store.redelegateValidatorFrom.operator_address}.png`\" alt=\"\" loading=\"lazy\" @error=\"imageLoadError($event)\">\n\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                        </div>\n\n                        <div>\n                            <div class=\"moniker\">\n                                {{ store.redelegateValidatorFrom.description.moniker }}\n                            </div>\n                        </div>\n\n                        <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver2\"></use></svg>\n                    </div>\n                </div>\n\n                <div class=\"staked\">\n                    <div class=\"label\">\n                        {{ $t('message.validatoes_staked_label') }}\n                    </div>\n\n                    <div class=\"amount\">\n                        {{ formatTokenAmount(validatorFromStaked.balance.amount, store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n\n                        <span>{{ store.networks[store.currentNetwork].token_name }}</span>\n                    </div>\n\n                    <div class=\"cost\">\n                        {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, validatorFromStaked.balance.amount, store.networks[store.currentNetwork].exponent)) }}\n\n                        {{ store.currentCurrencySymbol }}\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"arrow_wrap\">\n                <div class=\"arrow\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_arrow_ver\"></use></svg>\n                </div>\n            </div>\n\n\n            <div class=\"validator_info to\">\n                <div class=\"field_label\">\n                    {{ $t('message.redelegate_validator_to_label') }}\n                </div>\n\n                <div class=\"info_wrap\" @click.prevent=\"showValidatorsToModal = true\" v-if=\"!store.redelegateValidatorTo\">\n                    <div class=\"info\">\n                        <div class=\"placeholder\">\n                            {{ $t('message.stake_validator_placeholder') }}\n                        </div>\n\n                        <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver2\"></use></svg>\n                    </div>\n                </div>\n\n                <div class=\"validator_wrap\" @click.prevent=\"showValidatorsToModal = true\" v-else>\n                    <div class=\"validator\">\n                        <div class=\"logo\">\n                            <img :src=\"`https://raw.githubusercontent.com/cosmostation/chainlist/main/chain/${store.networks[store.currentNetwork].prefix}/moniker/${store.redelegateValidatorTo.operator_address}.png`\" alt=\"\" loading=\"lazy\" @error=\"imageLoadError($event)\">\n\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                        </div>\n\n                        <div>\n                            <div class=\"moniker\">\n                                {{ store.redelegateValidatorTo.description.moniker }}\n                            </div>\n                        </div>\n\n                        <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver2\"></use></svg>\n                    </div>\n                </div>\n\n                <div class=\"staked\">\n                    <div class=\"label\">\n                        {{ $t('message.validatoes_staked_label') }}\n                    </div>\n\n                    <div class=\"amount\">\n                        {{ formatTokenAmount(validatorToStaked.balance.amount, store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n\n                        <span>{{ store.networks[store.currentNetwork].token_name }}</span>\n                    </div>\n\n                    <div class=\"cost\">\n                        {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, validatorToStaked.balance.amount, store.networks[store.currentNetwork].exponent)) }}\n\n                        {{ store.currentCurrencySymbol }}\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"amount_field\" :class=\"{ disabled: !store.redelegateValidatorFrom }\">\n                <div class=\"field_label\">\n                    {{ $t('message.stake_amount_label') }}\n\n                    <div class=\"cost\">\n                        {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, (amount * Math.pow(10, store.networks[store.currentNetwork].exponent)), store.networks[store.currentNetwork].exponent)) }}\n\n                        {{ store.currentCurrencySymbol }}\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"number\" inputmode=\"numeric\" class=\"input big\" v-model=\"amount\" placeholder=\"0.00\"\n                        @focus=\"emitter.emit('show_keyboard')\"\n                        @blur=\"emitter.emit('hide_keyboard')\"\n                        @input=\"validateAmount($event)\">\n\n                    <button type=\"button\" class=\"max_btn\" @click.prevent=\"setMaxAmount\">\n                        {{ $t('message.btn_MAX') }}\n                    </button>\n                </div>\n            </div>\n\n\n            <!-- Tx fee -->\n            <TxFee v-if=\"isFormValid\" :msgAny txType=\"redelegate\" />\n\n\n            <div class=\"btns\">\n                <button v-if=\"!store.networks[store.currentNetwork].currentTxHash\" class=\"btn\" @click.prevent=\"showRedelegateConfirmModal = true\" :class=\"{ disabled: !store.TxFee.isEnough }\">\n                    <span>{{ $t('message.btn_redelegate') }}</span>\n                </button>\n\n                <button v-else class=\"btn waiting_btn\" @click.prevent=\"emitter.emit('show_pending_notification')\">\n                    <span>{{ $t('message.btn_waiting_tx') }}</span>\n                </button>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Validators modal -->\n    <ValidatorsModal v-if=\"showValidatorsFromModal\" redelegate=\"from\" />\n    <ValidatorsModal v-if=\"showValidatorsToModal\" redelegate=\"to\" />\n\n    <!-- Redelegate confirm modal -->\n    <RedelegateConfirmModal v-if=\"showRedelegateConfirmModal\" :amount :msgAny />\n</template>\n\n\n<script setup>\n    import { ref, inject, onBeforeMount, computed, onUnmounted, watch } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { formatTokenCost, formatTokenAmount, imageLoadError, calcTokenCost } from '@/utils'\n    import { MsgBeginRedelegate } from 'cosmjs-types/cosmos/staking/v1beta1/tx'\n\n    // Components\n    import TxFee from '@/components/TxFee.vue'\n    import ValidatorsModal from '@/components/modal/ValidatorsModal.vue'\n    import RedelegateConfirmModal from '@/components/modal/RedelegateConfirmModal.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        showValidatorsFromModal = ref(false),\n        showValidatorsToModal = ref(false),\n        showRedelegateConfirmModal = ref(false),\n        msgAny = ref([]),\n        amount = ref(''),\n        maxAmount = ref(0),\n        isAmountReady = ref(false),\n        isFormValid = ref(computed(() => isAmountReady.value && !!store.redelegateValidatorFrom && !!store.redelegateValidatorTo)),\n        validatorFromStaked = computed(() => {\n            let result = isStakedValidator(store.redelegateValidatorFrom?.operator_address)\n\n            return result || {\n                balance: {\n                    amount: 0\n                }\n            }\n        }),\n        validatorToStaked = computed(() => {\n            let result = isStakedValidator(store.redelegateValidatorTo?.operator_address)\n\n            return result || {\n                balance: {\n                    amount: 0\n                }\n            }\n        })\n\n\n    onBeforeMount(() => {\n        // Reset data\n        store.redelegateValidatorFrom = null\n        store.redelegateValidatorTo = null\n    })\n\n\n    onUnmounted(() => {\n        // Reset data\n        store.redelegateValidatorFrom = null\n        store.redelegateValidatorTo = null\n\n        // Unlisten events\n        emitter.off('close_redelegate_confirm_modal')\n        emitter.off('close_validators_modal')\n    })\n\n\n    watch(computed(() => store.redelegateValidatorFrom), () => {\n        // Get max amount\n        maxAmount.value = (isStakedValidator(store.redelegateValidatorFrom.operator_address)).balance.amount\n    })\n\n\n    watch(computed(() => isFormValid.value), () => {\n        if (isFormValid.value) {\n            // Set messeges\n            msgAny.value = [{\n                typeUrl: '/cosmos.staking.v1beta1.MsgBeginRedelegate',\n                value: MsgBeginRedelegate.fromPartial({\n                    delegatorAddress: store.currentAddress,\n                    validatorSrcAddress: store.redelegateValidatorFrom.operator_address,\n                    validatorDstAddress: store.redelegateValidatorTo.operator_address,\n                    amount: {\n                        denom: store.networks[store.currentNetwork].denom,\n                        amount: `${parseFloat((amount.value).toString().replace(',', '.')).toFixed(store.networks[store.currentNetwork].exponent) * Math.pow(10, store.networks[store.currentNetwork].exponent)}`\n                    }\n                })\n            }]\n        }\n    })\n\n\n    // Set MAX amount\n    function setMaxAmount() {\n        // Set amount status\n        isAmountReady.value = false\n\n        setTimeout(() => {\n            // Set amount\n            amount.value = formatTokenAmount(maxAmount.value, store.networks[store.currentNetwork].exponent)\n\n            // Set amount status\n            isAmountReady.value = true\n        })\n    }\n\n\n    // Validate amount\n    function validateAmount(e) {\n        // Set amount status\n        isAmountReady.value = false\n\n        setTimeout(() => {\n            // Negative value\n            if (e.target.value.length && e.target.value <= 0) {\n                // Set empty\n                amount.value = ''\n            }\n\n            // Acceptable value\n            if (e.target.value.length && e.target.value > 0 && e.target.value < formatTokenAmount(maxAmount.value, store.networks[store.currentNetwork].exponent)){\n                // Set amount status\n                isAmountReady.value = true\n            }\n\n            // More than available balance\n            if (e.target.value > formatTokenAmount(maxAmount.value, store.networks[store.currentNetwork].exponent)) {\n                // Set MAX amount\n                setMaxAmount()\n            }\n        })\n    }\n\n\n    // Is staked validator\n    function isStakedValidator(address) {\n        return store.stakedBalances.find(balance => balance.validator_info.operator_address === address)\n    }\n\n\n    // Event \"close_validators_modal\"\n    emitter.on('close_validators_modal', () => {\n        // Hide validators modal\n        showValidatorsFromModal.value = false\n        showValidatorsToModal.value = false\n    })\n\n\n    // Event \"close_stake_confirm_modal\"\n    emitter.on('close_redelegate_confirm_modal', () => {\n        // Hide redelegate confirm modal\n        showRedelegateConfirmModal.value = false\n    })\n</script>\n\n\n<style scoped>\n    .validator_info\n    {\n        position: relative;\n\n        padding: 8px;\n\n        border-radius: 10px;\n        background: linear-gradient(to bottom,  #2c0a5a 0%,#6b27b9 100%);\n    }\n\n    .validator_info.from\n    {\n        background: linear-gradient(to top,  #2c0a5a 0%,#6b27b9 100%);\n    }\n\n\n    .validator_info .info_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .validator_info.from:before\n    {\n        position: absolute;\n        z-index: 1;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 72px;\n        height: 8px;\n        margin: 0 auto;\n\n        content: '';\n        pointer-events: none;\n\n        background: url(@/assets/bg_redelegate_validator_from.png) 0 0 no-repeat;\n    }\n\n\n    .validator_info.to:before\n    {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        right: 0;\n        left: 0;\n\n        display: block;\n\n        width: 72px;\n        height: 19px;\n        margin: 0 auto;\n\n        content: '';\n        pointer-events: none;\n\n        background: url(@/assets/bg_redelegate_validator_to.png) 0 0 no-repeat;\n    }\n\n\n    .validator_info .info\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        height: 46px;\n        padding: 0 15px;\n\n        cursor: pointer;\n\n        border-radius: 11px;\n        background: #06000e;\n    }\n\n\n    .validator_info .info .placeholder\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        opacity: .6;\n    }\n\n\n    .validator_info .info .arr\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 16px;\n        bottom: 0;\n\n        display: block;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n\n        transform: rotate(-90deg);\n    }\n\n\n    .validator_info .validator_wrap\n    {\n        padding: 1px;\n\n        cursor: pointer;\n\n        border-radius: 12px;\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n\n    .validator_info .validator\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding: 5px 7px;\n\n        border-radius: 11px;\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n\n\n    .validator_info .validator .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 44px;\n        height: 44px;\n        margin-right: 8px;\n        padding: 6px;\n\n        border-radius: 50%;\n        background: #950fff;\n    }\n\n\n    .validator_info .validator .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .validator_info .validator .logo .icon\n    {\n        display: none;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .validator_info .validator .logo img.hide\n    {\n        display: none;\n    }\n\n    .validator_info .validator .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n    .validator_info .validator .logo + *\n    {\n        width: calc(100% - 100px);\n    }\n\n\n    .validator_info .validator .moniker\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        overflow: hidden;\n\n        width: calc(100% - 46px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .validator_info .validator .staked\n    {\n        font-size: 16px;\n        font-weight: 300;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        color: rgba(255, 255, 255, .80);\n    }\n\n\n    .validator_info .validator .staked .logo\n    {\n        width: 18px;\n        height: 18px;\n        margin: 0 0 0 4px;\n        padding: 0;\n    }\n\n\n    .validator_info .validator .arr\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 16px;\n        bottom: 0;\n\n        display: block;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n\n        transform: rotate(-90deg);\n    }\n\n\n    .validator_info .staked\n    {\n        position: relative;\n        z-index: 2;\n\n        margin-top: 6px;\n        padding: 4px 7px 5px;\n\n        border-radius: 10px;\n        background: #170232;\n    }\n\n\n    .validator_info.from .staked:before\n    {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 72px;\n        height: 19px;\n        margin: 0 auto;\n\n        content: '';\n        pointer-events: none;\n\n        background: url(@/assets/bg_redelegate_validator_from_staked.png) 0 0 no-repeat;\n    }\n\n\n    .validator_info .staked .label\n    {\n        font-weight: 500;\n    }\n\n\n    .validator_info .staked .amount\n    {\n        font-weight: 300;\n    }\n\n\n    .validator_info .staked .amount span\n    {\n        font-weight: 400;\n    }\n\n\n    .validator_info .staked .cost\n    {\n        font-weight: 300;\n\n        color: rgba(255, 255, 255, .60);\n    }\n\n\n\n    .arrow_wrap\n    {\n        position: relative;\n        z-index: 5;\n\n        width: 38px;\n        height: 38px;\n        margin: -15px auto;\n        padding: 1px;\n\n        border-radius: 5px;\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n\n    .arrow_wrap .arrow\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 36px;\n        height: 36px;\n\n        border-radius: 4px;\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n\n\n    .arrow_wrap .arrow svg\n    {\n        display: block;\n\n        width: 12px;\n        height: 20px;\n    }\n\n\n\n    .amount_field\n    {\n        margin-top: 12px;\n        margin-bottom: auto;\n        padding-bottom: 20px;\n    }\n\n\n    .amount_field .cost\n    {\n        margin-left: auto;\n\n        color: rgba(255, 255, 255, .70);\n    }\n\n\n    .amount_field.disabled\n    {\n        pointer-events: none;\n    }\n\n\n\n    .field\n    {\n        position: relative;\n\n        padding: 1px;\n\n        border-radius: 10px;\n        background: linear-gradient(to bottom,  #5d33ce 0%,#200750 100%);\n    }\n\n\n    .input\n    {\n        border-radius: 9px;\n        background: #06000e;\n    }\n\n\n    .btns\n    {\n        margin-top: 0;\n        padding: 0;\n    }\n</style>","import script from \"./Redelegate.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Redelegate.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Redelegate.vue?vue&type=style&index=0&id=b32c0418&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b32c0418\"]])\n\nexport default __exports__"],"names":["props","__props","emitter","inject","query","ref","setFocusEvent","emit","setTimeout","setBlurEvent","setEnterEvent","value","source","clearField","__exports__","store","useGlobalStore","isValidatorsGot","validators","searchResult","isStakedValidator","address","stakedBalances","find","balance","validator_info","operator_address","isCurrentValidator","unstake","unstakeCurrentValidator","redelegate","redelegateValidatorFrom","redelegateValidatorTo","stakeCurrentValidator","setValidator","validator","onBeforeMount","async","getUserValidators","getAllValidators","filter","sort","a","b","parseInt","tokens","on","key","description","moniker","toLocaleLowerCase","includes","push","router","useRouter","i18n","notification","useNotification","showSignTxModal","memo","feeCost","computed","formatTokenAmount","TxFee","userGasAmount","currentLevel","exponent","isProcess","isRemember","updateTxFeeInfo","txBytes","signTx","msgAny","notify","group","clean","speed","duration","title","global","t","type","data","explorer_link","getExplorerLink","currentNetwork","sendTx","catch","error","console","log","showError","checkTxResult","errorText","code","text","networks","currentTxHash","resetTxFee","onUnmounted","off","showValidatorsFromModal","showValidatorsToModal","showRedelegateConfirmModal","amount","maxAmount","isAmountReady","isFormValid","validatorFromStaked","result","validatorToStaked","setMaxAmount","validateAmount","e","target","length","watch","typeUrl","MsgBeginRedelegate","fromPartial","delegatorAddress","currentAddress","validatorSrcAddress","validatorDstAddress","denom","parseFloat","toString","replace","toFixed","Math","pow"],"sourceRoot":""}