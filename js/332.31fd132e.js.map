{"version":3,"file":"js/332.31fd132e.js","mappings":"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","sources":["webpack://cosmos-telegram-signer/./src/components/Auth.vue","webpack://cosmos-telegram-signer/./src/components/Auth.vue?4730","webpack://cosmos-telegram-signer/./src/components/Loader.vue","webpack://cosmos-telegram-signer/./src/components/Loader.vue?b8fd","webpack://cosmos-telegram-signer/./src/components/modal/AuthErrorModal.vue","webpack://cosmos-telegram-signer/./src/components/modal/AuthErrorModal.vue?a22f","webpack://cosmos-telegram-signer/./src/views/AuthPage.vue","webpack://cosmos-telegram-signer/./src/views/AuthPage.vue?a80b"],"sourcesContent":["<template>\n    <!-- Pin code -->\n    <div class=\"pin\">\n        <!-- Pin code label -->\n        <div class=\"field_label\">\n            {{ $t('message.auth_enter_pin_label') }}\n        </div>\n\n        <div class=\"row\" :class=\"{ error: wrongPin }\">\n            <!-- Pin code field -->\n            <div class=\"field\">\n                <input type=\"password\" class=\"input big\" v-model=\"pinCode[0]\" maxlength=\"1\" inputmode=\"numeric\" ref=\"inputRef\"\n                    :class=\"{ active: pinCode[0].length }\"\n                    @input=\"moveFocus($event, 1)\"\n                    @keydown.backspace=\"moveBack($event, 0)\">\n            </div>\n\n            <!-- Pin code field -->\n            <div class=\"field\">\n                <input type=\"password\" class=\"input big\" v-model=\"pinCode[1]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[0].length\"\n                    :class=\"{ active: pinCode[1].length }\"\n                    @input=\"moveFocus($event, 2)\"\n                    @keydown.backspace=\"moveBack($event, 1)\">\n            </div>\n\n            <!-- Pin code field -->\n            <div class=\"field\">\n                <input type=\"password\" class=\"input big\" v-model=\"pinCode[2]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[1].length\"\n                    :class=\"{ active: pinCode[2].length }\"\n                    @input=\"moveFocus($event, 3)\"\n                    @keydown.backspace=\"moveBack($event, 2)\">\n            </div>\n\n            <!-- Pin code field -->\n            <div class=\"field\">\n                <input type=\"password\" class=\"input big\" v-model=\"pinCode[3]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[2].length\"\n                    :class=\"{ active: pinCode[3].length }\"\n                    @input=\"moveFocus($event, 4)\"\n                    @keydown.backspace=\"moveBack($event, 3)\">\n            </div>\n\n            <!-- Pin code field -->\n            <div class=\"field\">\n                <input type=\"password\" class=\"input big\" v-model=\"pinCode[4]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[3].length\"\n                    :class=\"{ active: pinCode[4].length }\"\n                    @input=\"moveFocus($event, 5)\"\n                    @keydown.backspace=\"moveBack($event, 4)\">\n            </div>\n\n            <!-- Pin code field -->\n            <div class=\"field\">\n                <input type=\"password\" class=\"input big\" v-model=\"pinCode[5]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[4].length\"\n                    :class=\"{ active: pinCode[5].length }\"\n                    @input=\"moveFocus($event, 6)\"\n                    @keydown.backspace=\"moveBack($event, 5)\">\n            </div>\n        </div>\n\n        <!-- Pin warning text -->\n        <div class=\"warning\" v-if=\"userAuthErrorLimit < store.authErrorLimit\">\n            {{ $t('message.auth_error_warning', { count: userAuthErrorLimit }) }}\n        </div>\n    </div>\n\n\n    <!-- Biometric button -->\n    <button class=\"biometric_btn\" @click.prevent=\"checkBiometricAccess\" v-if=\"isBiometricAvailable && userAuthErrorLimit == store.authErrorLimit\">\n        <!-- Biometric button text -->\n        <span>{{ $t('message.btn_biometric2') }}</span>\n\n        <!-- Biometric button icon -->\n        <svg class=\"icon\" v-if=\"biometrictype === 'face'\">\n            <use xlink:href=\"@/assets/sprite.svg#ic_biometric_face\"></use>\n        </svg>\n\n        <!-- Biometric button icon -->\n        <svg class=\"icon\" v-else>\n            <use xlink:href=\"@/assets/sprite.svg#ic_biometric_finger\"></use>\n        </svg>\n    </button>\n\n\n    <!-- Buttons -->\n    <div class=\"btns\">\n        <!-- Login button -->\n        <button class=\"btn\" :class=\"{ disabled: !isFormValid }\" @click.prevent=\"login()\" v-if=\"userAuthErrorLimit < store.authErrorLimit\">\n            <span v-if=\"store.isAuthorized\">{{ $t('message.btn_sign') }}</span>\n            <span v-else>{{ $t('message.btn_login') }}</span>\n        </button>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref, watch, computed, inject } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { hashDataWithKey } from '@/utils'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        pinCode = ref(['', '', '', '', '', '']),\n        pinDB = ref(''),\n        hmacKey = ref(''),\n        wrongPin = ref(false),\n        userAuthErrorLimit = ref(store.authErrorLimit),\n        isBiometric = ref(false),\n        isBiometricAvailable = ref(false),\n        biometricType = ref('finger')\n\n\n    onBeforeMount(async () => {\n        // Get data from DB\n        let result = await store.getMultipleData(['pin', 'hmacKey', 'authErrorLimit', 'isBiometric'])\n\n        // Set pin from DB\n        pinDB.value = result.pin\n\n        // Set hmacKey from DB\n        hmacKey.value = result.hmacKey\n\n        // Set user auth error limit\n        userAuthErrorLimit.value = result.authErrorLimit\n\n        // Set biometric status from DB\n        isBiometric.value = result.isBiometric\n\n        // Is biometric available\n        isBiometricAvailable.value = Telegram.WebApp.BiometricManager.isBiometricAvailable\n\n        // Biometric type\n        if (Telegram.WebApp.BiometricManager.biometricType != 'unknown') {\n            biometricType.value = Telegram.WebApp.BiometricManager.biometricType\n        }\n\n        // Check biometric access\n        if (isBiometricAvailable.value && isBiometric.value) {\n            checkBiometricAccess()\n        }\n    })\n\n\n    watch(pinCode.value, () => {\n        // Reset focus\n        if (pinCode.value[5].length) {\n            document.activeElement.blur()\n        }\n\n        // Compare pins\n        if (pinCode.value[5].length && userAuthErrorLimit.value === store.authErrorLimit) {\n            login()\n        }\n    })\n\n\n    // Move focus\n    function moveFocus(event, nextIndex) {\n        if (event.target.value.length >= 1 && nextIndex < 6) {\n            event.target.closest('.row').querySelector(`.field:nth-child(${nextIndex + 1}) input`).focus()\n        }\n    }\n\n\n    // Move back\n    function moveBack(event, currentIndex) {\n        setTimeout(() => {\n            if (event.target.value.length === 0 && currentIndex > 0) {\n                event.target.closest('.row').querySelector(`.field:nth-child(${currentIndex}) input`).select()\n            }\n        })\n    }\n\n\n    // Check biometric access\n    function checkBiometricAccess() {\n        !Telegram.WebApp.isAccessGranted\n            ? Telegram.WebApp.BiometricManager.requestAccess({ reason: '' }, () => biometricAuthenticate())\n            : biometricAuthenticate()\n    }\n\n\n    // Biometric authenticate\n    function biometricAuthenticate() {\n        Telegram.WebApp.BiometricManager.authenticate({ reason: '' }, res => {\n            if (res) {\n                // Set event auth\n                emitter.emit('auth')\n            }\n        })\n    }\n\n\n    // Login\n    async function login() {\n        // Compare pins\n        let compareResult = await comparePINCode()\n\n        if (compareResult) {\n            // Update limit\n            userAuthErrorLimit.value = store.authErrorLimit\n\n            // Set event auth\n            emitter.emit('auth')\n        } else {\n            // Set auth error\n            await setAuthError()\n        }\n    }\n\n\n    // Compare pin code\n    async function comparePINCode() {\n        // Encrypt the PIN\n        let pinHash = await hashDataWithKey(pinCode.value.join(''), hmacKey.value)\n\n        return pinHash === pinDB.value\n    }\n\n\n    // Set auth error\n    async function setAuthError() {\n        // Set error\n        wrongPin.value = true\n\n        let newLimit = userAuthErrorLimit.value - 1\n\n        // Update limit\n        userAuthErrorLimit.value = newLimit\n\n        if (!store.isAuthorized) {\n            newLimit\n                // Сhange auth limit\n                ? store.updateUserAuthErrorLimit(newLimit)\n                // Set event show_error_auth_modal\n                : emitter.emit('show_error_auth_modal')\n        } else {\n            if (!newLimit) {\n                // Set event show_error_sign_tx_modal\n                emitter.emit('show_error_sign_tx_modal')\n            }\n        }\n\n        // Clear data\n        pinCode.value = ['', '', '', '', '', '']\n\n        // Reset data\n        wrongPin.value = false\n    }\n\n\n    // Validate form\n    const isFormValid = computed(() => pinCode.value[5].length != '')\n</script>\n\n\n<style scoped>\n    .pin\n    {\n        position: relative;\n\n        margin-top: 8px;\n    }\n\n\n    .pin .row\n    {\n        flex-wrap: nowrap;\n    }\n\n\n    .pin .row > *\n    {\n        width: 100%;\n    }\n\n\n    .pin .row > * + *\n    {\n        margin-left: 10px;\n    }\n\n\n    .pin .input\n    {\n        font-size: 20px;\n\n        text-align: center;\n    }\n\n\n    .pin .error .input\n    {\n        border-color: #f00;\n    }\n\n    .pin .success .input\n    {\n        border-color: #00aa63;\n    }\n\n\n    .pin .warning\n    {\n        font-size: 12px;\n\n        position: absolute;\n        top: 100%;\n        left: 0;\n\n        width: 100%;\n        margin-top: 4px;\n\n        text-align: center;\n\n        color: #ff4b4b;\n    }\n\n\n\n    .biometric_btn\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        display: block;\n\n        margin: auto;\n    }\n\n\n    .biometric_btn.top\n    {\n        margin-top: 40px;\n    }\n\n\n    .biometric_btn .icon\n    {\n        display: block;\n\n        width: 44px;\n        height: 44px;\n        margin: 0 auto;\n    }\n\n\n    .biometric_btn.disabled\n    {\n        pointer-events: none;\n\n        opacity: .6;\n    }\n</style>","import script from \"./Auth.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Auth.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Auth.vue?vue&type=style&index=0&id=4cace600&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4cace600\"]])\n\nexport default __exports__","<template>\n    <!-- Loader wrap -->\n    <div class=\"loader_wrap\">\n        <!-- Loader -->\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n        background: rgba(0, 0, 0, .5);\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=7c4ddd1d\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=7c4ddd1d&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <!-- Auth error modal -->\n    <section class=\"modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <!-- Loader -->\n                <Loader v-if=\"loading\" />\n\n                <template v-else>\n                <!-- Close button -->\n                <router-link to=\"/\" class=\"close_btn\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </router-link>\n\n                <!-- Modal title -->\n                <div class=\"modal_title\">\n                    {{ $t('message.auth_error_title') }}\n                </div>\n\n                <!-- Modal desc -->\n                <div class=\"modal_desc\">\n                    {{ $t('message.auth_error_desc') }}\n                </div>\n\n                <!-- Modal buttons -->\n                <div class=\"btns\">\n                    <!-- Import button -->\n                    <router-link to=\"/import_wallet\" class=\"btn\">\n                        <span>{{ $t('message.btn_import_existing_wallet') }}</span>\n                    </router-link>\n                </div>\n                </template>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref } from 'vue'\n    import { useGlobalStore } from '@/store'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const store = useGlobalStore(),\n        loading = ref(true)\n\n\n    onBeforeMount(async () => {\n        // Clear data\n        await store.clearAllData()\n\n        // Hide loader\n        loading.value = false\n    })\n</script>","import script from \"./AuthErrorModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AuthErrorModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <!-- Auth page -->\n    <section class=\"page_container auth_page\">\n        <div class=\"cont\">\n            <!-- Auth page title -->\n            <div class=\"page_title\">\n                {{ $t('message.auth_title') }}\n            </div>\n\n            <!-- Auth page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- Auth -->\n                    <Auth />\n\n                    <button @click.prevent=\"deleteAll\" style=\"margin: 20px auto 0; width: 70px;\">Delete all</button>\n                </div>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Auth error modal -->\n    <transition name=\"modal\">\n    <AuthErrorModal v-if=\"showErrorAuthModal\" />\n    </transition>\n\n    <!-- Overlay -->\n    <transition name=\"fade\">\n    <div class=\"modal_overlay\" @click.prevent=\"emitter.emit('close_any_modal')\" v-if=\"showErrorAuthModal\"></div>\n    </transition>\n</template>\n\n\n<script setup>\n    import { ref, inject, onUnmounted } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useRouter } from 'vue-router'\n\n    // Components\n    import Auth from '@/components/Auth.vue'\n    import AuthErrorModal from '@/components/modal/AuthErrorModal.vue'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        emitter = inject('emitter'),\n        showErrorAuthModal = ref(false)\n\n\n    onUnmounted(() => {\n        // Unlisten events\n        emitter.off('auth')\n        emitter.off('show_error_auth_modal')\n    })\n\n\n    async function deleteAll() {\n        // Clear data\n        await store.clearAllData()\n\n        // Redirect\n        router.push('/')\n    }\n\n\n    // Event \"auth\"\n    emitter.on('auth', () => {\n        // Сhange auth limit\n        store.updateUserAuthErrorLimit(store.authErrorLimit)\n\n        // Set authorized status\n        store.isAuthorized = true\n\n        // Redirect\n        router.push('/account')\n    })\n\n\n    // Event \"show_error_auth_modal\"\n    emitter.on('show_error_auth_modal', () => {\n        // Show error auth modal\n        showErrorAuthModal.value = true\n    })\n</script>","import script from \"./AuthPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AuthPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useGlobalStore","emitter","inject","pinCode","ref","pinDB","hmacKey","wrongPin","userAuthErrorLimit","authErrorLimit","isBiometric","isBiometricAvailable","biometricType","moveFocus","event","nextIndex","target","value","length","closest","querySelector","focus","moveBack","currentIndex","setTimeout","select","checkBiometricAccess","Telegram","WebApp","isAccessGranted","biometricAuthenticate","BiometricManager","requestAccess","reason","authenticate","res","emit","async","login","compareResult","comparePINCode","setAuthError","pinHash","hashDataWithKey","join","newLimit","isAuthorized","updateUserAuthErrorLimit","onBeforeMount","result","getMultipleData","pin","watch","document","activeElement","blur","isFormValid","computed","__exports__","class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","render","loading","clearAllData","router","useRouter","showErrorAuthModal","deleteAll","push","onUnmounted","off","on"],"sourceRoot":""}