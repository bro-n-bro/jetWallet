{"version":3,"file":"js/488.f84d6108.js","mappings":"ksCA2JI,MAAMA,GAAQC,EAAAA,EAAAA,KACVC,GAAUC,EAAAA,EAAAA,IAAO,WACjBC,GAAkBC,EAAAA,EAAAA,KAAI,GAEtBC,IADSD,EAAAA,EAAAA,IAAI,KACJA,EAAAA,EAAAA,IAAI,KA4BjB,SAASE,IACLD,EAAOE,OAAQC,EAAAA,EAAAA,KAAkBC,EAAAA,EAAAA,MAA4BV,EAAMW,SAASX,EAAMY,gBAAgBC,SACtG,CAIA,SAASC,EAAeC,GAEhBA,EAAEC,OAAOR,MAAMS,QAAUF,EAAEC,OAAOR,OAAS,IAE3CF,EAAOE,MAAQ,GAIfO,EAAEC,OAAOR,OAAQC,EAAAA,EAAAA,KAAkBC,EAAAA,EAAAA,MAA4BV,EAAMW,SAASX,EAAMY,gBAAgBC,WAEpGN,GAER,C,OA3CAW,EAAAA,EAAAA,KAAcC,gBAEJnB,EAAMoB,yBAAyB,KAezCC,EAAAA,EAAAA,KAAY,KAERnB,EAAQoB,IAAI,QACZpB,EAAQoB,IAAI,sBAAsB,IA2BtCpB,EAAQqB,GAAG,QAAQ,KAEfnB,EAAgBI,OAAQ,EAGxBgB,OAAO,IAKXtB,EAAQqB,GAAG,uBAAuB,KAE9BnB,EAAgBI,OAAQ,CAAK,I,+nHCvNrC,MAAMiB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://cosmos-telegram-signer/./src/views/Stake.vue","webpack://cosmos-telegram-signer/./src/views/Stake.vue?1e3c"],"sourcesContent":["<template>\n    <section class=\"page_container stake\">\n        <div class=\"cont\">\n            <div class=\"head\">\n                <router-link to=\"/account?activeSlide=1\" class=\"back_btn\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </router-link>\n\n                <div class=\"page_title\">\n                    {{ $t('message.stake_page_title') }}\n                </div>\n            </div>\n\n\n            <div class=\"current_staked\">\n                <div class=\"label\">\n                    {{ $t('message.stake_current_staked_label') }}\n                </div>\n\n                <div class=\"data_wrap\">\n                    <div class=\"data\">\n                        <div class=\"apr\">\n                            <span>{{ $t('message.stake_APR_label') }}<br> {{ (store.networks[store.currentNetwork].APR * 100).toFixed(2) }}%</span>\n                        </div>\n\n                        <div class=\"token\">\n                            <div class=\"logo\">\n                                <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n                            </div>\n\n                            <div>\n                                <div class=\"denom\">\n                                    {{ store.networks[store.currentNetwork].token_name }}\n                                </div>\n\n                                <div class=\"unbonding_period\">\n                                    {{ $t('message.stake_unbonding_period_label') }}\n\n                                    {{ store.networks[store.currentNetwork].unbondingTime }}\n\n                                    {{ $t('message.stake_unbonding_time_unit') }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"balances\">\n                            <div>\n                                <div class=\"label\">\n                                    {{ $t('message.stake_available_label') }}\n                                </div>\n\n                                <div class=\"amount\">\n                                    {{ formatTokenAmount(calcStakeAvailabelAmount(), store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }) }}\n\n                                    {{ store.networks[store.currentNetwork].token_name }}\n                                </div>\n\n                                <div class=\"cost\">\n                                    {{ store.currentCurrencySymbol }}\n\n                                    {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, calcStakeAvailabelAmount(), store.networks[store.currentNetwork].exponent)) }}\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">\n                                    {{ $t('message.stake_staked_label') }}\n                                </div>\n\n                                <div class=\"amount\">\n                                    {{ formatTokenAmount(calcStakedAmount(), store.networks[store.currentNetwork].exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }) }}\n\n                                    {{ store.networks[store.currentNetwork].token_name }}\n                                </div>\n\n                                <div class=\"cost\">\n                                    {{ store.currentCurrencySymbol }}{{ formatTokenCost(calcStakedBalancesCost()) }}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"validator\">\n                <div class=\"label\">\n                    {{ $t('message.stake_validator_label') }}\n                </div>\n\n                <div class=\"info_wrap\">\n                    <div class=\"info\">\n                        <div class=\"placeholder\">\n                            {{ $t('message.stake_validator_placeholder') }}\n                        </div>\n\n                        <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver2\"></use></svg>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"amount\">\n                <div class=\"label\">\n                    {{ $t('message.stake_amount_label') }}\n\n                    <div class=\"cost\">\n                        {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, (amount * Math.pow(10, store.networks[store.currentNetwork].exponent)), store.networks[store.currentNetwork].exponent)) }}\n\n                        {{ store.currentCurrencySymbol }}\n                    </div>\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"number\" inputmode=\"numeric\" class=\"input big\" v-model=\"amount\" placeholder=\"0.00\" @input=\"validateAmount($event)\">\n\n                    <button type=\"button\" class=\"max_btn\" @click.prevent=\"setMaxAmount\">\n                        {{ $t('message.btn_MAX') }}\n                    </button>\n                </div>\n            </div>\n\n\n            <!-- Tx fee -->\n            <!-- <TxFee v-if=\"store.isBalancesGot\" :msgAny /> -->\n\n\n            <div class=\"btns\">\n                <button v-if=\"!store.networks[store.currentNetwork].currentTxHash\" class=\"btn\" @click.prevent=\"showSignTxModal = true\" :class=\"{ disabled: !store.TxFee.isEnough }\">\n                    <span>{{ $t('message.btn_stake') }}</span>\n                </button>\n\n                <button v-else class=\"btn waiting_btn\" @click.prevent=\"emitter.emit('show_pending_notification')\">\n                    <span>{{ $t('message.btn_waiting_tx') }}</span>\n                </button>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Sign transaction -->\n    <SignTx v-if=\"showSignTxModal\"/>\n</template>\n\n\n<script setup>\n    import { ref, inject, onUnmounted, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { getNetworkLogo, formatTokenCost, calcTokenCost, calcStakedBalancesCost, calcStakeAvailabelAmount, calcStakedAmount, formatTokenAmount } from '@/utils'\n\n    // Components\n    import TxFee from '@/components/TxFee.vue'\n    import SignTx from '@/components/modal/SignTx.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        showSignTxModal = ref(false),\n        msgAny = ref([]),\n        amount = ref('')\n\n\n    onBeforeMount(async () => {\n        // Get network unbonding period\n        await store.getNetworkUnbondingTime()\n\n        // Set messeges\n        // store.stakedBalances.forEach(balance => {\n        //     msgAny.value.push({\n        //         typeUrl: '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward',\n        //         value: {\n        //             delegatorAddress: store.currentAddress,\n        //             validatorAddress: balance.validator_info.operator_address\n        //         }\n        //     })\n        // })\n    })\n\n\n    onUnmounted(() => {\n        // Unlisten events\n        emitter.off('auth')\n        emitter.off('close_sign_tx_modal')\n    })\n\n\n    // Set MAX amount\n    function setMaxAmount() {\n        amount.value = formatTokenAmount(calcStakeAvailabelAmount(), store.networks[store.currentNetwork].exponent)\n    }\n\n\n    // Validate amount\n    function validateAmount(e) {\n        // Zero\n        if (e.target.value.length && e.target.value <= 0) {\n            // Set zero\n            amount.value = 0\n        }\n\n        // More than available balance\n        if (e.target.value > formatTokenAmount(calcStakeAvailabelAmount(), store.networks[store.currentNetwork].exponent)) {\n            // Set MAX amount\n            setMaxAmount()\n        }\n    }\n\n\n    // Event \"auth\"\n    emitter.on('auth', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n\n        // Claim tokens\n        claim()\n    })\n\n\n    // Event \"close_sign_tx_modal\"\n    emitter.on('close_sign_tx_modal', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n    })\n</script>\n\n\n<style scoped>\n    .stake\n    {\n        padding-top: 8px;\n\n        background: #170232;\n    }\n\n\n    .head\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        margin-bottom: 10px;\n    }\n\n\n    .back_btn\n    {\n        position: relative;\n        top: 0;\n        left: 0;\n\n        margin-left: -12px;\n    }\n\n\n    .page_title\n    {\n        width: calc(100% - 48px);\n        margin-left: auto;\n        padding: 0;\n    }\n\n\n    .label\n    {\n        font-size: 14px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        margin-bottom: 2px;\n        padding: 0 10px;\n    }\n\n\n\n    .current_staked .data_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .current_staked .data\n    {\n        position: relative;\n\n        padding: 7px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n\n    .current_staked .apr\n    {\n        font-size: 12px;\n\n        position: absolute;\n        top: 7px;\n        right: 7px;\n\n        padding: 0 6px;\n\n        text-align: center;\n\n        border-radius: 4px;\n        background: #170232;\n    }\n\n\n    .current_staked .apr span\n    {\n        display: block;\n\n        background: linear-gradient(180deg, #dd93fe 0%, #aa36de 100%);\n        -webkit-background-clip: text;\n                background-clip: text;\n\n        -webkit-text-fill-color: transparent;\n    }\n\n\n\n    .current_staked .token\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n\n    .current_staked .token .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 38px;\n        height: 38px;\n\n        border-radius: 50%;\n    }\n\n\n    .current_staked .token .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .current_staked .token .logo + *\n    {\n        align-self: center;\n\n        width: calc(100% - 44px);\n    }\n\n\n    .current_staked .token .denom\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        text-transform: uppercase;\n    }\n\n\n    .current_staked .token .unbonding_period\n    {\n        font-size: 12px;\n        font-weight: 200;\n    }\n\n\n\n    .current_staked .balances\n    {\n        display: flex;\n        align-content: stretch;\n        align-items: stretch;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        margin-top: 10px;\n    }\n\n\n    .current_staked .balances > *\n    {\n        width: calc(50% - 4px);\n        padding: 4px 8px;\n\n        border-radius: 6px;\n        background: #170232;\n    }\n\n\n    .current_staked .balances .label\n    {\n        font-size: 12px;\n        font-weight: 500;\n\n        margin: 0;\n        padding: 0;\n    }\n\n\n    .current_staked .balances .amount\n    {\n        font-size: 12px;\n        font-weight: 300;\n\n        margin: 0;\n    }\n\n\n    .current_staked .balances .cost\n    {\n        font-size: 12px;\n        font-weight: 300;\n\n        color: rgba(255, 255, 255, .60);\n    }\n\n\n\n    .validator\n    {\n        margin-top: 12px;\n    }\n\n\n    .validator .info_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .validator .info\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        height: 46px;\n        padding: 0 15px;\n\n        cursor: pointer;\n\n        border-radius: 11px;\n        background: #06000e;\n    }\n\n\n    .validator .placeholder\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        opacity: .6;\n    }\n\n\n    .validator .arr\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 16px;\n        bottom: 0;\n\n        display: block;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n\n        transform: rotate(-90deg);\n    }\n\n\n\n    .amount\n    {\n        margin-top: 12px;\n        margin-bottom: auto;\n    }\n\n\n    .amount .cost\n    {\n        margin-left: auto;\n\n        color: rgba(255, 255, 255, .70);\n    }\n\n\n\n    .field\n    {\n        position: relative;\n\n        padding: 1px;\n\n        border-radius: 10px;\n        background: linear-gradient(to bottom,  #5d33ce 0%,#200750 100%);\n    }\n\n\n    .input\n    {\n        border-radius: 9px;\n        background: #06000e;\n    }\n\n\n    .btns\n    {\n        margin-top: 0;\n        padding: 0;\n    }\n</style>","import script from \"./Stake.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Stake.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Stake.vue?vue&type=style&index=0&id=4809f82c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4809f82c\"]])\n\nexport default __exports__"],"names":["store","useGlobalStore","emitter","inject","showSignTxModal","ref","amount","setMaxAmount","value","formatTokenAmount","calcStakeAvailabelAmount","networks","currentNetwork","exponent","validateAmount","e","target","length","onBeforeMount","async","getNetworkUnbondingTime","onUnmounted","off","on","claim","__exports__"],"sourceRoot":""}