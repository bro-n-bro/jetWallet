(function(){var e={60238:function(e,t,a){"use strict";a.d(t,{A:function(){return i}});var n=a(85384),r={en:{message:{page_title:"Bro wallet",create_wallet_title:"New Recovery Phrase",create_wallet_confirm_title:"Verify Your Recovery Phrase",create_pin_title:"Name your wallet",wallet_created_title:"Wallet created!",wallet_title:"Wallet page",import_wallet_title:"Import Existing Wallet",age_modal_text:"Are you 18 years old?",index_page_title:"Сreation of a new wallet",create_wallet_agree_label1:"Do not share your recovery phrase with ANYONE.",create_wallet_agree_label2:"Back up the phrase safely.",create_wallet_agree_checkbox1:"I understand that I have access to my wallet solely because I possess the recovery phrase. If this phrase falls into someone else's hands, I will lose my funds.",create_wallet_agree_checkbox2:"I also understand that if I lose my recovery phrase, I will lose all the funds in this wallet.",create_wallet_derivation_path_label:"Derivation path",confirm_label:"Word",confirm_exp:"Fill out the words according to their numbers to verify that you have stored your phrase safely.",create_pin_wallet_name_label:"Wallet name:",create_pin_create_pin_label:"Create pin:",create_pin_confirm_pin_label:"Repeat pin:",create_pin_wallet_name_placeholder:"Name",auth_title:"Welcome!",auth_enter_pin_label:"Enter pin:",auth_error_warning:"You have {count} attempts left",user_lock_title:"Account blocked!",user_lock_desc:"Your account has been blocked for {time} minutes due to multiple authorization errors. Unlocking will occur automatically after a period of time, you do not need to do anything for this.",user_lock_timer_label:"Time left:",mnemonic_tab1:"12 words",mnemonic_tab2:"24 words",mnemonic_tab3:"Private Key",import_wallet_exp:"Enter your recovery phrase here to restore your wallet.<br> Or click on any blank and paste the entire phrase.",import_wallet_exp2:"Enter your private key here to restore your wallet.<br> Or click on any blank and paste the entire phrase.",current_balance_title:"Current balance",stacked_balance_title:"Total Staked",available_tokens_title:"Available Balance",staked_tokens_title:"Staked Balance",staked_tokens_validator_label:"By:",claim_rewards_page_title:"Claimable Staking Reward",claim_rewards_title:"Claim Rewards",claim_rewards_not_enought:"You don’t have enough {denom} to pay Fee",calim_confirm_title:"Confirm transction",stake_page_title:"Stake",stake_confirm_page_title:"Confirm",stake_current_staked_label:"Token:",stake_APR_label:"APR",stake_validator_label:"Select validator:",stake_amount_label:"Amount:",stake_unbonding_period_label:"Unbonding Period:",stake_available_label:"Available",stake_staked_label:"Total Staked",stake_unbonding_time_unit:"days",stake_validator_placeholder:"Choose your validator",stake_confirm_voting_power:"of voting power",stake_confirm_token_label:"Token:",stake_confirm_amount_label:"Amount:",stake_confirm_daily_profit_label:"Daily profit:",stake_confirm_commission_label:"Commission:",stake_confirm_unbonding_period_label:"Unbonding Period:",stake_confirm_fee_label:"Fee:",unstake_page_title:"Unstake",unstake_confirm_page_title:"Confirm",unstaking_tokens_title:"Unstaking process",unstaking_tokens_label:"Unstaking in progress:",unstaking_tokens_count_label:"Unstakings:",unstaking_tokens_finish_label:"Available in:",unstaking_tokens_finish_days:"Days",unstaking_tokens_finish_day:"Day",send_confirm_page_title:"Confirm",send_page_tab1:"Send",send_page_tab2:"IBC send",send_destination_chain_label:"Destination Chain:",send_address_label:"Address:",send_amount_label:"Amount:",send_destination_chain_placeholder:"Select Chain",send_confirm_chain_from_label:"From the network:",send_confirm_chain_to_label:"To the network:",send_confirm_receiver_label:"Receiver:",send_confirm_fee_label:"Fee:",receive_page_title:"Receive",receive_amount_title:"Choose your amount",receive_amount_label:"Amount:",redelegate_page_title:"Switch validator",redelegate_confirm_page_title:"Confirm",redelegate_validator_from_label:"From:",redelegate_validator_to_label:"To:",redelegate_confirm_token_label:"Token:",redelegate_confirm_amount_label:"Amount:",tx_warning_title:"Warning",tx_warning_desc:"You can still try to make the transaction, but since you don't have enough tokens for gas, it may fail, or it might still go through",validators_page_title:"Validators:",validatoes_staked_label:"Staked:",validatoes_available_label:"Available:",chains_page_title:"Select Chain",stats_title:"Staking Profit",stats_token_label:"Token:",stats_available_label:"Available:",stats_staked_label:"Staked:",stats_personal_apr_label:"Personal APR:",stats_daily_profit_label:"Est. daily profit:",wrong_seeds_title:"Wrong seeds",wrong_seeds_desc:"Wrong seed phrase. Please try again.",derivation_path_title:"Derivation Path",derivation_path_desc:"<ul><li>You can create multipe addresses from one recovery phrase</li><li>A lost path cannot be recovered</li><li>If you are unfamiliar with this feature, skip or undo this step</li> </ul>",seed_phrase_hint_title:"Seed phrase",profile_title:"My wallets",edit_wallet_name_label:"Edit wallet name:",edit_wallet_seep_phrase_exp:"You can see the seed phrases, but you need to go through verification.",remove_wallet_title:"You are deleting wallet:",remove_wallet_desc:"Enter the name of the wallet you want to delete. We warn you that you will not be able to return it.",confirm_by_pin_title:"Confirm by pin",redelegations_title:"Active redelegations",redelegations_finish_days:"Days",redelegations_finish_day:"Day",tokens_page_title:"Tokens:",tx_fee_label:"Tx Fee:",tx_fee_modal_title:"Fee Options",tx_fee_fee_tier_label:"Fee tier",tx_fee_fee_token_label:"Fee Token:",tx_fee_gas_adjustment_label:"Gas Adjustment:",tx_fee_gas_amount_label:"Gas Amount",tx_fee_remember_label:"Remember my choise",tx_fee_auto_label:"Auto",tx_fee_low_label:"Low",tx_fee_average_label:"Average",tx_fee_high_label:"High",details_label:"Details:",memo_label:"Memo:",sign_tx_title:"Sign transaction",sign_tx_error_title:"Incorrect pin!",sign_tx_error_desc:"You have entered an incorrect PIN 4 times. For security reasons, you will be returned to the main screen to protect your account and prevent unauthorized access.",add_IBC_channel_title:"Add IBC Channel",add_IBC_channel_chain_label:"Destination Channel ID",add_IBC_channel_id_label:"Source Channel ID:",add_IBC_channel_error_already_exists:"Such a pair chain_id and channel_id already exists.",search_placeholder:"Search...",search_empty:"Token not found...",search_empty_validator:"Validator not found...",search_empty_chains:"Chain not found...",placeholder_address:"Enter address",placeholder_amount:"{token} Amount",placeholder_memo:"Required for sending to CEX",placeholder_memo2:"Your Custom Memo",placeholder_wallet_name:"Wallet Name",placeholder_chain_ID:"Chain ID",placeholder_source_channel_ID:"Source Channel ID",notification_copied_title:"Copied to clipboard",notification_offline_title:"You are offline",notification_wallet_added_success:"Wallet added successfully.",notification_wallet_update_success:"Wallet updated successfully.",notification_wallet_remove_success:"{name} deleted successfully.",notification_add_user_channel_success:"IBC channel saved successfully.",notification_tx_pending_title:"Transaction is pending",notification_tx_success_title:"Success",notification_tx_error_title:"Error:",notification_error_title:"Something went wrong, try again later",notification_error_invalid_paste_title:"Incorrect address in the clipboard",notification_explorer_link:"Explorer",btn_add_new_wallet:"Add New Wallet",btn_from_exist_wallet:"Create from existing wallet",btn_create_wallet:"Create new wallet",btn_import_wallet:"Import wallet",btn_show:"Ok. Show my phrases",btn_advanced:"Advanced",btn_next:"Next",btn_copy:"Copy to clipboard",btn_copy_small:"Copy",btn_join:"Join",btn_biometric:"Turn on biometric security",btn_biometric2:"Use biometric",btn_login:"Log in",btn_send:"Send",btn_receive:"Receive",btn_stake:"Earn",btn_confirm_stake:"Confirm Staking",btn_confirm_unstake:"Confirm Unstake",btn_confirm_send:"Confirm Send",btn_confirm_redelegate:"Confirm",btn_confirm:"Confirm",btn_unstake:"Unstake",btn_redelegate:"Switch validator",btn_claim:"Claim",btn_approve:"Approve",btn_reject:"Reject",btn_json:"View JSON",btn_close:"Close",btn_sign:"Sign",btn_understood:"Understood",btn_waiting_tx:"Waiting tx",btn_MAX:"MAX",btn_OK:"Ok",btn_cancel:"Cancel",btn_amount:"Amount",btn_share:"Share",btn_accept:"Accept",btn_paste:"Paste",btn_remove:"Delete",btn_add_chain:"Add Chain",btn_save:"Save",btn_try:"Try",btn_show_seed_phrase:"Show seed phrase","notification_tx_error_-32603":"tx already exists in cache",notification_tx_error_2:"tx parse error",notification_tx_error_3:"invalid sequence",notification_tx_error_4:"unauthorized",notification_tx_error_5:"insufficient funds",notification_tx_error_6:"unknown request",notification_tx_error_7:"invalid address",notification_tx_error_8:"invalid pubkey",notification_tx_error_9:"unknown address",notification_tx_error_10:"invalid coins",notification_tx_error_11:"Broadcasting transaction failed: out of gas try again and increase gas amount",notification_tx_error_12:"memo too large",notification_tx_error_13:"insufficient fee",notification_tx_error_14:"maximum number of signatures exceeded",notification_tx_error_15:"no signatures supplied",notification_tx_error_16:"failed to marshal JSON bytes",notification_tx_error_17:"failed to unmarshal JSON bytes",notification_tx_error_18:"invalid request",notification_tx_error_19:"tx already in mempool",notification_tx_error_20:"mempool is full",notification_tx_error_21:"tx too large",notification_tx_error_22:"key not found",notification_tx_error_23:"invalid account password",notification_tx_error_24:"tx intended signer does not match the given signer",notification_tx_error_25:"invalid gas adjustment",notification_tx_error_26:"invalid height",notification_tx_error_27:"invalid version",notification_tx_error_28:"invalid chain-id",notification_tx_error_29:"invalid type",notification_tx_error_30:"tx timeout height",notification_tx_error_31:"unknown extension options",notification_tx_error_32:"incorrect account sequence",notification_tx_error_33:"failed packing protobuf message to Any",notification_tx_error_34:"failed unpacking protobuf message from Any",notification_tx_error_35:"internal logic error",notification_tx_error_36:"conflict",notification_tx_error_37:"feature not supported",notification_tx_error_38:"not found",notification_tx_error_39:"Internal IO error",notification_tx_error_40:"error in app.toml",notification_tx_error_41:"invalid gas limit",notification_tx_error_rejected:"The transaction has been rejected"}}};const o=(0,n.hU)({locale:"en",fallbackLocale:"en",messages:r});var i=o},74554:function(e,t,a){"use strict";var n=a(45130),r=a(93367),o=a(56768),i=a(24232),s=a(24113),l=a(90144),c=a(20033),u=a(67278),d=a(81387),h=a(38326),_=a(43738),m=a(36571),w=a(74901);const f=s+"#ic_notification_copied",p=s+"#ic_notification_success",g=s+"#ic_notification_error",b={key:0,class:"icon"},k={key:1,class:"icon"},y={key:2,class:"icon"},v={key:3,class:"icon"},x={class:"title"},C={key:0,class:"explorer"},S=["href"];var $={__name:"App",setup(e){const t=(0,c.useGlobalStore)(),a=(0,o.WQ)("i18n"),n=(0,d.lq)(),r=(0,o.WQ)("emitter"),s=(0,o.EW)((()=>n.meta.layout||"default-layout")),$=(0,h.K7Q)(),E=(0,l.KR)(!1),A=(0,l.Kh)((0,h.AEG)()),T=(0,u.hN)(),I=(0,l.KR)(null),D={enter:{translateY:"0%"},leave:{translateY:"-100%"}};function N(e){e.data.isCollapsible&&(I.value=setTimeout((()=>{const e=document.querySelector(".notification.collapsible");e&&e.classList.add("small"),I.value=null}),t.notificationsCollapsingDelay))}function W(){I.value=null}return(0,o.KC)((async()=>{try{$.value=a.global.t("message.page_title"),await(0,_.YK)()}catch(e){console.error(`App.vue: ${e.message}`)}})),(0,o.wB)((0,o.EW)((()=>t.currentWalletID)),(async(e,a)=>{try{if(a){const e=await(0,m.$R)("global","wallets");void 0!==e&&(T.notify({group:"default",clean:!0}),await t.initApp())}}catch(n){console.error(`App.vue: ${n.message}`)}})),(0,o.wB)((0,o.EW)((()=>t.currentNetwork)),(async()=>{try{(t.isInitialized||t.forcedUnlock)&&(T.notify({group:"default",clean:!0}),await t.initApp())}catch(e){console.error(`App.vue: ${e.message}`)}})),(0,o.wB)((0,o.EW)((()=>A.isOnline)),(()=>{T.notify({group:"default",clean:!0}),A.isOnline||T.notify({group:"default",speed:200,duration:-100,title:a.global.t("message.notification_offline_title"),type:"error"})})),r.on("show_collapsible_notification",(()=>{if(!I.value){const e=document.querySelector(".notification.collapsible");e&&(e.classList.remove("small"),I.value=setTimeout((()=>{e&&e.classList.add("small"),I.value=null}),t.notificationsCollapsingDelay))}})),r.on("start_reseting",(()=>{E.value=!0,setTimeout((()=>E.value=!1),300)})),(e,t)=>{const a=(0,o.g2)("notifications");return(0,o.uX)(),(0,o.CE)(o.FK,null,[E.value||"default-layout"===s.value?((0,o.uX)(),(0,o.Wv)(w.A,{key:0,class:(0,i.C4)({no_bg:"default-layout"===s.value})},null,8,["class"])):((0,o.uX)(),(0,o.Wv)((0,o.$y)(s.value),{key:1})),(0,o.bF)(a,{position:"top left",group:"default",width:"100%","animation-type":"velocity",animation:D,onStart:t[0]||(t[0]=e=>N(e)),onDestroy:t[1]||(t[1]=e=>W())},{body:(0,o.k6)((a=>[(0,o.Lk)("div",{class:(0,i.C4)(["notification",{pending:"pending"==a.item.type,success:"success"==a.item.type,error:"error"==a.item.type,collapsible:a.item.data.isCollapsible}])},["copied"==a.item.type?((0,o.uX)(),(0,o.CE)("div",b,t[2]||(t[2]=[(0,o.Lk)("svg",null,[(0,o.Lk)("use",{"xlink:href":f})],-1)]))):(0,o.Q3)("",!0),"pending"==a.item.type?((0,o.uX)(),(0,o.CE)("div",k,t[3]||(t[3]=[(0,o.Lk)("div",{class:"loader"},null,-1)]))):(0,o.Q3)("",!0),"success"==a.item.type?((0,o.uX)(),(0,o.CE)("div",y,t[4]||(t[4]=[(0,o.Lk)("svg",null,[(0,o.Lk)("use",{"xlink:href":p})],-1)]))):(0,o.Q3)("",!0),"error"==a.item.type?((0,o.uX)(),(0,o.CE)("div",v,t[5]||(t[5]=[(0,o.Lk)("svg",null,[(0,o.Lk)("use",{"xlink:href":g})],-1)]))):(0,o.Q3)("",!0),(0,o.Lk)("div",null,[(0,o.Lk)("div",x,(0,i.v_)(a.item.title)+" "+(0,i.v_)(a.item.text),1),a.item.data.explorer_link?((0,o.uX)(),(0,o.CE)("div",C,[(0,o.Lk)("a",{href:a.item.data.explorer_link,target:"_blank",rel:"noopener nofollow"},(0,i.v_)(e.$t("message.notification_explorer_link")),9,S)])):(0,o.Q3)("",!0)])],2)])),_:1})],64)}}};const E=$;var A=E,T=(a(44114),a(60238));const I={class:"main"};var D={__name:"Default",setup(e){const t=(0,c.useGlobalStore)(),a=(0,o.WQ)("emitter"),n=(0,l.KR)(0),r=(0,l.KR)(!1),i=70;function s(e){0===window.scrollY&&(r.value=!0)}function u(e){if(!r.value)return;let o=e.touches[0].pageY,s=o-n.value;return s>0&&s>=i&&(e.preventDefault(),e.stopPropagation(),t.isAnyModalOpen)?(a.emit("close_any_modal"),void(r.value=!1)):void 0}function d(e){r.value=!1}return(0,o.sV)((()=>{window.addEventListener("touchstart",s,{passive:!1}),window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",d,{passive:!1})})),(0,o.hi)((()=>{window.removeEventListener("touchstart",s,{passive:!1}),window.removeEventListener("touchmove",u,{passive:!1}),window.removeEventListener("touchend",d,{passive:!1})})),(e,t)=>{const a=(0,o.g2)("router-view");return(0,o.uX)(),(0,o.CE)("div",I,[(0,o.bF)(a,null,{default:(0,o.k6)((({Component:e})=>[((0,o.uX)(),(0,o.Wv)((0,o.$y)(e)))])),_:1})])}}};const N=D;var W=N;const B={class:"main"};var F={__name:"Account",setup(e){const t=(0,c.useGlobalStore)(),a=(0,o.WQ)("emitter"),n=(0,l.KR)(0),r=(0,l.KR)(!1),i=70,s=(0,l.KR)(!1);function u(e){0===window.scrollY&&(n.value=e.touches[0].pageY,r.value=!0,s.value=!1)}async function d(e){if(r.value&&(t.networks[t.currentNetwork].currentTxHash||t.forcedUnlock))return void a.emit("show_collapsible_notification");if(!r.value||s.value)return;let o=e.touches[0].pageY,l=o-n.value;if(l>0&&l>=i){if(e.preventDefault(),e.stopPropagation(),t.isAnyModalOpen)return a.emit("close_any_modal"),void(r.value=!1);s.value=!0;let n=document.querySelector(".account_page");if(n){n.classList.add("updating"),setTimeout((()=>n.classList.remove("updating")),500);try{await t.updateAllBalances()}catch(c){console.error(`Layouts/Account.vue: ${c.message}`)}}}}function h(e){r.value=!1}return(0,o.sV)((()=>{window.addEventListener("touchstart",u,{passive:!1}),window.addEventListener("touchmove",d,{passive:!1}),window.addEventListener("touchend",h,{passive:!1})})),(0,o.hi)((()=>{window.removeEventListener("touchstart",u,{passive:!1}),window.removeEventListener("touchmove",d,{passive:!1}),window.removeEventListener("touchend",h,{passive:!1})})),(e,t)=>{const a=(0,o.g2)("router-view");return(0,o.uX)(),(0,o.CE)("div",B,[(0,o.bF)(a,null,{default:(0,o.k6)((({Component:e})=>[((0,o.uX)(),(0,o.Wv)((0,o.$y)(e)))])),_:1})])}}};const R=F;var L=R;const O=(0,u.hN)(),G=[{path:"/",name:"MainPage",component:()=>a.e(398).then(a.bind(a,72870)),meta:{layout:W,accessDenied:["register","locked"]}},{path:"/create_wallet",name:"CreateWallet",component:()=>a.e(183).then(a.bind(a,86183)),meta:{layout:W,accessDenied:["register","locked"]}},{path:"/confirm_wallet",name:"CreateWalletConfirm",component:()=>Promise.all([a.e(148),a.e(963)]).then(a.bind(a,78643)),meta:{layout:W,accessDenied:["register","locked"]}},{path:"/create_pin",name:"CreatePin",component:()=>a.e(595).then(a.bind(a,42595)),meta:{layout:W,accessDenied:["register","locked"]}},{path:"/wallet_created",name:"CreatedWallet",component:()=>a.e(135).then(a.bind(a,18357)),meta:{layout:W,accessDenied:["not_register","locked"]}},{path:"/import_wallet",name:"ImportWallet",component:()=>Promise.all([a.e(547),a.e(491)]).then(a.bind(a,31061)),meta:{layout:W,accessDenied:["register","locked"]}},{path:"/auth",name:"Auth",component:()=>a.e(130).then(a.bind(a,80130)),meta:{layout:W,accessDenied:["not_register","authorized","locked"]}},{path:"/lock",name:"Lock",component:()=>a.e(220).then(a.bind(a,94220)),meta:{layout:W,accessDenied:["not_register"]}},{path:"/account",name:"Account",component:()=>a.e(17).then(a.bind(a,33259)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/account/claim_confirm",name:"ClaimConfirm",component:()=>Promise.all([a.e(947),a.e(912)]).then(a.bind(a,17291)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/account/stake",name:"Stake",component:()=>Promise.all([a.e(947),a.e(517)]).then(a.bind(a,38990)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/account/unstake",name:"Unstake",component:()=>Promise.all([a.e(947),a.e(438)]).then(a.bind(a,61021)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/account/redelegate",name:"Redelegate",component:()=>Promise.all([a.e(947),a.e(437)]).then(a.bind(a,83990)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/account/receive",name:"Receive",component:()=>a.e(554).then(a.bind(a,29554)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/account/send",name:"Send",component:()=>Promise.all([a.e(947),a.e(660)]).then(a.bind(a,18991)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/add_wallet",name:"AddWallet",component:()=>a.e(449).then(a.bind(a,36870)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/add_wallet/create",name:"AddWalletCreate",component:()=>a.e(411).then(a.bind(a,36411)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/add_wallet/confirm",name:"AddWalletConfirm",component:()=>Promise.all([a.e(148),a.e(90)]).then(a.bind(a,7078)),meta:{layout:L,accessDenied:["not_authorized","locked"]}},{path:"/add_wallet/import",name:"AddWalletImport",component:()=>Promise.all([a.e(547),a.e(292)]).then(a.bind(a,40518)),meta:{layout:L,accessDenied:["not_authorized","locked"]}}],P=(0,d.aE)({history:(0,d.LA)(),routes:G});P.beforeResolve((async(e,t,a)=>{try{const n=(0,c.useGlobalStore)(),r=await(0,m.pQ)("global",["isRegister","isUserLock","userLockTimestamp","authTimestamp"]);"Auth"!==t.name&&void 0!==r.authTimestamp&&new Date-new Date(r.authTimestamp)<n.authTime&&(n.isAuthorized||await n.auth(),n.isInitialized||await n.initApp()),e.matched.some((e=>{let t=e.meta.accessDenied;if(t.length){if(t.includes("not_register")&&void 0==r.isRegister)return a({name:"MainPage"}),!1;if(t.includes("locked")&&r.isUserLock&&new Date-new Date(r.userLockTimestamp)<n.userLockTime)return a({name:"Lock"}),!1;if(t.includes("register")&&r.isRegister)return a({name:"Auth"}),!1;if(t.includes("not_authorized")&&!n.isAuthorized)return a({name:"Auth"}),!1;if(t.includes("authorized")&&n.isAuthorized)return a({name:"Account"}),!1;a()}}))}catch(n){console.error("Error in beforeResolve hook:",n.message),O.notify({group:"default",clean:!0}),O.notify({group:"default",speed:200,duration:-100,title:T.A.global.t("message.notification_error_title"),type:"error",data:{isCollapsible:!0}}),a()}})),P.afterEach((e=>{if(window._paq){window._paq.push(["setCustomUrl",window.location.href]),window._paq.push(["trackPageView"]);const e=new Event("matomo_spa_url_change");window.dispatchEvent(e)}}));var j=P,U=a(50595),K=a(14400),V=a.n(K),M=a(37359),z=a(65838),H=a(8999),Y=a.n(H);const J={mounted(e){e.focus()}},Q={mounted(e){window.addEventListener("scroll",(function(){window.scrollY<=e.offsetHeight&&(e.style.opacity=1-window.scrollY/(.6*e.offsetHeight),e.style.transform=`translateY(-${window.scrollY/e.offsetHeight*.6*100}%)`)}))}},q={mounted(e,t){if(t){let a=t.value.toFixed(10).split("");e.innerHTML=a.map((e=>`\n                <div class="digit">\n                    <span class="old">${e}</span>\n                </div>\n            `)).join("")}},updated(e,t){let a=t.value.toFixed(10).split(""),n=t.oldValue?.toFixed(10).split("")||[],r=Math.max(a.length,n.length),o="",i=null,s=0,l=1500,c=50;a=a.concat(Array(r-a.length).fill("")),n=n.concat(Array(r-n.length).fill("")),e.innerHTML=a.map(((e,t)=>{null===i&&e!==n[t]&&(i=t,s=r-t,l-=c*s);let a=0;null!==i&&(a=l/s/1e3),o+=`<div class="digit ${null!==i&&t>=i?"animate":""}">\n                        <span class="new" style="animation-duration: ${parseFloat(a.toFixed(2))}s; animation-delay: ${c*(t-i)/1e3}s;">\n                            ${e}\n                        </span>\n\n                        <span class="old" style="animation-duration: ${parseFloat(a.toFixed(2))}s; animation-delay: ${c*(t-i)/1e3}s;">\n                            ${n[t]}\n                        </span>\n                    </div>`})),e.innerHTML=o}},X=(0,U.A)(),Z=(0,n.Ef)(A),ee=(0,r.Ey)();Z.use(ee),Z.use(j),Z.use(T.A),Z.use(u.Ay,{velocity:V()}),Z.use(Y(),{host:"https://metrics.jetwallet.app/",siteId:1}),Z.provide("i18n",T.A),Z.provide("emitter",X),Z.directive("focus",J),Z.directive("parallax",Q),Z.directive("odometer",q),(0,M.kz)(),Z.component(z.A.name,z.A),Z.mount("#app")},20033:function(e,t,a){"use strict";a.d(t,{useGlobalStore:function(){return D}});a(44114),a(16573),a(78100),a(77936),a(37467),a(44732),a(79577);var n=a(93367),r=a(43738),o=a(56973),i=a(36571),s=a(67278),l=a(27148),c=a(60238);const u={name:"Cosmos Hub",lcd_api:"https://lcd.cosmoshub-4.bronbro.io",rpc_api:"https://rpc.cosmoshub-4.bronbro.io",websocket_url:"wss://rpc.cosmoshub-4.bronbro.io:443/websocket",denom:"uatom",token_name:"ATOM",chain_id:"cosmoshub-4",prefix:"cosmos",explorer_link:"https://www.mintscan.io/cosmos/tx/{tx_hash}",alias:"cosmoshub",exponent:6,gas_adjustment:1.6,address_length:20,gas_amount_send:1e5,gas_amount_claim:1e6,gas_amount_stake:5e5,gas_amount_unstake:5e5,gas_amount_redelegate:1e6,is_staking_available:!0};var d=u;const h={name:"Osmosis",lcd_api:"https://lcd.osmosis-1.bronbro.io",rpc_api:"https://rpc.osmosis-1.bronbro.io",websocket_url:"wss://rpc.osmosis-1.bronbro.io:443/websocket",denom:"uosmo",token_name:"OSMO",chain_id:"osmosis-1",prefix:"osmo",explorer_link:"https://www.mintscan.io/osmosis/tx/{tx_hash}",alias:"osmosis",exponent:6,gas_adjustment:1.3,address_length:20,gas_amount_send:1e5,gas_amount_claim:1e6,gas_amount_stake:5e5,gas_amount_unstake:5e5,gas_amount_redelegate:1e6,is_staking_available:!0};var _=h;const m={name:"Bostrom",lcd_api:"https://lcd.bostrom.bronbro.io",rpc_api:"https://rpc.bostrom.bronbro.io",websocket_url:"wss://rpc.bostrom.bronbro.io:443/websocket",denom:"boot",token_name:"BOOT",chain_id:"bostrom",prefix:"bostrom",explorer_link:"https://ping.pub/bostrom/tx/{tx_hash}",alias:"bostrom",exponent:0,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var w=m;const f={name:"Dymension Hub",lcd_api:"https://lcd.dymension.bronbro.io",rpc_api:"https://rpc.dymension.bronbro.io",websocket_url:"wss://rpc.dymension.bronbro.io:443/websocket",denom:"adym",token_name:"DYM",chain_id:"dymension_1100-1",prefix:"dym",explorer_link:"https://www.mintscan.io/dymension/tx/{tx_hash}",alias:"dymension",exponent:6,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var p=f;const g={name:"Gravity bridge",lcd_api:"https://lcd.gravity-bridge-3.bronbro.io",rpc_api:"https://rpc.gravity-bridge-3.bronbro.io",websocket_url:"wss://rpc.gravity-bridge-3.bronbro.io:443/websocket",denom:"ugraviton",token_name:"GRAV",chain_id:"gravity-bridge-3",prefix:"gravity",explorer_link:"https://www.mintscan.io/gravity-bridge/tx/{tx_hash}",alias:"gravitybridge",exponent:6,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var b=g;const k={name:"Neutron",lcd_api:"https://lcd.neutron-1.bronbro.io",rpc_api:"https://rpc.neutron-1.bronbro.io",websocket_url:"wss://rpc.neutron-1.bronbro.io:443/websocket",denom:"untrn",token_name:"NTRN",chain_id:"neutron-1",prefix:"neutron",explorer_link:"https://www.mintscan.io/neutron/tx/{tx_hash}",alias:"neutron",exponent:6,gas_adjustment:1.6,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!1};var y=k;const v={name:"OmniFlix",lcd_api:"https://lcd.omniflix.bronbro.io",rpc_api:"https://rpc.omniflix.bronbro.io",websocket_url:"wss://rpc.omniflix.bronbro.io:443/websocket",denom:"uflix",token_name:"FLIX",chain_id:"omniflixhub-1",prefix:"omniflix",explorer_link:"https://www.mintscan.io/omniflix/tx/{tx_hash}",alias:"omniflixhub",exponent:6,gas_adjustment:1.6,address_length:20,gas_amount_send:1e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var x=v;const C={name:"Pion",lcd_api:"https://lcd.pion-1.bronbro.io",rpc_api:"https://rpc.pion-1.bronbro.io",websocket_url:"wss://rpc.pion-1.bronbro.io:443/websocket",logo:"https://raw.githubusercontent.com/cosmos/chain-registry/master/neutron/images/neutron-raw.svg",denom:"untrn",token_name:"NTRN",chain_id:"pion-1",prefix:"neutron",explorer_link:"https://neutron.celat.one/pion-1/txs/{tx_hash}",alias:"pion",exponent:6,gas_adjustment:1.6,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!1};var S=C;const $={name:"Stride",lcd_api:"https://lcd.stride.bronbro.io",rpc_api:"https://rpc.stride.bronbro.io",websocket_url:"wss://rpc.stride.bronbro.io:443/websocket",denom:"ustrd",token_name:"STRD",chain_id:"stride-1",prefix:"stride",explorer_link:"https://www.mintscan.io/stride/tx/{tx_hash}",alias:"stride",exponent:6,gas_adjustment:1.3,address_length:20,gas_amount_send:3e5,gas_amount_claim:3e5,gas_amount_stake:25e4,gas_amount_unstake:25e4,gas_amount_redelegate:3e5,is_staking_available:!0};var E=$,A=a(83438)["hp"];const T={websocket:null,currentTxHash:null,unbondingTime:0,totalBondedTokens:0,totalUnstakingTokens:0,isUnstakingCancelSupport:!1},I=(0,s.hN)(),D=(0,n.nY)("global",{state:()=>({isInitializing:!1,isInitialized:!1,isBalancesGot:!1,isStakedBalancesGot:!1,isRewardsGot:!1,isUnstakingBalancesGot:!1,isAuthorized:!1,isAnyModalOpen:!1,isAgeConfirmed:!1,defaultDerivationPath:"m/44'/118'/0'/0/0",tempDerivationPath:"",forcedUnlock:!1,authErrorLimit:4,confirmSeedsErrorLimit:3,DBVersion:1,currentWalletID:null,currentWalletDerivationPath:null,currentWalletName:"",currentNetwork:"",currentAddress:"",currentCurrency:"",currentCurrencySymbol:"",IBCSendCurrentChain:null,stakeCurrentValidator:null,unstakeCurrentValidator:null,redelegateValidatorFrom:null,redelegateValidatorTo:null,wallets:[],prices:[],balances:[],stakedBalances:[],rewardsBalances:[],unstakingBalances:[],redelegations:[],defaultWalletName:"MyJetWallet",authTime:36e5,cacheTime:9e5,userLockTime:9e5,notificationsCollapsingDelay:2e3,TxFee:{balance:{},currentLevel:"average",userGasAmount:0,gasAmount:0,isRemember:!1,isGasAdjustmentAuto:!0,isEnough:!1},networks:{cosmoshub:Object.assign(d,T),osmosis:Object.assign(_,T),bostrom:Object.assign(w,T),dymension:Object.assign(p,T),gravitybridge:Object.assign(b,T),neutron:Object.assign(y,T),omniflixhub:Object.assign(x,T),pion:Object.assign(S,T),stride:Object.assign(E,T)},formatableTokens:[{token_name:"USD",format_token_name:"usdt",exponent:0},{token_name:"BTC",format_token_name:"wbtc",exponent:0},{token_name:"ETH",format_token_name:"eth",exponent:0}]}),actions:{getCurrentDBVersion(){let e=localStorage.getItem("DBVersion");e?this.DBVersion=e:localStorage.setItem("DBVersion",this.DBVersion)},setNewDBVersion(){this.DBVersion++,localStorage.setItem("DBVersion",this.DBVersion)},async getCurrentWalletID(){try{let e=await(0,i.$R)("global","currentWalletID");void 0!==e&&(this.currentWalletID=e)}catch(e){throw new Error(`getCurrentWalletID() failed: ${e.message}`)}},async setCurrentWalletID(e=null){try{this.currentWalletID!==e&&(await(0,i.IG)("global",[["currentWalletID",e]]),this.currentWalletID=e)}catch(t){throw new Error(`setCurrentWalletID() failed: ${t.message}`)}},async auth(){try{await Promise.all([this.updateUserAuthErrorLimit(this.authErrorLimit),(0,i.IG)("global",[["authTimestamp",(new Date).toISOString()]])]),this.isAuthorized=!0}catch(e){throw new Error(`auth() failed: ${e.message}`)}},async initApp(){try{this.isInitializing=!0,this.isInitialized=!1,this.forcedUnlock=!1,this.currentAddress="",await this.getCurrentWalletID();let e=await(0,i.pQ)(`wallet${this.currentWalletID}`,["derivationPath","name","currentCurrency","currentNetwork","TxFeeCurrentLevel","TxFeeIsRemember"]);this.currentWalletDerivationPath=e.derivationPath,this.currentWalletName=e.name,this.currentCurrency=e.currentCurrency,this.TxFee.currentLevel=void 0!==e.TxFeeCurrentLevel?e.TxFeeCurrentLevel:"average",this.TxFee.isRemember=void 0!==e.TxFeeIsRemember&&e.TxFeeIsRemember,this.networks[e.currentNetwork]?this.currentNetwork=e.currentNetwork:this.currentNetwork="cosmoshub";let t=await(0,i.$R)(`wallet${this.currentWalletID}`,`${this.currentNetwork}_currentAddress`);if(void 0===t){let e=await(0,r.bv)();this.currentAddress=e,await(0,i.IG)(`wallet${this.currentWalletID}`,[[`${this.currentNetwork}_currentAddress`,e]])}else this.currentAddress=t;switch(this.currentCurrency){case"BTC":this.currentCurrencySymbol="BTC";break;case"ETH":this.currentCurrencySymbol="ETH";break;default:this.currentCurrencySymbol="$";break}await Promise.all([this.getCurrenciesPrice(),this.getCurrentNetworkAPR(),this.connectWebsocket(),this.isUnstakingCancelSupport()]),this.networks[this.currentNetwork].is_staking_available?await Promise.all([this.getBalances(),this.getStakedBalances()]):await Promise.all([this.getBalances()]),this.isInitializing=!1,this.isInitialized=!0}catch(e){throw I.notify({group:"default",clean:!0}),I.notify({group:"default",speed:200,duration:-100,title:c.A.global.t("message.notification_error_title"),type:"error",data:{isCollapsible:!0}}),this.forcedUnlock=!0,new Error(`init() failed: ${e.message}`)}},async getCurrenciesPrice(){try{let e=await(0,i.$R)("global","prices");if(void 0===e||new Date-new Date(e.timestamp)>this.cacheTime){const e=await fetch("https://rpc.bronbro.io/price_feed_api/tokens/");if(!e.ok)throw new Error("Failed to fetch currencies price. Status: "+e.status);const t=await e.json();this.prices=t,await(0,i.IG)("global",[["prices",{data:t,timestamp:(new Date).toISOString()}]])}else this.prices=e.data}catch(e){throw new Error(`getCurrenciesPrice() failed: ${e.message}`)}},async getCurrentNetworkAPR(){try{let e=await(0,i.$R)(`wallet${this.currentWalletID}`,`${this.currentNetwork}_APR`);if(void 0===e||new Date-new Date(e.timestamp)>this.cacheTime){const e=await fetch("https://rpc.bronbro.io/networks/");if(!e.ok)throw new Error("Failed to fetch current network APR. Status: "+e.status);const t=await e.json(),a=t.infos.find((e=>e.denom===this.networks[this.currentNetwork].token_name.toLowerCase()));a&&(this.networks[this.currentNetwork].APR=a.apr,await(0,i.IG)(`wallet${this.currentWalletID}`,[[`${this.currentNetwork}_APR`,JSON.parse(JSON.stringify({value:a.apr,timestamp:(new Date).toISOString()}))]]))}else this.networks[this.currentNetwork].APR=e.value}catch(e){throw new Error(`getCurrentNetworkAPR() failed: ${e.message}`)}},async getBalances(e=!1){try{this.isBalancesGot=!1,this.balances=[];let t=await(0,i.$R)(`wallet${this.currentWalletID}`,`${this.currentNetwork}_balances`);if(e||void 0===t||new Date-new Date(t.timestamp)>this.cacheTime){const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/bank/v1beta1/balances/${this.currentAddress}`);if(!e.ok)throw new Error("Failed to fetch balances. Status: "+e.status);const t=await e.json();if(t.balances.length){this.balances=t.balances;for(let e of this.balances)await this.getBalanceInfo(e);this.balances=this.balances.filter((e=>e.hasOwnProperty("exponent"))),await(0,i.IG)(`wallet${this.currentWalletID}`,[[`${this.currentNetwork}_balances`,JSON.parse(JSON.stringify({value:this.balances,timestamp:(new Date).toISOString()}))]])}}else this.balances=t.value;this.isBalancesGot=!0}catch(t){throw new Error(`getBalances() failed: ${t.message}`)}},async getStakedBalances(e=!1){try{this.isStakedBalancesGot=!1,this.stakedBalances=[];let t=await(0,i.$R)(`wallet${this.currentWalletID}`,`${this.currentNetwork}_stakedBalances`);if(e||void 0===t||new Date-new Date(t.timestamp)>this.cacheTime){const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegations/${this.currentAddress}`);if(!e.ok)throw new Error("Failed to fetch staked balances. Status: "+e.status);const t=await e.json();if(t.delegation_responses){this.stakedBalances=t.delegation_responses.filter((e=>e.balance.amount>0));for(let e of this.stakedBalances)await this.getBalanceInfo(e.balance),await this.getValidatorInfo(e,e.delegation.validator_address);this.stakedBalances=this.stakedBalances.filter((e=>e.balance.hasOwnProperty("exponent"))),await(0,i.IG)(`wallet${this.currentWalletID}`,[[`${this.currentNetwork}_stakedBalances`,JSON.parse(JSON.stringify({value:this.stakedBalances,timestamp:(new Date).toISOString()}))]])}}else this.stakedBalances=t.value;this.isStakedBalancesGot=!0}catch(t){throw new Error(`getStakedBalances() failed: ${t.message}`)}},async getRewards(){try{this.isRewardsGot=!1,this.rewardsBalances=[];const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/distribution/v1beta1/delegators/${this.currentAddress}/rewards`);if(!e.ok)throw new Error("Failed to fetch rewards. Status: "+e.status);const t=await e.json();if(t.total.length){this.rewardsBalances=t.total;for(let e of this.rewardsBalances)await this.getBalanceInfo(e);this.rewardsBalances=this.rewardsBalances.filter((e=>e.hasOwnProperty("exponent"))),this.rewardsBalances=this.rewardsBalances.filter((e=>e.chain_info.chain_id==this.networks[this.currentNetwork].chain_id))}this.isRewardsGot=!0}catch(e){throw new Error(`getRewards() failed: ${e.message}`)}},async getUnstakingBalances(){try{this.isUnstakingBalancesGot=!1,this.unstakingBalances=[],this.networks[this.currentNetwork].totalUnstakingTokens=0;const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegators/${this.currentAddress}/unbonding_delegations`);if(!e.ok)throw new Error("Failed to fetch unstaking balances. Status: "+e.status);const t=await e.json();this.unstakingBalances=t.unbonding_responses;for(let a of this.unstakingBalances)a.entries.forEach((e=>this.networks[this.currentNetwork].totalUnstakingTokens+=parseInt(e.balance))),await this.getValidatorInfo(a,a.validator_address);this.isUnstakingBalancesGot=!0}catch(e){throw new Error(`getUnstakingBalances() failed: ${e.message}`)}},async getRedelegations(){try{const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegators/${this.currentAddress}/redelegations`);if(!e.ok)throw new Error("Failed to fetch redelegations. Status: "+e.status);const t=await e.json();this.redelegations=t.redelegation_responses}catch(e){throw new Error(`getRedelegations() failed: ${e.message}`)}},async getBalanceInfo(e){try{let{base_denom:a}=await(0,r.E0)(e.denom,this.currentNetwork);if(e.old_base_denom=a,"share"===a)return;for(let n of o.mY){switch(a){case"uusdc":var t=o.mY.find((e=>"noble"===e.chain_name));break;case"udatom":t=o.mY.find((e=>"cosmoshub"===e.chain_name));a="uatom";break;case"drop":t=o.mY.find((e=>"celestia"===e.chain_name));a="utia";break;case"uboom":t=o.mY.find((e=>"neutron"===e.chain_name));a="untrn";break;default:t=n;break}let r=t.assets.find((e=>e.base===a));if(r){e.token_info=r,e.chain_name=t.chain_name;break}}if(e.token_info){let t=this.formatableTokens.find((t=>t.token_name===e.token_info.base.toUpperCase()));e.exponent=t?t.exponent:e.token_info.denom_units[1]?.exponent||0,e.chain_info=o.Bt.find((t=>t.chain_name===e.chain_name)),e.price=(0,r.AN)(e.token_info.symbol)}}catch(a){throw new Error(`getBalanceInfo() failed: ${a.message}`)}},hasNativeToken(){return this.balances.some((e=>e.denom==this.networks[this.currentNetwork].denom))},async getValidatorInfo(e,t){try{const a=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/validators/${t}`);if(!a.ok)throw new Error("Failed to fetch validator info. Status: "+a.status);await a.json();e.validator_info=a.validator}catch(a){throw new Error(`getValidatorInfo() failed: ${a.message}`)}},async getSecret(e=!1){try{let t=null,a=0;e?a=this.currentWalletID:(t=await(0,i.$R)("global","wallets"),a=void 0!==t?t.length+1:1);const n=await(0,i.pQ)("secret",[`wallet${a}_aesKey`,`wallet${a}_secret`,`wallet${a}_secretIV`]),o=await(0,i.$R)(`wallet${a}`,"secret"),s=l.Ay.combine([n[`wallet${a}_secret`],o]),c=new Uint8Array(s);return await(0,r.af)(c,n[`wallet${a}_secretIV`],n[`wallet${a}_aesKey`])}catch(t){throw new Error(`getSecret() failed: ${t.message}`)}},async getPrivateKey(e=!1){try{let t=null,a=0;e?a=this.currentWalletID:(t=await(0,i.$R)("global","wallets"),a=void 0!==t?t.length+1:1);const n=await(0,i.pQ)("secret",[`wallet${a}_aesKey`,`wallet${a}_privateKey`,`wallet${a}_secretIV`]),o=await(0,i.$R)(`wallet${a}`,"privateKey"),s=l.Ay.combine([n[`wallet${a}_privateKey`],o]),c=new Uint8Array(s);return await(0,r.af)(c,n[`wallet${a}_secretIV`],n[`wallet${a}_aesKey`])}catch(t){throw new Error(`getPrivateKey() failed: ${t.message}`)}},async findMissingId(e=null){try{e||(e=await(0,i.$R)("global","wallets"));let t=1;if(void 0!==e){let a=e.map((e=>e.id));while(a.includes(t))t++}return t}catch(t){throw new Error(`findMissingId() failed: ${t.message}`)}},async findNextAvailableWalletName(e=null){try{let t=2,a=this.defaultWalletName+t;if(e||(e=await(0,i.$R)("global","wallets")),void 0!==e)while(1){if(a=this.defaultWalletName+t,!e.some((e=>e.name===a)))return a;t++}return a}catch(t){throw new Error(`findNextAvailableWalletName() failed: ${t.message}`)}},async setSecret(e){try{const t=await(0,r.cd)(),{ciphertext:a,iv:n}=await(0,r.yv)(e,t),o=l.Ay.split(A.from(a),{shares:2,threshold:2}),s=await this.findMissingId();await(0,i.IG)("secret",[[`wallet${s}_aesKey`,t],[`wallet${s}_secret`,o[0]],[`wallet${s}_secretIV`,n]]),await(0,i.Tx)(`wallet${s}`),await(0,i.IG)(`wallet${s}`,[["secret",o[1]],["createdBy","secret"]])}catch(t){throw new Error(`setSecret() failed: ${t.message}`)}},async setPrivateKey(e){try{const t=await(0,r.cd)(),{ciphertext:a,iv:n}=await(0,r.yv)(e,t),o=l.Ay.split(A.from(a),{shares:2,threshold:2}),s=await this.findMissingId();await(0,i.IG)("secret",[[`wallet${s}_aesKey`,t],[`wallet${s}_privateKey`,o[0]],[`wallet${s}_secretIV`,n]]),await(0,i.IG)(`wallet${s}`,[["privateKey",o[1]],["createdBy","privateKey"]])}catch(t){throw new Error(`setPrivateKey() failed: ${t.message}`)}},async setCurrentNetwork(e){try{this.currentNetwork=e,await(0,i.IG)(`wallet${this.currentWalletID}`,[["currentNetwork",e]])}catch(t){throw new Error(`setCurrentNetwork() failed: ${t.message}`)}},async createWallet({pinCode:e=null,walletName:t=null,isBiometricEnabled:a=null,isAdding:n=!1,relativeWallet:o=null,derivationPath:s=this.tempDerivationPath}){try{const l=await(0,i.$R)("global","wallets");void 0===l&&(l=[]);const c=await this.findMissingId(l),u=await this.findNextAvailableWalletName();if(l.push({id:c,name:t||u}),await(0,i.IG)(`wallet${c}`,[["id",c],["name",t||u],["currentNetwork","cosmoshub"],["currentCurrency","USD"],["derivationPath",s],["subWallets",JSON.parse(JSON.stringify([]))],["relativeWallet",o]]),n)await(0,i.IG)("global",[["wallets",l]]);else{const t=await(0,r.Q1)();await(0,i.IG)("global",[["isRegister",!0],["currentWalletID",c],["hmacKey",t],["pin",await(0,r.mK)(e.join(""),t)],["isBiometric",a],["authErrorLimit",this.authErrorLimit],["wallets",l]])}return this.isAuthorized=!0,c}catch(l){throw new Error(`createWallet() failed: ${l.message}`)}},async createFromExistWallet(){try{const e=await this.getSecret(!0),t=await(0,i.$R)(`wallet${this.currentWalletID}`,"subWallets");await this.setSecret(e);const a=await this.createWallet({isAdding:!0,relativeWallet:this.currentWalletID,derivationPath:this.defaultDerivationPath.replace(/\/\d+$/,`/${t.length+1}`)});t.push(a),await(0,i.IG)(`wallet${this.currentWalletID}`,[["subWallets",JSON.parse(JSON.stringify(t))]])}catch(e){throw new Error(`createFromExistWallet() failed: ${e.message}`)}},async getCurrentWalletCreatedBy(){try{return await(0,i.$R)(`wallet${this.currentWalletID}`,"createdBy")}catch(e){throw new Error(`getCurrentWalletCreatedBy() failed: ${e.message}`)}},async updateUserAuthErrorLimit(e){try{await(0,i.IG)("global",[["authErrorLimit",e]])}catch(t){throw new Error(`updateUserAuthErrorLimit() failed: ${t.message}`)}},async updateTxFeeInfo(){try{await(0,i.IG)(`wallet${this.currentWalletID}`,[["TxFeeCurrentLevel",this.TxFee.currentLevel],["TxFeeIsRemember",this.TxFee.isRemember]])}catch(e){throw new Error(`updateTxFeeInfo() failed: ${e.message}`)}},async updateCurrentCurrency(){try{switch(this.currentCurrency){case"BTC":this.currentCurrency="ETH",this.currentCurrencySymbol="ETH",(0,i.IG)(`wallet${this.currentWalletID}`,[["currentCurrency","ETH"]]);break;case"ETH":this.currentCurrency="USD",this.currentCurrencySymbol="$",(0,i.IG)(`wallet${this.currentWalletID}`,[["currentCurrency","USD"]]);break;default:this.currentCurrency="BTC",this.currentCurrencySymbol="BTC",(0,i.IG)(`wallet${this.currentWalletID}`,[["currentCurrency","BTC"]]);break}}catch(e){throw new Error(`updateCurrentCurrency() failed: ${e.message}`)}},async connectWebsocket(){try{Object.values(this.networks).forEach((e=>{e.websocket&&(e.websocket.onopen=null,e.websocket.onmessage=null,e.websocket.close())})),this.networks[this.currentNetwork].websocket=new WebSocket(this.networks[this.currentNetwork].websocket_url),this.networks[this.currentNetwork].websocket.onopen=()=>{this.networks[this.currentNetwork].websocket.send(JSON.stringify({jsonrpc:"2.0",method:"subscribe",id:"1",params:{query:`tm.event='Tx' AND transfer.recipient='${this.currentAddress}'`}}))},this.networks[this.currentNetwork].websocket.onmessage=async e=>{const t=JSON.parse(e.data);t.result&&Object.keys(t.result).length>0&&("1"==t.id&&(this.updateAllBalances(),this.resetTxFee()),"2"==t.id&&this.checkTxResult())}}catch(e){throw new Error(`connectWebsocket() failed: ${e.message}`)}},TxFeeGetCurrentBalance(e){this.TxFee.balance=this.balances.find((t=>t.denom===e))||{amount:0}},TxFeeSetGasPrices(){const e=o.Bt.find((e=>e.chain_id===this.networks[this.currentNetwork].chain_id));this.TxFee.lowPrice=e.fees.fee_tokens[0].fixed_min_gas_price?1.1*e.fees.fee_tokens[0].fixed_min_gas_price:e.fees.fee_tokens[0].low_gas_price,this.TxFee.averagePrice=1.15*this.TxFee.lowPrice,this.TxFee.highPrice=1.3*this.TxFee.lowPrice},TxFeeIsEnough(){this.isBalancesGot&&(this.TxFee.isEnough=this.TxFee.balance.amount>this.TxFee.userGasAmount*this.TxFee[`${this.TxFee.currentLevel}Price`])},setListenerCurrentTx(){try{this.networks[this.currentNetwork].websocket.send(JSON.stringify({jsonrpc:"2.0",method:"subscribe",id:"2",params:{query:`tm.event='Tx' AND tx.hash='${this.networks[this.currentNetwork].currentTxHash.toUpperCase()}'`}}))}catch(e){throw new Error(`setListenerCurrentTx() failed: ${e.message}`)}},async getTxInfo(e){try{const t=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/tx/v1beta1/txs/${e.toUpperCase()}`).then((e=>e.json()));if(!t.ok)throw new Error("Failed to fetch Tx info. Status: "+t.status);const a=await t.json();return a}catch(t){throw new Error(`getTxInfo() failed: ${t.message}`)}},async checkTxResult(){try{const e=await this.getTxInfo(this.networks[this.currentNetwork].currentTxHash);if(5!==e.code){if(I.notify({group:"default",clean:!0}),0===e.tx_response?.code)I.notify({group:"default",speed:200,duration:4e3,title:c.A.global.t("message.notification_tx_success_title"),type:"success",data:{explorer_link:(0,r.aS)(this.currentNetwork)}});else{let t="";t=e.tx_response?.code?c.A.global.t(`message.notification_tx_error_${e.tx_response?.code}`):c.A.global.t("message.notification_tx_error_rejected"),I.notify({group:"default",speed:200,duration:6e3,title:c.A.global.t("message.notification_tx_error_title"),text:t,type:"error"})}this.networks[this.currentNetwork].currentTxHash=null,this.updateAllBalances(),this.resetTxFee()}}catch(e){throw new Error(`checkTxResult() failed: ${e.message}`)}},async updateAllBalances(){try{let e=[];this.isBalancesGot&&e.push(this.getBalances(!0)),this.isStakedBalancesGot&&e.push(this.getStakedBalances(!0)),this.isRewardsGot&&e.push(this.getRewards()),this.isUnstakingBalancesGot&&e.push(this.getUnstakingBalances()),await Promise.all(e)}catch(e){throw new Error(`updateAllBalances() failed: ${e.message}`)}},async resetTxFee(){try{const e=await(0,i.pQ)(`wallet${this.currentWalletID}`,["TxFeeCurrentLevel","TxFeeIsRemember"]);this.TxFee={balance:{},currentLevel:e.TxFeeCurrentLevel||"average",userGasAmount:0,gasAmount:0,isRemember:e.TxFeeIsRemember||!1,isGasAdjustmentAuto:!0,isEnough:!1}}catch(e){throw new Error(`resetTxFee() failed: ${e.message}`)}},async getNetworkUnbondingTime(){try{const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/params`);if(!e.ok)throw new Error("Failed to fetch network unbonding time. Status: "+e.status);const t=await e.json();this.networks[this.currentNetwork].unbondingTime=parseInt(t.params.unbonding_time)/86400}catch(e){throw new Error(`getNetworkUnbondingTime() failed: ${e.message}`)}},async getAllValidators(){try{const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/validators?status=BOND_STATUS_BONDED&pagination.limit=200`);if(!e.ok)throw new Error("Failed to fetch all validatots. Status: "+e.status);const t=await e.json();return t.validators}catch(e){throw new Error(`getAllValidators() failed: ${e.message}`)}},async getUserValidators(){try{const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/delegators/${this.currentAddress}/validators?status=BOND_STATUS_BONDED&pagination.limit=200`);if(!e.ok)throw new Error("Failed to fetch user validatots. Status: "+e.status);const t=await e.json();return t.validators}catch(e){throw new Error(`getUserValidators() failed: ${e.message}`)}},async getTotalBondedTokens(){try{const e=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/staking/v1beta1/pool`);if(!e.ok)throw new Error("Failed to fetch user validatots. Status: "+e.status);const t=await e.json();this.networks[this.currentNetwork].totalBondedTokens=parseInt(t.pool.bonded_tokens)}catch(e){throw new Error(`getUserValidators() failed: ${e.message}`)}},async isUnstakingCancelSupport(){try{let e=!1,t=await(0,i.$R)(`wallet${this.currentWalletID}`,`${this.currentNetwork}_isUnstakingCancelSupport`);if(void 0===t||new Date-new Date(t.timestamp)>this.cacheTime){const t=await fetch(`${this.networks[this.currentNetwork].lcd_api}/cosmos/base/tendermint/v1beta1/node_info`);if(!t.ok)throw new Error("Failed to fetch is unstaking cancel support. Status: "+t.status);const a=await t.json(),n=a.application_version.cosmos_sdk_version,r="v0.46",o=n.replace("v","").split("-")[0].split(".").map(Number),s=r.replace("v","").split("-")[0].split(".").map(Number);while(o.length<3)o.push(0);while(s.length<3)s.push(0);for(let i=0;i<3;i++)o[i]>s[i]&&(e=!0),o[i]<s[i]&&(e=!1);await(0,i.IG)(`wallet${this.currentWalletID}`,[[this.currentNetwork+"_isUnstakingCancelSupport",JSON.parse(JSON.stringify({value:e,timestamp:(new Date).toISOString()}))]]),this.networks[this.currentNetwork].isUnstakingCancelSupport=e}else this.networks[this.currentNetwork].isUnstakingCancelSupport=t.value}catch(e){throw new Error(`isUnstakingCancelSupport() failed: ${e.message}`)}},async getWallets(){try{this.wallets=await(0,i.$R)("global","wallets")}catch(e){throw new Error(`getWallets() failed: ${e.message}`)}},async updateWallet({wallet:e,new_name:t}){try{let a=this.wallets.find((t=>t.id===e.id));a&&(a.name=t,await(0,i.IG)("global",[["wallets",JSON.parse(JSON.stringify(this.wallets))]]),await(0,i.IG)(`wallet${this.currentWalletID}`,[["name",a.name]]),this.currentWalletID===e.id&&(this.currentWalletName=a.name),await this.getWallets())}catch(a){throw new Error(`updateWallet() failed: ${a.message}`)}},async removeWallet(e){try{this.wallets=this.wallets.filter((t=>t.id!==e.id)),e.id===this.currentWalletID&&await this.setCurrentWalletID(this.wallets[0].id),await(0,i.hO)(`wallet${e.id}`),await(0,i.o3)("secret",[`wallet${e.id}_aesKey`,`wallet${e.id}_privateKey`,`wallet${e.id}_secret`,`wallet${e.id}_secretIV`]),await(0,i.IG)("global",[["wallets",JSON.parse(JSON.stringify(this.wallets))]])}catch(t){throw new Error(`removeWallet() failed: ${t.message}`)}},async setAgeConfirmed(){try{await(0,i.IG)("global",[["ageConfirmed",!0]])}catch(e){throw new Error(`setAgeConfirmed() failed: ${e.message}`)}},async getAgeConfirmed(){try{const e=await(0,i.$R)("global","ageConfirmed");void 0!==e&&(this.isAgeConfirmed=e)}catch(e){throw new Error(`getAgeConfirmed() failed: ${e.message}`)}},async setUserLock(){try{await(0,i.IG)("global",[["isUserLock",!0],["userLockTimestamp",(new Date).toISOString()]])}catch(e){throw new Error(`setUserLock() failed: ${e.message}`)}},async setUserUnlock(){try{await(0,i.IG)("global",[["isUserLock",!1],["userLockTimestamp",""]]),await this.updateUserAuthErrorLimit(this.authErrorLimit)}catch(e){throw new Error(`setUserLock() failed: ${e.message}`)}},async setUserChannel(e){try{const t=await(0,i.$R)("global","userChannels")||[];t.push(e),await(0,i.IG)("global",[["userChannels",JSON.parse(JSON.stringify(t))]])}catch(t){throw new Error(`setUserChannel() failed: ${t.message}`)}},async updateUserChannel(e){try{const t=await(0,i.$R)("global","userChannels")||[],a=t.find((t=>t.info.pretty_name===e.old.info.pretty_name));a.info=e.info,a.channel_id=e.channel_id,await(0,i.IG)("global",[["userChannels",JSON.parse(JSON.stringify(t))]])}catch(t){throw new Error(`updateUserChannel() failed: ${t.message}`)}},async getAllUserChannels(){try{return await(0,i.$R)("global","userChannels")}catch(e){throw new Error(`getAllUserChannels() failed: ${e.message}`)}},async deleteUserChannel(e){try{const t=await(0,i.$R)("global","userChannels");t=t.filter((t=>t.info.pretty_name!==e)),await(0,i.IG)("global",[["userChannels",t]])}catch(t){throw new Error(`deleteUserChannel() failed: ${t.message}`)}},async clearAllData(){try{await(0,i.xz)(),this.$reset()}catch(e){throw new Error(`clearAllData() failed: ${e.message}`)}}}})},36571:function(e,t,a){"use strict";a.d(t,{$R:function(){return l},IG:function(){return u},Tx:function(){return s},hO:function(){return h},o3:function(){return d},pQ:function(){return c},xz:function(){return _}});var n=a(54837),r=null;async function o(){const{useGlobalStore:e}=await Promise.resolve().then(a.bind(a,20033));return e()}const i=(async()=>{try{let e=await o(),t=null===localStorage.getItem("firstRun");return(0,n.MR)("bro_db"),t&&((0,n.MR)("jetWallet"),localStorage.setItem("firstRun","false")),e.getCurrentDBVersion(),(0,n.P2)("jetWallet",e.DBVersion,{upgrade(e){e.objectStoreNames.contains("global")||e.createObjectStore("global"),e.objectStoreNames.contains("secret")||e.createObjectStore("secret"),e.objectStoreNames.contains("wallet1")||e.createObjectStore("wallet1")}})}catch(e){throw new Error(`Error initializing IndexedDB: ${e.message}`)}})();async function s(e){let t=await o();try{r||(r=await i),r.objectStoreNames.contains(e)||(t.setNewDBVersion(),r.close(),r=await(0,n.P2)("jetWallet",t.DBVersion,{upgrade(t){t.objectStoreNames.contains(e)||t.createObjectStore(e)}}))}catch(a){throw new Error(`Error checking store name in indexedDB: ${a.message}`)}}async function l(e,t){try{return r||(r=await i),r.get(e,t)}catch(a){throw new Error(`Error getting data from indexedDB: ${a.message}`)}}async function c(e,t){try{r||(r=await i);let a=await Promise.all(t.map((t=>r.get(e,t)))),n={};return t.forEach(((e,t)=>n[e]=a[t])),n}catch(a){throw new Error(`Error getting multiple data from indexedDB: ${a.message}`)}}async function u(e,t){try{r||(r=await i);let a=r.transaction(e,"readwrite"),n=a.objectStore(e);for(let[e,r]of t)await n.put(r,e);await a.done}catch(a){throw new Error(`Error adding data to indexedDB: ${a.message}`)}}async function d(e,t){try{r||(r=await i);let a=r.transaction(e,"readwrite"),n=a.objectStore(e);return await Promise.all(t.map((e=>n.delete(e)))),a.done}catch(a){throw new Error(`Error deleting data from indexedDB: ${a.message}`)}}async function h(e){try{r||(r=await i);let t=r.transaction(e,"readwrite"),a=t.objectStore(e);await a.clear(),await t.done}catch(t){throw new Error(`Error clearing store in indexedDB: ${t.message}`)}}async function _(){try{r||(r=await i);for(let e of r.objectStoreNames){let t=r.transaction(e,"readwrite"),a=t.objectStore(e);await a.clear(),await t.done}}catch(e){throw new Error(`Error clearing all data in indexedDB: ${e.message}`)}}},43738:function(e,t,a){"use strict";a.d(t,{nY:function(){return J},s3:function(){return K},Ko:function(){return H},cc:function(){return q},eZ:function(){return M},Y$:function(){return j},oL:function(){return Z},EF:function(){return ke},Yq:function(){return G},_Q:function(){return ge},af:function(){return v},E0:function(){return I},yv:function(){return k},NJ:function(){return N},ST:function(){return B},cd:function(){return f},Q1:function(){return g},NN:function(){return o},bv:function(){return S},aS:function(){return he},oB:function(){return ae},AN:function(){return L},mK:function(){return m},on:function(){return me},p4:function(){return fe},fp:function(){return c},r6:function(){return h},nw:function(){return ue},qS:function(){return le},jC:function(){return re},YK:function(){return Se}});var n=a(73423);const r=async e=>{try{return await n.DirectSecp256k1HdWallet.generate(e)}catch(t){throw new Error(`generateWallet() failed: ${t.message}`)}};var o=r,i=a(54),s=a(20033);const l=async(e,t=null,a=null)=>{const r=(0,s.useGlobalStore)(),o=a||r.currentWalletDerivationPath;try{return await n.DirectSecp256k1HdWallet.fromMnemonic(e,{hdPaths:[(0,i.stringToPath)(o)],prefix:t})}catch(l){throw new Error(`importWalletFromMnemonic() failed: ${l.message}`)}};var c=l,u=a(89354);const d=async(e,t=null)=>{try{return await n.DirectSecp256k1Wallet.fromKey((0,u.fromHex)(e),t)}catch(a){throw new Error(`importWalletFromPrivateKey() failed: ${a.message}`)}};var h=d;a(16573),a(78100),a(77936),a(37467),a(44732),a(79577);const _=async(e,t)=>{const a=new TextEncoder,n=a.encode(e);try{const e=await crypto.subtle.importKey("jwk",t,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),a=await crypto.subtle.sign("HMAC",e,n),r=Array.from(new Uint8Array(a)),o=r.map((e=>("00"+e.toString(16)).slice(-2))).join("");return o}catch(r){throw new Error(`hashDataWithKey() failed: ${r.message}`)}};var m=_;const w=async()=>{try{const e=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]);return e}catch(e){throw new Error(`generateAESKey() failed: ${e.message}`)}};var f=w;const p=async()=>{try{const e=await crypto.subtle.generateKey({name:"HMAC",hash:{name:"SHA-256"},length:256},!0,["sign"]),t=await crypto.subtle.exportKey("jwk",e);return t}catch(e){throw new Error(`generateHMACKey() failed: ${e.message}`)}};var g=p;const b=async(e,t)=>{const a=crypto.getRandomValues(new Uint8Array(12)),n=new TextEncoder,r=n.encode(e);try{const e=await crypto.subtle.encrypt({name:"AES-GCM",iv:a},t,r);return{ciphertext:new Uint8Array(e),iv:a}}catch(o){throw new Error(`encryptData() failed: ${o.message}`)}};var k=b;const y=async(e,t,a)=>{try{const n=await crypto.subtle.decrypt({name:"AES-GCM",iv:t},a,e),r=new TextDecoder;return r.decode(n)}catch(n){throw new Error(`decryptData() failed: ${n.message}`)}};var v=y,x=a(36571);const C=async()=>{let e=(0,s.useGlobalStore)(),t=null;try{let a=await(0,x.pQ)("secret",[`wallet${e.currentWalletID}_secret`,`wallet${e.currentWalletID}_privateKey`]);if(a[`wallet${e.currentWalletID}_secret`]){const a=await e.getSecret(!0);t=await l(a,e.networks[e.currentNetwork].prefix)}if(a[`wallet${e.currentWalletID}_privateKey`]){const a=await e.getPrivateKey(!0);t=await d(a,e.networks[e.currentNetwork].prefix)}const n=(await t.getAccounts())[0].address;return n}catch(a){throw new Error(`getAddress() failed: ${a.message}`)}};var S=C,$=a(96129),E=a(26776);const A=async()=>{let e=(0,s.useGlobalStore)(),t=null;try{let a=await(0,x.pQ)("secret",[`wallet${e.currentWalletID}_secret`,`wallet${e.currentWalletID}_privateKey`]);if(a[`wallet${e.currentWalletID}_secret`]){let a=await e.getSecret(!0);t=await l(a,e.networks[e.currentNetwork].prefix)}if(a[`wallet${e.currentWalletID}_privateKey`]){let a=await e.getPrivateKey(!0);t=await d(a,e.networks[e.currentNetwork].prefix)}let n=await E.SigningStargateClient.connectWithSigner(e.networks[e.currentNetwork].rpc_api,t),r=await $.Jw.connectWithSigner(e.networks[e.currentNetwork].rpc_api,t);return{signingClient:n,signingCosmWasmClient:r}}catch(a){throw a.message=`createSinger.js failed: ${a.message}`,a}};const T=async e=>{let t=(0,s.useGlobalStore)(),a={path:null,base_denom:e},n=e.split("/");if("ibc"==n[0])try{await fetch(`${t.networks[t.currentNetwork].lcd_api}/ibc/apps/transfer/v1/denom_traces/${n[1]}`).then((e=>e.json())).then((e=>a=e.denom_trace))}catch(r){throw new Error(`denomTraces() failed: ${r.message}`)}else"factory"==n[0]&&(a.ingnoreTraces=!0,a.base_denom=n[n.length-1]);return a};var I=T;const D=(e,t)=>e/Math.pow(10,t);var N=D;const W=(e,t=null)=>{let a=(0,s.useGlobalStore)(),n=t||a.currentCurrency;switch(n){case"BTC":return e>1e-10||0==e?e.toLocaleString("ru-RU",{maximumFractionDigits:10,minimumFractionDigits:2}).replace(",","."):"<0.0000000001";case"ETH":return e>1e-7||0==e?e.toLocaleString("ru-RU",{maximumFractionDigits:7,minimumFractionDigits:2}).replace(",","."):"<0.0000001";default:return e>.01||0==e?e.toLocaleString("ru-RU",{maximumFractionDigits:2,minimumFractionDigits:2}).replace(",","."):"<0.01"}};var B=W;const F=e=>{let t=(0,s.useGlobalStore)(),a=t.formatableTokens.find((t=>t.token_name===e)),n=a?a.format_token_name:e;return n};const R=e=>{const t=(0,s.useGlobalStore)(),a=t.prices.find((t=>t.symbol.toLowerCase()===e.toLowerCase()))?.price||0,n=t.formatableTokens.find((t=>t.token_name==e)),r=n?a*Math.pow(10,n.exponent):a;return r};var L=R;const O=(e,t,a)=>{let n=(0,s.useGlobalStore)(),r=1;return r=a?n.prices.find((e=>e.symbol.toLowerCase()===F(a).toLowerCase())).price:n.prices.find((e=>e.symbol.toLowerCase()===F(n.currentCurrency).toLowerCase())).price,e*(R(t)/r)};var G=O;const P=(e,t,a,n=null)=>{let r=D(t,a);return O(r,e,n)};var j=P;const U=(e=null)=>{let t=(0,s.useGlobalStore)(),a=0;return t.balances.length&&t.balances.forEach((t=>a+=P(t.token_info.symbol,t.amount,t.exponent,e))),parseFloat(a)};var K=U;const V=(e=null)=>{let t=(0,s.useGlobalStore)(),a=0;return t.stakedBalances.length&&t.stakedBalances.forEach((t=>a+=P(t.balance.token_info.symbol,t.balance.amount,t.balance.exponent,e))),parseFloat(a)};var M=V;const z=(e=null)=>{let t=(0,s.useGlobalStore)(),a=0;return t.rewardsBalances.length&&t.rewardsBalances.forEach((t=>a+=P(t.token_info.symbol,t.amount,t.exponent,e))),parseFloat(a)};var H=z;const Y=()=>{let e=(0,s.useGlobalStore)(),t=e.balances.find((t=>t.denom===e.networks[e.currentNetwork].denom));return t?parseFloat(t.amount):0};var J=Y;const Q=()=>{let e=(0,s.useGlobalStore)(),t=0;return e.stakedBalances.length&&e.stakedBalances.forEach((e=>t+=parseFloat(e.balance.amount))),t};var q=Q;const X=()=>{let e=(0,s.useGlobalStore)(),t=0;return e.unstakingBalances.length&&e.unstakingBalances.forEach((e=>{e.entries.forEach((e=>t+=parseFloat(e.balance)))})),t};var Z=X,ee=a(56973);const te=e=>{let t=(0,s.useGlobalStore)(),a="";if(e){let n=Object.values(t.networks).find((t=>t.chain_id===e));void 0!==n&&n.logo?a=n.logo:(n=ee.Bt.find((t=>t.chain_id===e)),n&&(n.logo_URIs?a=n.logo_URIs.svg||n.logo_URIs.png:n.images&&(a=n.images[n.images.length-1].svg||n.images[n.images.length-1].png)))}return a};var ae=te;const ne=async(e,t="")=>{try{const a=(0,s.useGlobalStore)(),{signingCosmWasmClient:n}=await A(),r=await n.simulate(a.currentAddress,e,t);a.TxFee.gasAmount=parseInt(r*a.networks[a.currentNetwork].gas_adjustment),a.TxFee.userGasAmount=a.TxFee.gasAmount}catch(a){throw new Error(`simulateTx() failed: ${a.message}`)}};var re=ne,oe=a(26270),ie=a(83438)["hp"];const se=async(e,t)=>{try{const a=(0,s.useGlobalStore)(),{signingCosmWasmClient:n}=await A(),r={amount:[{denom:a.networks[a.currentNetwork].denom,amount:parseInt(a.TxFee.userGasAmount*a.TxFee[`${a.TxFee.currentLevel}Price`]).toString()}],gas:a.TxFee.userGasAmount.toString()},o=await n.sign(a.currentAddress,e,r,t),l=oe.TxRaw.encode(o).finish(),c=(0,i.sha256)(l);return a.networks[a.currentNetwork].currentTxHash=ie.from(c).toString("hex"),l}catch(a){throw new Error(`signTx() failed: ${a.message}`)}};var le=se;const ce=async e=>{let{signingCosmWasmClient:t}=await A();try{await t.broadcastTx(e,t.broadcastTimeoutMs,t.broadcastPollIntervalMs)}catch(a){throw new Error(`sendTx() failed: ${a.message}`)}};var ue=ce;const de=e=>{const t=(0,s.useGlobalStore)();return t.networks[e].explorer_link.replace("{tx_hash}",t.networks[e].currentTxHash)};var he=de;const _e=e=>e.target.classList.add("hide");var me=_e;const we=e=>e.target.classList.remove("hide");var fe=we;const pe=e=>{let t=new Date(e),a=(new Date).getTimezoneOffset()/60*-1;return new Date(t.setHours(t.getHours()+a))};var ge=pe;const be=(e,t)=>{const{data:a}=(0,u.fromBech32)(e);return(0,u.toBech32)(t,a)};var ke=be,ye=(a(44114),a(56768)),ve=a(81387);async function xe(e){try{const t=(0,s.useGlobalStore)(),a=(0,ve.rd)();if(t.currentNetwork!==e[1]){a.push({path:"/account"}),await t.setCurrentNetwork(e[1]);const n=(0,ye.wB)((0,ye.EW)((()=>t.isInitialized)),(()=>{t.isInitialized&&"send"===e[0]&&(n(),a.push({path:"/account/send",query:{denom:t.networks[t.currentNetwork].denom,address:e[2],amount:e[3]}}))}))}else"send"===e[0]&&a.push({path:"/account/send",query:{denom:t.networks[t.currentNetwork].denom,address:e[2],amount:e[3]}})}catch(t){throw new Error(`Error redirecting to sending page: ${t.message}`)}}const Ce=async()=>{try{const e=(0,s.useGlobalStore)(),t=(0,ye.WQ)("i18n");window.Telegram&&window.Telegram.WebApp&&(await Telegram.WebApp.ready(),Telegram.WebApp.expand(),Telegram.WebApp.setHeaderColor("#5b3895"),Telegram.WebApp.MainButton.showProgress(!0),Telegram.WebApp.disableVerticalSwipes(),Telegram.WebApp.BiometricManager.init(),await e.getAgeConfirmed(),e.isAgeConfirmed||Telegram.WebApp.showConfirm(t.global.t("message.age_modal_text"),(async t=>{t?await e.setAgeConfirmed():Telegram.WebApp.close()})),Telegram.WebApp.onEvent("qrTextReceived",(async e=>{Telegram.WebApp.closeScanQrPopup();const t=e.data.split("|");await xe(t)})))}catch(e){throw new Error(`Error TG initializating: ${e.message}`)}};var Se=Ce},74901:function(e,t,a){"use strict";a.d(t,{A:function(){return c}});var n=a(56768);const r={class:"loader_wrap"};function o(e,t){return(0,n.uX)(),(0,n.CE)("div",r,t[0]||(t[0]=[(0,n.Lk)("div",{class:"loader"},[(0,n.Lk)("span")],-1)]))}var i=a(71241);const s={},l=(0,i.A)(s,[["render",o]]);var c=l},24113:function(e,t,a){"use strict";e.exports=a.p+"img/sprite.e0e4d64c.svg"},78982:function(){},47790:function(){},73776:function(){},21638:function(){},92668:function(){},77965:function(){},66089:function(){},79368:function(){},77667:function(){},76447:function(){},64688:function(){},51069:function(){},15340:function(){},79838:function(){}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var o=t[n]={id:n,loaded:!1,exports:{}};return e[n].call(o.exports,o,o.exports,a),o.loaded=!0,o.exports}a.m=e,function(){a.amdO={}}(),function(){var e=[];a.O=function(t,n,r,o){if(!n){var i=1/0;for(u=0;u<e.length;u++){n=e[u][0],r=e[u][1],o=e[u][2];for(var s=!0,l=0;l<n.length;l++)(!1&o||i>=o)&&Object.keys(a.O).every((function(e){return a.O[e](n[l])}))?n.splice(l--,1):(s=!1,o<i&&(i=o));if(s){e.splice(u--,1);var c=r();void 0!==c&&(t=c)}}return t}o=o||0;for(var u=e.length;u>0&&e[u-1][2]>o;u--)e[u]=e[u-1];e[u]=[n,r,o]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}}(),function(){a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,n){return a.f[n](e,t),t}),[]))}}(),function(){a.u=function(e){return"js/"+e+"."+{17:"3e737b7e",90:"f9dd5b35",130:"f5d832d2",135:"e172a50f",148:"0448ec94",183:"955d644a",220:"a3279f6e",292:"aa980f9e",398:"fd2f67ba",411:"a4f875e7",437:"5b00e003",438:"2cbdb74f",449:"5468faae",491:"5dffb90a",517:"08fdc509",547:"671b67f3",554:"ae9cddb9",595:"8b7b8f8b",660:"655fae43",912:"1e63ebc6",947:"2cada149",963:"f6d29b52"}[e]+".js"}}(),function(){a.miniCssF=function(e){return"css/"+e+"."+{17:"ec4572a2",90:"f25427e5",130:"cd600836",135:"b62c6c90",183:"e48d7ed6",220:"05b2b883",292:"47217a46",398:"33291bab",411:"e48d7ed6",437:"39628ca6",438:"96dd1d4d",449:"da5bad8f",491:"47217a46",517:"2e03157b",554:"1a96517f",595:"18aa5b49",660:"7a1bd2c2",912:"8c0cbd87",963:"f25427e5"}[e]+".css"}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){var e={},t="cosmos-telegram-signer:";a.l=function(n,r,o,i){if(e[n])e[n].push(r);else{var s,l;if(void 0!==o)for(var c=document.getElementsByTagName("script"),u=0;u<c.length;u++){var d=c[u];if(d.getAttribute("src")==n||d.getAttribute("data-webpack")==t+o){s=d;break}}s||(l=!0,s=document.createElement("script"),s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.setAttribute("data-webpack",t+o),s.src=n),e[n]=[r];var h=function(t,a){s.onerror=s.onload=null,clearTimeout(_);var r=e[n];if(delete e[n],s.parentNode&&s.parentNode.removeChild(s),r&&r.forEach((function(e){return e(a)})),t)return t(a)},_=setTimeout(h.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=h.bind(null,s.onerror),s.onload=h.bind(null,s.onload),l&&document.head.appendChild(s)}}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){a.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e}}(),function(){a.p="/"}(),function(){if("undefined"!==typeof document){var e=function(e,t,n,r,o){var i=document.createElement("link");i.rel="stylesheet",i.type="text/css",a.nc&&(i.nonce=a.nc);var s=function(a){if(i.onerror=i.onload=null,"load"===a.type)r();else{var n=a&&a.type,s=a&&a.target&&a.target.href||t,l=new Error("Loading CSS chunk "+e+" failed.\n("+n+": "+s+")");l.name="ChunkLoadError",l.code="CSS_CHUNK_LOAD_FAILED",l.type=n,l.request=s,i.parentNode&&i.parentNode.removeChild(i),o(l)}};return i.onerror=i.onload=s,i.href=t,n?n.parentNode.insertBefore(i,n.nextSibling):document.head.appendChild(i),i},t=function(e,t){for(var a=document.getElementsByTagName("link"),n=0;n<a.length;n++){var r=a[n],o=r.getAttribute("data-href")||r.getAttribute("href");if("stylesheet"===r.rel&&(o===e||o===t))return r}var i=document.getElementsByTagName("style");for(n=0;n<i.length;n++){r=i[n],o=r.getAttribute("data-href");if(o===e||o===t)return r}},n=function(n){return new Promise((function(r,o){var i=a.miniCssF(n),s=a.p+i;if(t(i,s))return r();e(n,s,null,r,o)}))},r={524:0};a.f.miniCss=function(e,t){var a={17:1,90:1,130:1,135:1,183:1,220:1,292:1,398:1,411:1,437:1,438:1,449:1,491:1,517:1,554:1,595:1,660:1,912:1,963:1};r[e]?t.push(r[e]):0!==r[e]&&a[e]&&t.push(r[e]=n(e).then((function(){r[e]=0}),(function(t){throw delete r[e],t})))}}}(),function(){var e={524:0};a.f.j=function(t,n){var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var o=new Promise((function(a,n){r=e[t]=[a,n]}));n.push(r[2]=o);var i=a.p+a.u(t),s=new Error,l=function(n){if(a.o(e,t)&&(r=e[t],0!==r&&(e[t]=void 0),r)){var o=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+i+")",s.name="ChunkLoadError",s.type=o,s.request=i,r[1](s)}};a.l(i,l,"chunk-"+t,t)}},a.O.j=function(t){return 0===e[t]};var t=function(t,n){var r,o,i=n[0],s=n[1],l=n[2],c=0;if(i.some((function(t){return 0!==e[t]}))){for(r in s)a.o(s,r)&&(a.m[r]=s[r]);if(l)var u=l(a)}for(t&&t(n);c<i.length;c++)o=i[c],a.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return a.O(u)},n=self["webpackChunkcosmos_telegram_signer"]=self["webpackChunkcosmos_telegram_signer"]||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var n=a.O(void 0,[504],(function(){return a(74554)}));n=a.O(n)})();
//# sourceMappingURL=app.67d12ff3.js.map