{"version":3,"file":"js/139.e4dcb495.js","mappings":"koCAuLI,MAAMA,GAAQC,EAAAA,EAAAA,kBACVC,GAASC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,IAAaD,EAAAA,EAAAA,IAAI,IACjBE,IAAoBF,EAAAA,EAAAA,KAAI,GACxBG,IAAsBH,EAAAA,EAAAA,KAAI,GAC1BI,IAAUJ,EAAAA,EAAAA,IAAI,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACnCK,IAAiBL,EAAAA,EAAAA,IAAI,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KAC1CM,IAAqBN,EAAAA,EAAAA,KAAI,GACzBO,IAAuBP,EAAAA,EAAAA,KAAI,GAC3BQ,IAAgBR,EAAAA,EAAAA,IAAI,UAkBxB,SAASS,KAELR,GAAWS,MAAMC,OAAOC,OAClBV,GAAkBQ,OAAQ,EAC1BR,GAAkBQ,OAAQ,EAGhCP,GAAoBO,OAAQ,CAChC,CAIA,SAASG,GAAUC,EAAOC,GAClBD,EAAME,OAAON,MAAME,QAAU,GAAKG,EAAY,GAC9CD,EAAME,OAAOC,QAAQ,QAAQC,cAAc,oBAAoBH,EAAY,YAAYI,OAE/F,CAIA,SAASC,GAASN,EAAOO,GACrBC,YAAW,KAC2B,IAA9BR,EAAME,OAAON,MAAME,QAAgBS,EAAe,GAClDP,EAAME,OAAOC,QAAQ,QAAQC,cAAc,oBAAoBG,YAAuBE,QAC1F,GAER,EAzCAC,EAAAA,EAAAA,KAAc,KAEVjB,GAAqBG,MAAQe,SAASC,OAAOC,iBAAiBpB,qBAGR,WAAlDkB,SAASC,OAAOC,iBAAiBC,gBACjCpB,GAAcE,MAAQe,SAASC,OAAOC,iBAAiBC,eAI3D7B,EAAQW,OAAQ,CAAI,IAmCxB,MAAMmB,IAAgBC,EAAAA,EAAAA,KAAS,IACpB1B,GAAQM,MAAMqB,KAAK,MAAQ1B,GAAeK,MAAMqB,KAAK,MAK1DC,IAAcF,EAAAA,EAAAA,KAAS,IACgB,IAAlCzB,GAAeK,MAAM,GAAGE,QAAgBiB,GAAcnB,OAASR,GAAkBQ,QAK5F,SAASuB,KACJ3B,GAAmBI,MAEdJ,GAAmBI,OAAQ,EAD3BwB,IAEV,CAIA,SAASA,KACJT,SAASC,OAAOS,gBAEXC,KADAX,SAASC,OAAOC,iBAAiBU,cAAc,CAAEC,OAAQ,KAAM,IAAMF,MAE/E,CAIA,SAASA,KACLX,SAASC,OAAOC,iBAAiBY,aAAa,CAAED,OAAQ,KAAME,UACtDC,IAEAnC,GAAmBI,OAAQ,EAC/B,GAER,CAIA8B,eAAeE,KAEX3C,EAAQW,OAAQ,QAGVf,EAAMgD,aAAa,CACrBvC,QAASA,GAAQM,MACjBT,WAAYA,GAAWS,MACvBJ,mBAAoBA,GAAmBI,QAI3Cb,EAAO+C,KAAK,kBAChB,C,ilLC/RJ,MAAMC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,U,uECLA,MAAM,GAAc,GAEpB,S","sources":["webpack://cosmos-telegram-signer/./src/components/createWallet/PinPage.vue","webpack://cosmos-telegram-signer/./src/components/createWallet/PinPage.vue?c2ee","webpack://cosmos-telegram-signer/./src/views/CreateWallet/PinPage.vue"],"sourcesContent":["<template>\n    <!-- Create pin page -->\n    <section class=\"page_container careate_pin_page\">\n        <div class=\"cont\">\n            <!-- Create pin page title -->\n            <div class=\"page_title\">\n                {{ $t('message.create_pin_title') }}\n            </div>\n\n            <!-- Create pin page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- Loader -->\n                    <Loader v-if=\"loading\" />\n\n                    <!-- Wallet name -->\n                    <div class=\"wallet_name\">\n                        <!-- Wallet name label -->\n                        <div class=\"field_label\">\n                            {{ $t('message.create_pin_wallet_name_label') }}\n                        </div>\n\n                        <!-- Wallet name field -->\n                        <div class=\"field\">\n                            <input type=\"text\" class=\"input big\" v-model=\"walletName\"\n                                :placeholder=\"$t('message.create_pin_wallet_name_placeholder')\"\n                                :class=\"{ error: !idValidWalletName && isTouchedWalletName, success: idValidWalletName && isTouchedWalletName }\"\n                                @input=\"validateWalletName()\">\n                        </div>\n                    </div>\n\n                    <!-- Pin code -->\n                    <div class=\"pin\">\n                        <!-- Pin code label -->\n                        <div class=\"field_label\">\n                            {{ $t('message.create_pin_create_pin_label') }}\n                        </div>\n\n                        <div class=\"row\">\n                            <!-- Pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"pinCode[0]\" maxlength=\"1\" inputmode=\"numeric\"\n                                    @input=\"moveFocus($event, 1)\"\n                                    @keydown.backspace=\"moveBack($event, 0)\">\n                            </div>\n\n                            <!-- Pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"pinCode[1]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[0].length\"\n                                    @input=\"moveFocus($event, 2)\"\n                                    @keydown.backspace=\"moveBack($event, 1)\">\n                            </div>\n\n                            <!-- Pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"pinCode[2]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[1].length\"\n                                    @input=\"moveFocus($event, 3)\"\n                                    @keydown.backspace=\"moveBack($event, 2)\">\n                            </div>\n\n                            <!-- Pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"pinCode[3]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[2].length\"\n                                    @input=\"moveFocus($event, 4)\"\n                                    @keydown.backspace=\"moveBack($event, 3)\">\n                            </div>\n\n                            <!-- Pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"pinCode[4]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[3].length\"\n                                    @input=\"moveFocus($event, 5)\"\n                                    @keydown.backspace=\"moveBack($event, 4)\">\n                            </div>\n\n                            <!-- Pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"pinCode[5]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[4].length\"\n                                    @input=\"moveFocus($event, 6)\"\n                                    @keydown.backspace=\"moveBack($event, 5)\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Confirm pin code -->\n                    <div class=\"pin\">\n                        <!-- Confirm pin code label -->\n                        <div class=\"field_label\">\n                            {{ $t('message.create_pin_confirm_pin_label') }}\n                        </div>\n\n                        <div class=\"row\" :class=\"{ error: confirmPinCode[5].length && !isPinMatching, success: confirmPinCode[5].length && isPinMatching }\">\n                            <!-- Confirm pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"confirmPinCode[0]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!pinCode[3].length\"\n                                    @input=\"moveFocus($event, 1)\"\n                                    @keydown.backspace=\"moveBack($event, 0)\">\n                            </div>\n\n                            <!-- Confirm pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"confirmPinCode[1]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!confirmPinCode[0].length\"\n                                    @input=\"moveFocus($event, 2)\"\n                                    @keydown.backspace=\"moveBack($event, 1)\">\n                            </div>\n\n                            <!-- Confirm pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"confirmPinCode[2]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!confirmPinCode[1].length\"\n                                    @input=\"moveFocus($event, 3)\"\n                                    @keydown.backspace=\"moveBack($event, 2)\">\n                            </div>\n\n                            <!-- Confirm pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"confirmPinCode[3]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!confirmPinCode[2].length\"\n                                    @input=\"moveFocus($event, 4)\"\n                                    @keydown.backspace=\"moveBack($event, 3)\">\n                            </div>\n\n                            <!-- Confirm pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"confirmPinCode[4]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!confirmPinCode[3].length\"\n                                    @input=\"moveFocus($event, 5)\"\n                                    @keydown.backspace=\"moveBack($event, 4)\">\n                            </div>\n\n                            <!-- Confirm pin code field -->\n                            <div class=\"field\">\n                                <input type=\"password\" class=\"input big\" v-model=\"confirmPinCode[5]\" maxlength=\"1\" inputmode=\"numeric\" :disabled=\"!confirmPinCode[4].length\"\n                                    @input=\"moveFocus($event, 6)\"\n                                    @keydown.backspace=\"moveBack($event, 5)\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Biometric button -->\n                    <button class=\"biometric_btn\" @click.prevent=\"toggleBiometric\" v-if=\"isBiometricAvailable\" :class=\"{ enabled: isBiometricEnabled }\">\n                        <!-- Biometric button icon -->\n                        <svg class=\"icon\" v-if=\"biometrictype === 'face'\">\n                            <use xlink:href=\"@/assets/sprite.svg#ic_biometric_face\"></use>\n                        </svg>\n\n                        <!-- Biometric button icon -->\n                        <svg class=\"icon\" v-else>\n                            <use xlink:href=\"@/assets/sprite.svg#ic_biometric_finger\"></use>\n                        </svg>\n\n                        <!-- Biometric button text -->\n                        <span>{{ $t('message.btn_biometric') }}</span>\n\n                        <!-- Biometric button toggle -->\n                        <div class=\"toggle_wrap\">\n                            <div class=\"toggle\">\n                                <div class=\"ball_wrap\">\n                                    <div class=\"ball\"><svg><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg></div>\n                                </div>\n                            </div>\n                        </div>\n                    </button>\n\n                    <!-- Create pin page buttons -->\n                    <div class=\"btns\">\n                        <!-- Next button -->\n                        <div class=\"btn\" :class=\"{ disabled: !isFormValid }\" @click.prevent=\"save()\">\n                            <span>{{ $t('message.btn_next') }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref, computed } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { useGlobalStore } from '@/store'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        loading = ref(true),\n        walletName = ref(''),\n        idValidWalletName = ref(false),\n        isTouchedWalletName = ref(false),\n        pinCode = ref(['', '', '', '', '', '']),\n        confirmPinCode = ref(['', '', '', '', '', '']),\n        isBiometricEnabled = ref(false),\n        isBiometricAvailable = ref(false),\n        biometrictype = ref('finger')\n\n\n    onBeforeMount(() => {\n        // Is biometric available\n        isBiometricAvailable.value = Telegram.WebApp.BiometricManager.isBiometricAvailable\n\n        // Biometric type\n        if (Telegram.WebApp.BiometricManager.biometricType != 'unknown') {\n            biometrictype.value = Telegram.WebApp.BiometricManager.biometricType\n        }\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    // Validate wallet name\n    function validateWalletName() {\n        // Validate length\n        walletName.value.trim().length\n            ? idValidWalletName.value = true\n            : idValidWalletName.value = false\n\n        // Touched status\n        isTouchedWalletName.value = true\n    }\n\n\n    // Move focus\n    function moveFocus(event, nextIndex) {\n        if (event.target.value.length >= 1 && nextIndex < 6) {\n            event.target.closest('.row').querySelector(`.field:nth-child(${nextIndex + 1}) input`).focus()\n        }\n    }\n\n\n    // Move back\n    function moveBack(event, currentIndex) {\n        setTimeout(() => {\n            if (event.target.value.length === 0 && currentIndex > 0) {\n                event.target.closest('.row').querySelector(`.field:nth-child(${currentIndex}) input`).select()\n            }\n        })\n    }\n\n\n    // Validate pin code\n    const isPinMatching = computed(() => {\n        return pinCode.value.join('') === confirmPinCode.value.join('')\n    })\n\n\n    // Validate form\n    const isFormValid = computed(() => {\n        return confirmPinCode.value[5].length != '' && isPinMatching.value && idValidWalletName.value\n    })\n\n\n    // Toggle biometric\n    function toggleBiometric() {\n        !isBiometricEnabled.value\n            ? checkBiometricAccess()\n            : isBiometricEnabled.value = false\n    }\n\n\n    // Check biometric access\n    function checkBiometricAccess() {\n        !Telegram.WebApp.isAccessGranted\n            ? Telegram.WebApp.BiometricManager.requestAccess({ reason: '' }, () => biometricAuthenticate())\n            : biometricAuthenticate()\n    }\n\n\n    // Biometric authenticate\n    function biometricAuthenticate() {\n        Telegram.WebApp.BiometricManager.authenticate({ reason: '' }, async res => {\n            if (res) {\n                // Set biometric status\n                isBiometricEnabled.value = true\n            }\n        })\n    }\n\n\n    // Save data\n    async function save() {\n        // Show loader\n        loading.value = true\n\n        // Save in DB\n        await store.createWallet({\n            pinCode: pinCode.value,\n            walletName: walletName.value,\n            isBiometricEnabled: isBiometricEnabled.value\n        })\n\n        // Go to created page\n        router.push('/wallet_created')\n    }\n</script>\n\n\n<style scoped>\n    .pin\n    {\n        margin-top: 8px;\n    }\n\n\n    .pin .row\n    {\n        flex-wrap: nowrap;\n    }\n\n\n    .pin .row > *\n    {\n        width: 100%;\n    }\n\n\n    .pin .row > * + *\n    {\n        margin-left: 10px;\n    }\n\n\n    .pin .input\n    {\n        font-size: 20px;\n\n        text-align: center;\n    }\n\n\n    .pin .error .input\n    {\n        border-color: #f00;\n    }\n\n    .pin .success .input\n    {\n        border-color: #00aa63;\n    }\n\n\n\n    .biometric_btn\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        margin: 30px auto 0;\n\n        transition: opacity .2s linear;\n    }\n\n\n    .biometric_btn .icon\n    {\n        display: block;\n\n        width: 26px;\n        height: 26px;\n        margin-right: 12px;\n    }\n\n\n    .biometric_btn .toggle_wrap\n    {\n        margin-left: 10px;\n        padding: 1px;\n\n        border-radius: 19px;\n        background: linear-gradient(to bottom,  #45097d 0%,#14012f 100%);\n    }\n\n\n    .biometric_btn .toggle\n    {\n        position: relative;\n\n        width: 46px;\n        height: 22px;\n\n        border-radius: 19px;\n        background: #170232;\n    }\n\n\n    .biometric_btn .ball_wrap\n    {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 2px;\n\n        width: 18px;\n        height: 18px;\n        margin: auto 0;\n        padding: 1px;\n\n        transition: left .2s linear;\n\n        border-radius: 50%;\n        background: linear-gradient(to bottom,  #8632e3 0%,#330c67 100%);\n    }\n\n\n    .biometric_btn .ball\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 16px;\n        height: 16px;\n\n        color: #fff;\n        border-radius: 50%;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .biometric_btn .ball svg\n    {\n        display: block;\n\n        width: 10px;\n        height: 10px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .biometric_btn.enabled .ball_wrap\n    {\n        left: 26px;\n\n        background: linear-gradient(to bottom,  #68def9 0%,#02294c 100%);\n    }\n\n\n    .biometric_btn.enabled .ball\n    {\n        background: linear-gradient(to bottom,  #56a8e7 0%,#064894 100%);\n    }\n\n\n    .biometric_btn.enabled .ball svg\n    {\n        opacity: 1;\n    }\n</style>","import script from \"./PinPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PinPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PinPage.vue?vue&type=style&index=0&id=1e6ad0b3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1e6ad0b3\"]])\n\nexport default __exports__","import script from \"./PinPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PinPage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useGlobalStore","router","useRouter","loading","ref","walletName","idValidWalletName","isTouchedWalletName","pinCode","confirmPinCode","isBiometricEnabled","isBiometricAvailable","biometrictype","validateWalletName","value","trim","length","moveFocus","event","nextIndex","target","closest","querySelector","focus","moveBack","currentIndex","setTimeout","select","onBeforeMount","Telegram","WebApp","BiometricManager","biometricType","isPinMatching","computed","join","isFormValid","toggleBiometric","checkBiometricAccess","isAccessGranted","biometricAuthenticate","requestAccess","reason","authenticate","async","res","save","createWallet","push","__exports__"],"sourceRoot":""}