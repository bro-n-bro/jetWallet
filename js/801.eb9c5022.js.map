{"version":3,"file":"js/801.eb9c5022.js","mappings":"odA8CI,MAAMA,GAAQC,EAAAA,EAAAA,KACVC,GAASC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,MACfC,GAAOC,EAAAA,EAAAA,IAAO,QACdC,GAAWC,EAAAA,EAAAA,IAAI,MAmBnBC,eAAeC,UAELC,MAAM,+BAA+BZ,EAAMa,yBAA0B,CACvEC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEhBC,KAAMC,KAAKC,UAAU,CACrBC,QAASnB,EAAMoB,SACfC,iBAAiB,EACjBC,sBAAsB,EACtBC,KAAM,YAAYvB,EAAMwB,qBAG/BC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IAEFxB,EAAayB,OAAO,CAChBC,MAAO,UACPC,MAAO,IACPC,SAAU,IACVC,MAAO3B,EAAK4B,OAAOC,EAAE,6CACrBC,KAAM,WACR,IAELC,OAAMC,IACHC,QAAQD,MAAMA,GAGdlC,EAAayB,OAAO,CAChBC,MAAO,UACPC,MAAO,IACPC,SAAU,IACVC,MAAO3B,EAAK4B,OAAOC,EAAE,oCACrBC,KAAM,SACR,IAINlC,EAAOsC,KAAK,WAChB,CAIA,SAASC,IAELvC,EAAOsC,KAAK,WAChB,C,OA/DAE,EAAAA,EAAAA,KAAchC,UACLV,EAAM2C,qBAED3C,EAAM4C,SAChB,KAIJC,EAAAA,EAAAA,KAAU,KACFC,OAAOC,UAAYD,OAAOC,SAASC,SACnCxC,EAASyC,MAAQF,SAASC,OAAOE,SACrC,I,wjBC1DR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://cosmos-telegram-signer/./src/views/getPack/GetAddress.vue","webpack://cosmos-telegram-signer/./src/views/getPack/GetAddress.vue?861a"],"sourcesContent":["<template>\n    <!-- JetPack - Get address page -->\n    <section class=\"page_container get_address\">\n        <div class=\"cont\">\n            <!-- JetPack - Get address page title -->\n            <div class=\"page_title\">\n                {{ $t('message.jp_get_address_title') }}\n            </div>\n\n\n            {{ initdata }}\n\n            <!-- JetPack - Get address page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- JetPack - Get address desc -->\n                    <div class=\"desc\">\n                        {{ $t('message.jp_get_address_desc') }}\n                    </div>\n\n                    <!-- Buttons -->\n                    <div class=\"btns\">\n                        <!-- Approve button -->\n                        <button class=\"btn\" @click=\"approveRequest()\">\n                            <span>{{ $t('message.btn_approve') }}</span>\n                        </button>\n\n                        <!-- Reject button -->\n                        <button class=\"btn purple_btn\" @click=\"rejectRequest()\">\n                            <span>{{ $t('message.btn_reject') }}</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, ref, onBeforeMount, onMounted } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useRouter } from 'vue-router'\n    import { useNotification } from '@kyvg/vue3-notification'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        notification = useNotification(),\n        i18n = inject('i18n'),\n        initdata = ref(null)\n\n\n    onBeforeMount(async () => {\n        if (!store.isInitialized) {\n            // Init app\n            await store.initApp()\n        }\n    })\n\n\n    onMounted(() => {\n        if (window.Telegram && window.Telegram.WebApp) {\n            initdata.value = Telegram.WebApp.initData\n        }\n    })\n\n\n    // Approve request\n    async function approveRequest() {\n        // Send response\n        await fetch(`https://api.telegram.org/bot${store.tgBotToken}/sendMessage`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n                body: JSON.stringify({\n                chat_id: store.tgChatId,\n                protect_content: true,\n                disable_notification: true,\n                text: `Address: ${store.currentAddress}`\n            })\n        })\n        .then(response => response.json())\n        .then(data => {\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: 1000,\n                title: i18n.global.t('message.notification_jp_get_address_title'),\n                type: 'success'\n            })\n        })\n        .catch(error => {\n            console.error(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: 1000,\n                title: i18n.global.t('message.notification_error_title'),\n                type: 'error'\n            })\n        })\n\n        // Redirect\n        router.push('/account')\n    }\n\n\n    // Reject request\n    function rejectRequest() {\n        // Redirect\n        router.push('/account')\n    }\n</script>\n\n\n<style scoped>\n    .desc\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 24px;\n    }\n</style>","import script from \"./GetAddress.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GetAddress.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GetAddress.vue?vue&type=style&index=0&id=1ac08c8b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1ac08c8b\"]])\n\nexport default __exports__"],"names":["store","useGlobalStore","router","useRouter","notification","useNotification","i18n","inject","initdata","ref","async","approveRequest","fetch","tgBotToken","method","headers","body","JSON","stringify","chat_id","tgChatId","protect_content","disable_notification","text","currentAddress","then","response","json","data","notify","group","speed","duration","title","global","t","type","catch","error","console","push","rejectRequest","onBeforeMount","isInitialized","initApp","onMounted","window","Telegram","WebApp","value","initData","__exports__"],"sourceRoot":""}