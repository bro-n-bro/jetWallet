{"version":3,"file":"js/979.3329e345.js","mappings":"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","sources":["webpack://cosmos-telegram-signer/./src/components/Search.vue","webpack://cosmos-telegram-signer/./src/components/Search.vue?0923","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokensItem.vue","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokensItem.vue?9683","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokens.vue","webpack://cosmos-telegram-signer/./src/components/account/AvailableTokens.vue?8e74","webpack://cosmos-telegram-signer/./src/components/account/QRCodeScanner.vue","webpack://cosmos-telegram-signer/./src/components/account/QRCodeScanner.vue?400c","webpack://cosmos-telegram-signer/./src/components/modal/TokensModal.vue","webpack://cosmos-telegram-signer/./src/components/modal/TokensModal.vue?b4fc","webpack://cosmos-telegram-signer/./src/components/modal/ChainsModal.vue","webpack://cosmos-telegram-signer/./src/components/modal/ChainsModal.vue?7c14","webpack://cosmos-telegram-signer/./src/views/Account/SendPage.vue","webpack://cosmos-telegram-signer/./src/views/Account/SendPage.vue?c5f6"],"sourcesContent":["<template>\n    <!-- Search -->\n    <div class=\"search\">\n        <!-- Search back button -->\n        <button class=\"back_btn\" @click.prevent=\"setBlurEvent\">\n            <span><svg><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg></span>\n        </button>\n\n        <!-- Search field -->\n        <div class=\"field\">\n            <!-- Search field icon -->\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_search\"></use></svg>\n\n            <!-- Search field input -->\n            <input type=\"text\" v-model=\"query\" class=\"input\" :placeholder=\"$t('message.search_placeholder')\"\n                @focus=\"setFocusEvent\"\n                @blur=\"setBlurEvent\"\n                @input=\"setEnterEvent\">\n\n            <!-- Search field clear button -->\n            <button class=\"clear_btn\" v-if=\"query.length\" @click.prevent=\"clearField()\">\n                <svg><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n            </button>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { ref, inject } from 'vue'\n\n\n    const props = defineProps(['source']),\n        emitter = inject('emitter'),\n        query = ref('')\n\n\n    // Set focus event\n    function setFocusEvent() {\n        // Set event \"search_focus\"\n        setTimeout(() => emitter.emit('search_focus'), 100)\n    }\n\n\n    // Set blur event\n    function setBlurEvent() {\n        // Set event \"search_blur\"\n        setTimeout(() => emitter.emit('search_blur'), 100)\n    }\n\n\n    // Set event \"search\"\n    function setEnterEvent() {\n        emitter.emit('search', {\n            query: query.value,\n            source: props.source\n        })\n    }\n\n\n    // Clear field\n    function clearField() {\n        //clear query\n        query.value = ''\n\n        /// Set event \"search\"\n        emitter.emit('search', {\n            query: query.value,\n            source: props.source\n        })\n    }\n</script>\n\n\n<style scoped>\n    .search\n    {\n        position: sticky;\n        z-index: 5;\n        top: 0;\n\n        padding: 12px 0;\n\n        background: #170232;\n    }\n\n\n    .search ::-webkit-input-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n    .search :-moz-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n    .search ::-moz-placeholder\n    {\n        opacity: 1;\n        color: rgba(255,255,255,.6);\n    }\n\n    .search :-ms-input-placeholder\n    {\n        color: rgba(255,255,255,.6);\n    }\n\n\n    .search .back_btn\n    {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        bottom: 0;\n        left: 0;\n\n        visibility: hidden;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n        padding: 1px;\n\n        transition: .2s linear;\n\n        opacity: 0;\n        border-radius: 50%;\n        background: linear-gradient(to bottom,  #5c32cc 0%,#210750 100%);\n    }\n\n\n    .search .back_btn span\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 26px;\n        height: 26px;\n\n        border-radius: 50%;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .search .back_btn svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .searching .search .back_btn\n    {\n        visibility: visible;\n\n        opacity: 1;\n    }\n\n\n    .search .field\n    {\n        position: relative;\n        z-index: 2;\n\n        width: 100%;\n        margin-left: auto;\n        padding: 1px;\n\n        transition: width .2s linear;\n\n        border-radius: 23px;\n        background: linear-gradient(to bottom,  #5c32cc 0%,#210750 100%);\n    }\n\n\n    .searching .search .field\n    {\n        width: calc(100% - 40px);\n    }\n\n\n    .search .icon\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        bottom: 0;\n        left: 10px;\n\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin: auto 0;\n\n        pointer-events: none;\n    }\n\n\n    .search .input\n    {\n        font-family: var(--font_family);\n        font-size: 16px;\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 28px;\n        padding: 0 39px 2px;\n\n        color: #fff;\n        border: none;\n        border-radius: 23px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .clear_btn\n    {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        right: 6px;\n        bottom: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 24px;\n        height: 24px;\n        margin: auto 0;\n    }\n\n\n    .clear_btn svg\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n    }\n</style>","import script from \"./Search.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Search.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Search.vue?vue&type=style&index=0&id=aba77f5c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-aba77f5c\"]])\n\nexport default __exports__","<template>\n    <router-link :to=\"`/account/send?denom=${props.balance.denom}`\" class=\"token_wrap\" :class=\"{ current: isCurrentToken(props.balance.denom) }\">\n        <div class=\"token\">\n            <!-- Token logo -->\n            <div class=\"logo\">\n                <img :src=\"props.balance.token_info.logo_URIs.svg\" alt=\"\" loading=\"lazy\">\n\n                <!-- Token check -->\n                <div class=\"check\" v-if=\"isCurrentToken(props.balance.denom)\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                </div>\n            </div>\n\n            <!-- Token denom -->\n            <div class=\"denom\">\n                {{ props.balance.token_info.symbol }}\n            </div>\n\n            <!-- Token amount -->\n            <div class=\"amount\">\n                <!-- Token amount value -->\n                <div class=\"val\">\n                    {{ formatTokenAmount(props.balance.amount, props.balance.exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n                </div>\n\n                <!-- Token amount cost -->\n                <div class=\"cost\">\n                    {{ formatTokenCost(calcTokenCost(props.balance.token_info.symbol, props.balance.amount, props.balance.exponent)) }}\n\n                    {{ store.currentCurrencySymbol }}\n                </div>\n            </div>\n        </div>\n    </router-link>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/store'\n    import { formatTokenAmount, formatTokenCost, calcTokenCost } from '@/utils'\n\n\n    const props = defineProps({\n        balance: {\n            type: Object,\n            default: () => ({})\n        },\n        currentToken: {\n            type: Object,\n            default: () => ({\n                denom: ''\n            })\n        }\n    }),\n        store = useGlobalStore()\n\n\n    // Is current token\n    function isCurrentToken(denom) {\n        return denom === props.currentToken.denom\n    }\n</script>\n\n\n<style scoped>\n    .token_wrap\n    {\n        display: block;\n\n        padding: 1px;\n\n        text-decoration: none;\n\n        color: currentColor;\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .token\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding-right: 9px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .token .logo\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 55px;\n        height: 55px;\n        margin-right: 8px;\n        padding: 8px;\n\n        border-radius: 11px;\n    }\n\n\n    .token .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .token .check\n    {\n        position: absolute;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: calc(100% - 8px);\n        height: calc(100% - 8px);\n        margin: auto;\n\n        border-radius: 50%;\n        background: rgba(53, 12, 107, .65);\n\n        inset: 0;\n    }\n\n\n    .token .check svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .token .denom\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        text-transform: uppercase;\n    }\n\n\n    .token .amount\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .token .amount .cost\n    {\n        font-size: 16px;\n        font-weight: 400;\n\n        color: #836b9e;\n    }\n\n\n    .token_wrap:active,\n    .token_wrap.current\n    {\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n    .token_wrap:active .token,\n    .token_wrap.current .token\n    {\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n</style>","import script from \"./AvailableTokensItem.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AvailableTokensItem.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AvailableTokensItem.vue?vue&type=style&index=0&id=2a50009b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2a50009b\"]])\n\nexport default __exports__","<template>\n    <!-- Available tokens -->\n    <section class=\"available_tokens\">\n        <div class=\"cont\">\n            <!-- Search -->\n            <Search source=\"availables\" />\n\n            <!-- Loader -->\n            <Loader v-if=\"!store.isInitialized || !store.isBalancesGot\" />\n\n            <!-- Tokens -->\n            <div class=\"tokens\" v-else>\n                <!-- Tokens count -->\n                <div class=\"count\" v-if=\"searchResult.length === store.balances.length\">\n                    <b>{{ store.balances.length }}</b> {{ $t('message.available_tokens_title') }}\n                </div>\n\n                <!-- Tokens list -->\n                <div class=\"list\" v-if=\"searchResult.length\">\n                    <!-- Tokens item -->\n                    <div class=\"item\" v-for=\"(balance, index) in searchResult\" :key=\"index\" :style=\"`order: ${parseInt(calcTokenCost(balance.token_info.symbol, balance.amount, balance.exponent) * -1000000)};`\">\n                        <!-- Tokens token -->\n                        <AvailableTokensItem :balance :currentToken=\"props.currentToken\" />\n                    </div>\n                </div>\n\n                <!-- Tokens empty -->\n                <div class=\"empty\" v-else>\n                    {{ $t('message.search_empty') }}\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, watch, ref, computed, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { calcTokenCost } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import Search from '@/components/Search.vue'\n    import AvailableTokensItem from '@/components/account/AvailableTokensItem.vue'\n\n\n    const props = defineProps(['currentToken']),\n        store = useGlobalStore(),\n        emitter = inject('emitter'),\n        searchResult = ref([])\n\n\n    onBeforeMount(() => {\n        if (store.isBalancesGot) {\n            // Default search result\n            searchResult.value = store.balances\n        }\n    })\n\n\n    watch(computed(() => store.isBalancesGot), () => {\n        if (store.isBalancesGot) {\n            // Default search result\n            searchResult.value = store.balances\n        }\n    })\n\n\n    // Event \"search\"\n    emitter.on('search', ({ query, source }) => {\n        if (source === 'availables') {\n            // Clear search result\n            searchResult.value = []\n\n            // Set new result\n            for (let key in store.balances) {\n                if (store.balances[key].token_info.symbol.toLocaleLowerCase().includes(query.toLocaleLowerCase())) {\n                    searchResult.value.push(store.balances[key])\n                }\n            }\n        }\n    })\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px;\n\n        background: none;\n    }\n\n\n    .available_tokens\n    {\n        position: relative;\n        z-index: 9;\n\n        flex: 1 0 auto;\n\n        background: #170232;\n    }\n\n\n    .searching .available_tokens\n    {\n        overflow: auto;\n        flex: none;\n\n        height: var(--tg-viewport-stable-height);\n        margin-bottom: -14px;\n        padding-bottom: 14px;\n\n        overscroll-behavior-y: contain;\n    }\n\n\n    .empty\n    {\n        font-size: 20px;\n        font-weight: 500;\n\n        padding: 10px;\n\n        text-align: center;\n\n        opacity: .7;\n    }\n\n\n\n    .searching .tokens\n    {\n        margin: 0;\n    }\n\n\n    .tokens .count\n    {\n        font-size: 14px;\n\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n\n        padding: 2px 10px;\n\n        color: rgba(255,255,255,.6);\n\n        gap: 4px;\n    }\n\n\n    .tokens .count b\n    {\n        color: #fff;\n    }\n\n\n    .tokens .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .tokens .list > *\n    {\n        margin-top: 8px;\n    }\n\n\n\n    .inside_modal .cont\n    {\n        padding: 0;\n    }\n\n\n    .inside_modal .tokens .count\n    {\n        display: none;\n    }\n</style>","import script from \"./AvailableTokens.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AvailableTokens.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AvailableTokens.vue?vue&type=style&index=0&id=96d84aba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-96d84aba\"]])\n\nexport default __exports__","<template>\n    <!-- QR code button -->\n    <button class=\"btn\" @click.prevent=\"openScanner()\">\n        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_scaner\"></use></svg>\n    </button>\n</template>\n\n\n<script setup>\n    // Open QR popup\n    function openScanner() {\n        Telegram.WebApp.showScanQrPopup({ text: '' })\n    }\n</script>\n\n\n<style scoped>\n    .btn\n    {\n        position: absolute;\n        z-index: 9;\n        top: 17px;\n        right: 60px;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 28px;\n        height: 28px;\n        margin-left: auto;\n\n        transition: .2s linear;\n\n        background: url(@/assets/bg_action_btn.svg) 0 0/100% 100% no-repeat;\n    }\n\n\n    .btn.in_field\n    {\n        top: 0;\n        right: 16px;\n        bottom: 0;\n\n        margin: auto 0;\n\n        background: none;\n    }\n\n\n    .btn .icon\n    {\n        display: block;\n\n        width: 14px;\n        height: 14px;\n    }\n\n\n    .btn:active\n    {\n        color: #5b3895;\n        background: url(@/assets/bg_action_btn_a.svg) 0 0/100% 100% no-repeat;\n    }\n</style>","import script from \"./QRCodeScanner.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./QRCodeScanner.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./QRCodeScanner.vue?vue&type=style&index=0&id=1412c06e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1412c06e\"]])\n\nexport default __exports__","<template>\n    <!-- Tokens page -->\n    <section class=\"page_container inner_page_container tokens_page\">\n        <div class=\"cont\">\n            <!-- Tokens page head -->\n            <div class=\"head\">\n                <!-- Back button -->\n                <button class=\"back_btn\" @click=\"emitter.emit('close_tokens_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </button>\n\n                <!-- Tokens page title -->\n                <div class=\"page_title\">\n                    {{ $t('message.tokens_page_title') }}\n                </div>\n            </div>\n\n            <!-- Available tokens -->\n            <AvailableTokens class=\"inside_modal\" :currentToken=\"props.currentToken\" />\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n\n    // Components\n    import AvailableTokens from '@/components/account/AvailableTokens.vue'\n\n\n    const props = defineProps(['currentToken']),\n        emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .tokens_page\n    {\n        position: fixed;\n        z-index: 9;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        background: #170232;\n    }\n\n\n    .tokens_page .head\n    {\n        margin-bottom: 0;\n    }\n\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px;\n\n        background: none;\n    }\n</style>","import script from \"./TokensModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TokensModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TokensModal.vue?vue&type=style&index=0&id=76033aec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-76033aec\"]])\n\nexport default __exports__","<template>\n    <!-- Chains page -->\n    <section class=\"page_container inner_page_container chains_page\">\n        <div class=\"cont\">\n            <!-- Chains page head -->\n            <div class=\"head\">\n                <!-- Back button -->\n                <button class=\"back_btn\" @click=\"emitter.emit('close_chains_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </button>\n\n                <!-- Chains page title -->\n                <div class=\"page_title\">\n                    {{ $t('message.chains_page_title') }}\n                </div>\n            </div>\n\n            <!-- Search -->\n            <Search source=\"chains\" />\n\n            <!-- Chains -->\n            <div class=\"chains\">\n                <!-- Chains list -->\n                <div class=\"list\" v-if=\"searchResult.length\">\n                    <!-- Chains item -->\n                    <div class=\"item\" v-for=\"(chain, index) in searchResult\" :key=\"index\">\n                        <div class=\"chain_wrap\" @click.prevent=\"setChain(chain)\" :class=\"{ current: isCurrentChain(chain.info.chain_id) }\">\n                            <!-- Chain -->\n                            <div class=\"chain\">\n                                <!-- Chain logo -->\n                                <div class=\"logo\">\n                                    <img :src=\"getNetworkLogo(chain.info.chain_id)\" alt=\"\" @error=\"imageLoadError($event)\">\n\n                                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n\n                                    <!-- Chain check -->\n                                    <div class=\"check\" v-if=\"isCurrentChain(chain.info.chain_id)\">\n                                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                    </div>\n                                </div>\n\n                                <div>\n                                    <!-- Chain name -->\n                                    <div class=\"name\">\n                                        {{ chain.info.pretty_name }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <!-- Empty search -->\n                <div class=\"empty\" v-else>\n                    {{ $t('message.search_empty_validator') }}\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, inject, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { chains, ibc } from 'chain-registry'\n    import { imageLoadError, getNetworkLogo } from '@/utils'\n\n    // Components\n    import Search from '@/components/Search.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        chainsList = ref([]),\n        searchResult = ref([])\n\n\n    onBeforeMount(() => {\n        // Get chains\n        chainsList.value = ibc\n            .filter(el => el.chain_1.chain_name === store.currentNetwork)\n            .filter((el, index, self) =>\n                self.findIndex(t => t.chain_2.chain_name === el.chain_2.chain_name) === index\n            )\n\n        // Get chain names\n        chainsList.value.forEach(el => {\n            el.info = chains.find(chain => chain.chain_name === el.chain_2.chain_name)\n        })\n\n        // Default search result\n        searchResult.value = chainsList.value\n    })\n\n\n    // Is current chain\n    function isCurrentChain(chainID) {\n        // Check\n        if (store.IBCSendCurrentChain && store.IBCSendCurrentChain.info.chain_id === chainID) {\n            return true\n        }\n    }\n\n\n    function setChain(chain) {\n        // Set data\n        store.IBCSendCurrentChain = chain\n\n        // Event \"close_chains_modal\"\n        emitter.emit('close_chains_modal')\n    }\n\n\n    // Event \"search\"\n    emitter.on('search', ({ query, source }) => {\n        if (source === 'chains') {\n            // Clear search result\n            searchResult.value = []\n\n            // Set new result\n            for (let key in chainsList.value) {\n                if (chainsList.value[key].info.pretty_name.toLocaleLowerCase().includes(query.toLocaleLowerCase())) {\n                    searchResult.value.push(chainsList.value[key])\n                }\n            }\n        }\n    })\n</script>\n\n\n<style scoped>\n    .chains_page\n    {\n        position: fixed;\n        z-index: 9;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        background: #170232;\n    }\n\n\n    .chains_page .head\n    {\n        margin-bottom: 0;\n    }\n\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px;\n\n        background: none;\n    }\n\n\n\n    .chains\n    {\n        overflow: auto;\n\n        width: calc(100% + 32px);\n        height: calc(var(--tg-viewport-stable-height) - 110px);\n        margin: 0 -16px;\n        padding: 0 16px 12px;\n\n        overscroll-behavior-y: contain;\n    }\n\n\n    .empty\n    {\n        font-size: 20px;\n        font-weight: 500;\n\n        padding: 10px;\n\n        text-align: center;\n\n        opacity: .7;\n    }\n\n\n    .chains .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .chains .list > *\n    {\n        margin-top: 8px;\n    }\n\n\n\n    .chains .chain_wrap\n    {\n        padding: 1px;\n\n        cursor: pointer;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .chains .chain\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        padding: 5px 7px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .chains .chain .logo\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 44px;\n        height: 44px;\n        margin-right: 8px;\n        padding: 6px;\n\n        border-radius: 50%;\n        background: #950fff;\n    }\n\n\n    .chains .chain .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .chains .chain .logo .icon\n    {\n        display: none;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .chains .chain .logo img.hide\n    {\n        display: none;\n    }\n\n    .chains .chain .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n    .chains .chain .check\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n        background: rgba(53, 12, 107, .65);\n    }\n\n\n    .chains .chain .check svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .chains .chain .logo + *\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        width: calc(100% - 52px);\n    }\n\n\n    .chains .chain .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .chains .chain_wrap.current\n    {\n        background: linear-gradient(180deg, #dc92fe 0%, #310446 100%);\n    }\n\n    .chains .current .chain\n    {\n        background: linear-gradient(180deg, #af60d3 0%, #56007e 100%);\n    }\n</style>","import script from \"./ChainsModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChainsModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChainsModal.vue?vue&type=style&index=0&id=586e970e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-586e970e\"]])\n\nexport default __exports__","<template>\n    <!-- Send page -->\n    <section class=\"page_container inner_page_container send\">\n        <!-- Loader -->\n        <Loader v-if=\"isProcess\" />\n\n        <div class=\"cont\">\n            <!-- Send page head -->\n            <div class=\"head\">\n                <!-- Back button -->\n                <router-link to=\"/account\" class=\"back_btn\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                </router-link>\n\n                <!-- Tabs -->\n                <div class=\"tabs_wrap\">\n                    <div class=\"tabs\">\n                        <!-- Tab send -->\n                        <button class=\"btn\" ref=\"tab1\" @click.prevent=\"activeTab = 1\" :class=\"{ active: activeTab === 1 }\">\n                            <span>{{ $t('message.send_page_tab1') }}</span>\n                        </button>\n\n                        <!-- Tab IBC send -->\n                        <button class=\"btn\" ref=\"tab2\" @click.prevent=\"activeTab = 2\" :class=\"{ active: activeTab === 2 }\">\n                            <span>{{ $t('message.send_page_tab2') }}</span>\n                        </button>\n\n                        <!-- Tabs roller -->\n                        <div class=\"roller\" :style=\"`width: ${rollerWidth}px; left: ${rollerOffsetLeft}px;`\">\n                            <span></span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- Send page token -->\n            <div class=\"token_wrap\" @click.prevent=\"openTokensModal()\" v-if=\"balance\">\n                <div class=\"token\">\n                    <!-- Send page token logo -->\n                    <div class=\"logo\">\n                        <img :src=\"balance.token_info.logo_URIs.svg\" alt=\"\" loading=\"lazy\">\n                    </div>\n\n                    <!-- Send page token denom -->\n                    <div class=\"denom\">\n                        {{ balance.token_info.symbol }}\n                    </div>\n\n                    <!-- Send page token amount -->\n                    <div class=\"amount\">\n                        <div class=\"val\">\n                            {{ formatTokenAmount(balance.amount, balance.exponent).toLocaleString('ru-RU', { maximumFractionDigits: 7 }).replace(',', '.') }}\n                        </div>\n\n                        <div class=\"cost\">\n                            {{ formatTokenCost(calcTokenCost(balance.token_info.symbol, balance.amount, balance.exponent)) }} {{ store.currentCurrencySymbol }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- Send page default token -->\n            <div class=\"token_wrap\" @click.prevent=\"openTokensModal()\" v-else>\n                <div class=\"token\">\n                    <!-- Send page token logo -->\n                    <div class=\"logo\">\n                        <img :src=\"getNetworkLogo(store.networks[store.currentNetwork].chain_id)\" alt=\"\">\n                    </div>\n\n                    <!-- Send page token denom -->\n                    <div class=\"denom\">\n                        {{ store.networks[store.currentNetwork].token_name }}\n                    </div>\n\n                    <!-- Send page token amount -->\n                    <div class=\"amount\">\n                        <div class=\"val\">0</div>\n\n                        <div class=\"cost\">\n                            0.00 {{ store.currentCurrencySymbol }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- Send page destination chain -->\n            <div class=\"destination_chain\" v-if=\"activeTab === 2\">\n                <!-- Send page destination chain label -->\n                <div class=\"field_label\">\n                    {{ $t('message.send_destination_chain_label') }}\n                </div>\n\n                <!-- Send page destination chain info -->\n                <div class=\"info_wrap\" @click.prevent=\"openChainsModal()\" v-if=\"!store.IBCSendCurrentChain\">\n                    <div class=\"info\">\n                        <div class=\"placeholder\">\n                            {{ $t('message.send_destination_chain_placeholder') }}\n                        </div>\n\n                        <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver2\"></use></svg>\n                    </div>\n                </div>\n\n                <!-- Send page destination chain info -->\n                <div class=\"chain_wrap\" @click.prevent=\"openChainsModal()\" v-else>\n                    <div class=\"chain\">\n                        <!-- Send page destination chain logo -->\n                        <div class=\"logo\">\n                            <img :src=\"getNetworkLogo(store.IBCSendCurrentChain?.info.chain_id)\" alt=\"\" @error=\"imageLoadError($event)\">\n\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                        </div>\n\n                        <div>\n                            <!-- Send page destination chain name -->\n                            <div class=\"name\">\n                                {{ store.IBCSendCurrentChain?.info.pretty_name }}\n                            </div>\n                        </div>\n\n                        <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_ver2\"></use></svg>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- Send page recipient address -->\n            <div class=\"address\">\n                <!-- Send page recipient address label -->\n                <div class=\"field_label\">\n                    {{ $t('message.send_address_label') }}\n                </div>\n\n                <!-- Send page recipient address field -->\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input big\" v-model=\"address\" ref=\"addressInput\"\n                        :placeholder=\"$t('message.placeholder_address')\"\n                        @input=\"validateAddress()\"\n                        @paste=\"validateAddress()\">\n\n                    <!-- Paste button -->\n                    <button class=\"paste_btn\" @click.prevent=\"pasteFromClipboard()\">\n                        {{ $t('message.btn_paste') }}\n                    </button>\n\n                    <!-- QR code scanner -->\n                    <QRCodeScanner class=\"in_field\" />\n                </div>\n            </div>\n\n\n            <!-- Send page amount -->\n            <div class=\"amount_field\">\n                <!-- Send page amount label -->\n                <div class=\"field_label\">\n                    {{ $t('message.send_amount_label') }}\n\n                    <!-- Send page amount cost -->\n                    <div class=\"cost\">\n                        {{ formatTokenCost(calcTokenCost(store.networks[store.currentNetwork].token_name, (amount * Math.pow(10, store.networks[store.currentNetwork].exponent)), store.networks[store.currentNetwork].exponent)) }}\n\n                        {{ store.currentCurrencySymbol }}\n                    </div>\n                </div>\n\n                <!-- Send page amount field -->\n                <div class=\"field\">\n                    <input type=\"number\" inputmode=\"decimal\" class=\"input big\" v-model=\"amount\"\n                        :placeholder=\"$t('message.placeholder_amount', { token: balance.token_info.symbol })\"\n                        @input=\"validateAmount()\">\n\n                    <!-- Send page amount max. button -->\n                    <button type=\"button\" class=\"max_btn\" @click.prevent=\"setMaxAmount\">\n                        {{ $t('message.btn_MAX') }}\n                    </button>\n                </div>\n            </div>\n\n\n            <!-- Send page memo -->\n            <div class=\"memo_field\">\n                <!-- Send page memo label -->\n                <div class=\"field_label\">\n                    {{ $t('message.memo_label') }}\n                </div>\n\n                <!-- Send page memo field -->\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input big\" v-model=\"memo\"\n                        :placeholder=\"$t('message.placeholder_memo')\">\n                </div>\n            </div>\n\n\n            <!-- Tx fee -->\n            <TxFee v-if=\"isFormValid\" :msgAny txType=\"send\" />\n\n\n            <!-- Send page button -->\n            <div class=\"btns\">\n                <!-- Send button -->\n                <button v-if=\"!store.networks[store.currentNetwork].currentTxHash\" class=\"btn\" @click.prevent=\"openSignTxModal()\" :class=\"{ disabled: !store.TxFee.isEnough }\">\n                    <span>{{ $t('message.btn_send') }}</span>\n                </button>\n\n                <!-- Waiting button -->\n                <button v-else class=\"btn waiting_btn\" @click.prevent=\"emitter.emit('show_collapsible_notification')\">\n                    <span>{{ $t('message.btn_waiting_tx') }}</span>\n                </button>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Chains modal -->\n    <transition name=\"from_right\">\n    <ChainsModal v-if=\"showChainsModal\" />\n    </transition>\n\n    <!-- Tokens modal -->\n    <transition name=\"from_right\">\n    <TokensModal v-if=\"showTokensModal\" :currentToken=\"balance\" />\n    </transition>\n\n    <!-- Sign transaction modal -->\n    <transition name=\"modal\">\n    <SignTxModal v-if=\"showSignTxModal\"/>\n    </transition>\n\n    <!-- Overlay -->\n    <transition name=\"fade\">\n    <div class=\"modal_overlay\" @click.prevent=\"emitter.emit('close_any_modal')\" v-if=\"showSignTxModal\"></div>\n    </transition>\n</template>\n\n\n<script setup>\n    import { ref, inject, watch, onMounted, computed, onUnmounted } from 'vue'\n    import { useGlobalStore } from '@/store'\n    import { useRouter, useRoute } from 'vue-router'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { fromBech32 } from '@cosmjs/encoding'\n    import { calcTokenCost, formatTokenCost, formatTokenAmount, signTx, sendTx, getExplorerLink, getNetworkLogo, imageLoadError } from '@/utils'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n    import TokensModal from '@/components/modal/TokensModal.vue'\n    import TxFee from '@/components/TxFee.vue'\n    import SignTxModal from '@/components/modal/SignTxModal.vue'\n    import ChainsModal from '@/components/modal/ChainsModal.vue'\n    import QRCodeScanner from '@/components/account/QRCodeScanner.vue'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        route = useRoute(),\n        emitter = inject('emitter'),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        activeTab = ref(1),\n        tab1 = ref(null),\n        tab2 = ref(null),\n        tabs = [tab1, tab2],\n        rollerWidth = ref(null),\n        rollerOffsetLeft = ref(null),\n        balance = ref(store.balances.find(balance => balance.denom === route.query.denom)),\n        addressInput = ref(null),\n        address = ref(route.query.address || ''),\n        amount = ref(route.query.amount || ''),\n        memo = ref(''),\n        showTokensModal = ref(false),\n        showSignTxModal = ref(false),\n        showChainsModal =ref(false),\n        msgAny = ref([]),\n        isProcess = ref(false),\n        isAmountReady = ref(false),\n        isAddressValid = ref(false),\n        isFormValid = ref(computed(() => isAmountReady.value && isAddressValid.value))\n\n\n    onMounted(() => {\n        // Validate address\n        if (address.value) {\n            validateAddress()\n        }\n\n        // Validate amount\n        if (amount.value) {\n            validateAmount()\n        }\n\n        // Qr code received\n        Telegram.WebApp.onEvent('qrTextReceived', () => {\n            // Update data\n            updateData()\n        })\n\n        // Set roller params\n        rollerWidth.value = tabs[activeTab.value - 1].value.offsetWidth\n        rollerOffsetLeft.value = tabs[activeTab.value - 1].value.offsetLeft\n    })\n\n\n    onUnmounted(() => {\n        // Unlisten events\n        emitter.off('auth')\n        emitter.off('close_sign_tx_modal')\n\n        Telegram.WebApp.offEvent('qrTextReceived')\n    })\n\n\n    watch(computed(() => activeTab.value), () => {\n        // Update roller params\n        rollerWidth.value = tabs[activeTab.value - 1].value.offsetWidth\n        rollerOffsetLeft.value = tabs[activeTab.value - 1].value.offsetLeft\n    })\n\n\n    watch(computed(() => route.query.denom), () => {\n        // Update data\n        updateData()\n    })\n\n\n    watch(computed(() => route.query.address), () => {\n        // Update data\n        updateData()\n    })\n\n\n    watch(computed(() => isFormValid.value), () => {\n        if (isFormValid.value) {\n            // Set messeges\n            msgAny.value = [{\n                typeUrl: '/cosmos.bank.v1beta1.MsgSend',\n                value: {\n                    fromAddress: store.currentAddress,\n                    toAddress: address.value,\n                    amount: [{\n                        denom: balance.value.denom,\n                        amount: `${parseFloat(amount.value.toString().replace(',', '.')).toFixed(balance.value.exponent) * Math.pow(10, balance.value.exponent)}`\n                    }]\n                }\n            }]\n        }\n    })\n\n\n    // Update data\n    function updateData() {\n        // Reset data\n        address.value = ''\n        amount.value = ''\n        memo.value = ''\n        isProcess.value = false\n        isAmountReady.value = false\n        isAddressValid.value = false\n\n        // Remove error classes\n        addressInput.value.classList.remove('error')\n\n        // Update balance\n        balance.value = store.balances.find(balance => balance.denom === route.query.denom)\n\n        // Parse query data\n        if (route.query.address) {\n            // Set data\n            address.value = route.query.address\n\n            // Validate address\n            validateAddress()\n        }\n\n        // if (route.query.amount) {\n        //     // Set data\n        //     amount.value = route.query.amount\n\n        //     // Validate amount\n        //     validateAmount()\n        // }\n\n        // Close any modals\n        emitter.emit('close_any_modal')\n    }\n\n\n    // Validate address\n    function validateAddress() {\n        try {\n            let { prefix, data } = fromBech32(address.value)\n\n            // Check\n            if (prefix == store.networks[store.currentNetwork].prefix && data.length == store.networks[store.currentNetwork].address_length) {\n                // Toggle classes\n                addressInput.value.classList.remove('error')\n\n                // Address status\n                isAddressValid.value = true\n            } else {\n                // Toggle classes\n                addressInput.value.classList.add('error')\n\n                // Address status\n                isAddressValid.value = false\n            }\n        } catch (error) {\n            // Toggle classes\n            addressInput.value.classList.add('error')\n\n            // Address status\n            isAddressValid.value = false\n        }\n    }\n\n\n    // Set MAX amount\n    function setMaxAmount() {\n        // Set amount status\n        isAmountReady.value = false\n\n        setTimeout(() => {\n            // Set amount\n            amount.value = formatTokenAmount(balance.value.amount, balance.value.exponent)\n\n            // Set amount status\n            isAmountReady.value = true\n        })\n    }\n\n\n    // Validate amount\n    function validateAmount() {\n        // Set amount status\n        isAmountReady.value = false\n\n        setTimeout(() => {\n            // Negative value\n            if (amount.value.length && amount.value <= 0) {\n                // Set empty\n                amount.value = ''\n            }\n\n            // Acceptable value\n            if (amount.value && amount.value > 0 && amount.value < formatTokenAmount(balance.value.amount, balance.value.exponent)){\n                // Set amount status\n                isAmountReady.value = true\n            }\n\n            // More than available balance\n            if (amount.value > formatTokenAmount(balance.value.amount, balance.value.exponent)) {\n                // Set MAX amount\n                setMaxAmount()\n            }\n        })\n    }\n\n\n    // Paste from clipboard\n    function pasteFromClipboard() {\n        navigator.clipboard.readText().then(clipboardData => {\n            // Validate address\n            try {\n                let { prefix, data } = fromBech32(clipboardData)\n\n                // Check\n                if (prefix == store.networks[store.currentNetwork].prefix && data.length == store.networks[store.currentNetwork].address_length) {\n                    // Set data\n                    address.value = clipboardData\n                } else {\n                    // Show notification\n                    notification.notify({\n                        group: 'default',\n                        speed: 200,\n                        duration: 1000,\n                        title: i18n.global.t('message.notification_tx_error_title'),\n                        text: i18n.global.t('message.notification_error_invalid_paste_title'),\n                        type: 'error'\n                    })\n                }\n            } catch (error) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    speed: 200,\n                    duration: 1000,\n                    title: i18n.global.t('message.notification_tx_error_title'),\n                    text: i18n.global.t('message.notification_error_invalid_paste_title'),\n                    type: 'error'\n                })\n            }\n        })\n    }\n\n\n    // Send tokens\n    async function send() {\n        // Set process status\n        isProcess.value = true\n\n        try {\n            // Update TxFee info\n            if (store.TxFee.isRemember) {\n                await store.updateTxFeeInfo()\n            }\n\n            // Sign Tx\n            let txBytes = await signTx(msgAny.value, memo.value)\n\n            // Clean notifications\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                speed: 200,\n                duration: -100,\n                title: i18n.global.t('message.notification_tx_pending_title'),\n                type: 'pending',\n                data: {\n                    isCollapsible: true,\n                    explorer_link: getExplorerLink(store.currentNetwork)\n                }\n            })\n\n            // Send Tx\n            sendTx(txBytes).catch(error => {\n                console.log(error)\n\n                // Show error\n                showError(error)\n            })\n\n            // Redirect\n            router.push('/account')\n        } catch (error) {\n            console.log(error)\n\n            // Show error\n            showError(error)\n        }\n    }\n\n\n    // Show error message\n    function showError(error) {\n        // Set process status\n        isProcess.value = false\n\n        // Get error code\n        let errorText = ''\n\n        // Get error title\n        error.code\n            ? errorText = i18n.global.t(`message.notification_tx_error_${error.code}`)\n            : errorText = i18n.global.t('message.notification_tx_error_rejected')\n\n        // Clean notifications\n        notification.notify({\n            group: 'default',\n            clean: true\n        })\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            speed: 200,\n            duration: 6000,\n            title: i18n.global.t('message.notification_tx_error_title'),\n            text: errorText,\n            type: 'error'\n        })\n\n        // Clear tx hash\n        store.networks[store.currentNetwork].currentTxHash = null\n\n        // Reset Tx Fee\n        store.resetTxFee()\n    }\n\n\n    // Open tokens modal\n    function openTokensModal() {\n        // Show tokens modal\n        showTokensModal.value = true\n    }\n\n\n    // Open SignTx modal\n    function openSignTxModal() {\n        // Show SignTx modal\n        showSignTxModal.value = true\n\n        // Update status\n        store.isAnyModalOpen = true\n    }\n\n\n    // Open chains modal\n    function openChainsModal() {\n        // Show chains modal\n        showChainsModal.value = true\n    }\n\n\n    // Event \"auth\"\n    emitter.on('auth', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n\n        // Update status\n        store.isAnyModalOpen = false\n\n        // Send tokens\n        send()\n    })\n\n\n    // Event \"close_chains_modal\"\n    emitter.on('close_chains_modal', () => {\n        // Hide chains modal\n        showChainsModal.value = false\n    })\n\n\n    // Event \"close_tokens_modal\"\n    emitter.on('close_tokens_modal', () => {\n        // Hide tokens modal\n        showTokensModal.value = false\n    })\n\n\n    // Event \"close_sign_tx_modal\"\n    emitter.on('close_sign_tx_modal', () => {\n        // Hide SignTx modal\n        showSignTxModal.value = false\n\n        // Update status\n        store.isAnyModalOpen = false\n    })\n\n\n    // Event \"close_any_modal\"\n    emitter.on('close_any_modal', () => {\n        // Hide tokens modal\n        showTokensModal.value = false\n\n        // Hide SignTx modal\n        showSignTxModal.value = false\n\n        // Update status\n        store.isAnyModalOpen = false\n    })\n</script>\n\n\n<style scoped>\n    .send\n    {\n        background: #170232;\n    }\n\n\n    .tabs_wrap\n    {\n        margin-bottom: 0;\n    }\n\n\n    .token_wrap\n    {\n        display: block;\n\n        margin-bottom: 20px;\n        padding: 1px;\n\n        text-decoration: none;\n\n        color: currentColor;\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .token\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding-right: 9px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .token .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 55px;\n        height: 55px;\n        margin-right: 8px;\n        padding: 8px;\n\n        border-radius: 11px;\n    }\n\n\n    .token .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .token .denom\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        text-transform: uppercase;\n    }\n\n\n    .token .amount\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .token .amount .cost\n    {\n        font-size: 16px;\n        font-weight: 400;\n\n        color: #836b9e;\n    }\n\n\n    .destination_chain\n    {\n        margin-bottom: 10px;\n    }\n\n\n    .destination_chain .info_wrap,\n    .destination_chain .chain_wrap\n    {\n        padding: 1px;\n\n        border-radius: 12px;\n        background: linear-gradient(to bottom,  #5e33cf 0%,#210750 100%);\n    }\n\n\n    .destination_chain .info\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        height: 46px;\n        padding: 0 15px;\n\n        cursor: pointer;\n\n        border-radius: 11px;\n        background: #06000e;\n    }\n\n\n    .destination_chain .info .placeholder\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        opacity: .6;\n    }\n\n\n    .destination_chain .info .arr\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 16px;\n        bottom: 0;\n\n        display: block;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n\n        transform: rotate(-90deg);\n    }\n\n\n    .destination_chain .chain\n    {\n        position: relative;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n\n        padding: 5px 7px;\n\n        border-radius: 11px;\n        background: radial-gradient(130.57% 114.69% at 50% 0%, rgba(148, 56, 248, .70) 0%, rgba(89, 21, 167, .70) 50.94%, rgba(53, 12, 107, .70) 85.09%);\n    }\n\n\n    .destination_chain .chain .logo\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 44px;\n        height: 44px;\n        margin-right: 8px;\n        padding: 6px;\n\n        border-radius: 50%;\n        background: #950fff;\n    }\n\n\n    .destination_chain .chain .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .destination_chain .chain .logo .icon\n    {\n        display: none;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .destination_chain .chain .logo img.hide\n    {\n        display: none;\n    }\n\n    .destination_chain .chain .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n    .destination_chain .chain .logo + *\n    {\n        width: calc(100% - 100px);\n    }\n\n\n    .destination_chain .chain .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .destination_chain .chain .arr\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 16px;\n        bottom: 0;\n\n        display: block;\n\n        width: 28px;\n        height: 28px;\n        margin: auto 0;\n\n        transform: rotate(-90deg);\n    }\n\n\n\n    .address .input.big\n    {\n        padding-right: 119px;\n    }\n\n\n    .address .paste_btn\n    {\n        font-size: 16px;\n        font-weight: 500;\n\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 54px;\n\n        height: 100%;\n    }\n\n\n\n    .amount_field\n    {\n        margin-top: 10px;\n    }\n\n\n    .amount_field .cost\n    {\n        margin-left: auto;\n\n        color: rgba(255, 255, 255, .70);\n    }\n\n\n\n    .memo_field\n    {\n        margin-top: 10px;\n        margin-bottom: auto;\n        padding-bottom: 40px;\n    }\n\n\n    .field\n    {\n        position: relative;\n\n        padding: 1px;\n\n        border-radius: 10px;\n        background: linear-gradient(to bottom,  #5d33ce 0%,#200750 100%);\n    }\n\n\n    .input\n    {\n        border-radius: 9px;\n        background: #06000e;\n    }\n\n\n    .btns\n    {\n        margin-top: 0;\n        padding: 0;\n    }\n</style>","import script from \"./SendPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SendPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SendPage.vue?vue&type=style&index=0&id=f83c3012&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f83c3012\"]])\n\nexport default __exports__"],"names":["props","__props","emitter","inject","query","ref","setFocusEvent","setTimeout","emit","setBlurEvent","setEnterEvent","value","source","clearField","__exports__","store","useGlobalStore","isCurrentToken","denom","currentToken","searchResult","onBeforeMount","isBalancesGot","balances","watch","computed","on","key","token_info","symbol","toLocaleLowerCase","includes","push","openScanner","Telegram","WebApp","showScanQrPopup","text","chainsList","isCurrentChain","chainID","IBCSendCurrentChain","info","chain_id","setChain","chain","ibc","filter","el","chain_1","chain_name","currentNetwork","index","self","findIndex","t","chain_2","forEach","chains","find","pretty_name","router","useRouter","route","useRoute","i18n","notification","useNotification","activeTab","tab1","tab2","tabs","rollerWidth","rollerOffsetLeft","balance","addressInput","address","amount","memo","showTokensModal","showSignTxModal","showChainsModal","msgAny","isProcess","isAmountReady","isAddressValid","isFormValid","updateData","classList","remove","validateAddress","prefix","data","fromBech32","networks","length","address_length","add","error","setMaxAmount","formatTokenAmount","exponent","validateAmount","pasteFromClipboard","navigator","clipboard","readText","then","clipboardData","notify","group","speed","duration","title","global","type","async","send","TxFee","isRemember","updateTxFeeInfo","txBytes","signTx","clean","isCollapsible","explorer_link","getExplorerLink","sendTx","catch","console","log","showError","errorText","code","currentTxHash","resetTxFee","openTokensModal","openSignTxModal","isAnyModalOpen","openChainsModal","onMounted","onEvent","offsetWidth","offsetLeft","onUnmounted","off","offEvent","typeUrl","fromAddress","currentAddress","toAddress","parseFloat","toString","replace","toFixed","Math","pow"],"sourceRoot":""}