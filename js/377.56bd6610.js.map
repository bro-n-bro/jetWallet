{"version":3,"file":"js/377.56bd6610.js","mappings":"oMAESA,MAAM,e,GAEPC,EAAAA,EAAAA,IAAuC,OAAlCD,MAAM,UAAQ,EAACC,EAAAA,EAAAA,IAAa,a,GAAjCC,G,kCAFJC,EAAAA,EAAAA,IAGM,MAHNC,EAFJC,E,gBCCA,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,gvBCyFI,MAAMC,GAAQC,EAAAA,EAAAA,KACVC,GAASC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAOD,EAAAA,EAAAA,IAAI,IACXE,GAAgBF,EAAAA,EAAAA,IAAI,GACpBG,GAAgBH,EAAAA,EAAAA,IAAI,GACpBI,GAAUJ,EAAAA,EAAAA,IAAI,IACdK,GAAUL,EAAAA,EAAAA,IAAI,IACdM,GAAeN,EAAAA,EAAAA,KAAI,GACnBO,GAAeP,EAAAA,EAAAA,KAAI,GACnBQ,GAAiBR,EAAAA,EAAAA,KAAI,GACrBS,GAAiBT,EAAAA,EAAAA,KAAI,GAgBzB,SAASU,IACL,IAAIC,EAAM,EACNC,EAAMX,EAAKY,MAAMC,MAAM,KAAKC,OAGhCb,EAAcW,MAAQG,KAAKC,MAAMD,KAAKE,UAAYN,EAAMD,EAAM,IAAMA,EAGpE,GACIR,EAAcU,MAAQG,KAAKC,MAAMD,KAAKE,UAAYN,EAAMD,EAAM,IAAMA,QAC/DT,EAAcW,QAAUV,EAAcU,MACnD,CAIA,SAASM,IACLb,EAAaO,OAAQ,EAErBT,EAAQS,MAAMO,sBAAwBnB,EAAKY,MAAMC,MAAM,KAAKZ,EAAcW,MAAQ,GAC5EL,EAAeK,OAAQ,EACvBL,EAAeK,OAAQ,CACjC,CAIA,SAASQ,IACLd,EAAaM,OAAQ,EAErBR,EAAQQ,MAAMO,sBAAwBnB,EAAKY,MAAMC,MAAM,KAAKX,EAAcU,MAAQ,GAC5EJ,EAAeI,OAAQ,EACvBJ,EAAeI,OAAQ,CACjC,CAIAS,eAAeC,IAEXxB,EAAQc,OAAQ,EAGhBhB,EAAO2B,KAAK,cAChB,C,OAtDAC,EAAAA,EAAAA,KAAcH,UAEVrB,EAAKY,YAAclB,EAAM+B,YAGzBhB,IAGAX,EAAQc,OAAQ,CAAK,I,gjDCjH7B,MAAMpB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://cosmos-telegram-signer/./src/components/Loader.vue","webpack://cosmos-telegram-signer/./src/components/Loader.vue?b8fd","webpack://cosmos-telegram-signer/./src/views/ConfirmWalletPage.vue","webpack://cosmos-telegram-signer/./src/views/ConfirmWalletPage.vue?d8b1"],"sourcesContent":["<template>\n    <!-- Loader wrap -->\n    <div class=\"loader_wrap\">\n        <!-- Loader -->\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n        background: rgba(0, 0, 0, .5);\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=7c4ddd1d\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=7c4ddd1d&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <!-- Confirm create wallet page -->\n    <section class=\"page_container confirm_create_wallet_page\">\n        <div class=\"cont\">\n            <!-- Confirm create wallet page title -->\n            <div class=\"page_title\">\n                {{ $t('message.create_wallet_confirm_title') }}\n            </div>\n\n            <!-- Confirm create wallet page data -->\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <!-- Loader -->\n                    <Loader v-if=\"loading\" />\n\n                    <!-- Back button -->\n                    <router-link class=\"back_btn\" to=\"/create_wallet\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                    </router-link>\n\n                    <!-- Confirm data -->\n                    <div class=\"confirm\">\n                        <div class=\"row\">\n                            <!-- Confirm first word -->\n                            <div>\n                                <!-- Confirm word label -->\n                                <div class=\"label\">\n                                    <span>{{ $t('message.confirm_label') }}</span>\n                                    <span>{{ wordOneNumber }}.</span>\n                                </div>\n\n                                <!-- Confirm word field -->\n                                <input type=\"text\" class=\"input\" v-model=\"wordOne\"\n                                    @keyup=\"validateFirstWord()\"\n                                    :class=\"{\n                                        success: validWordOne && isValidWordOne,\n                                        error: validWordOne && !isValidWordOne\n                                    }\">\n                            </div>\n\n                            <!-- Confirm second word -->\n                            <div>\n                                <!-- Confirm word label -->\n                                <div class=\"label\">\n                                    <span>{{ $t('message.confirm_label') }}</span>\n                                    <span>{{ wordTwoNumber }}.</span>\n                                </div>\n\n                                <!-- Confirm word field -->\n                                <input type=\"text\" class=\"input\" v-model=\"wordTwo\"\n                                    @keyup=\"validateSecondWord()\"\n                                    :class=\"{\n                                        success: validWordTwo && isValidWordTwo,\n                                        error: validWordTwo && !isValidWordTwo\n                                    }\">\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Confirm create wallet page image -->\n                    <div class=\"image\">\n                        <div class=\"icon\" :class=\"{\n                            success: (validWordOne && isValidWordOne) && (validWordTwo && isValidWordTwo),\n                            error: (validWordOne && !isValidWordOne) || (validWordTwo && !isValidWordTwo)\n                        }\"></div>\n\n                        <img src=\"@/assets/confirm_wallet_page_img.svg\" alt=\"\" loading=\"lazy\">\n                    </div>\n\n                    <!-- Confirm create wallet page buttons -->\n                    <div class=\"btns\">\n                        <!-- Next button -->\n                        <div class=\"btn\" :class=\"{ disabled: !isValidWordOne || !isValidWordTwo }\" @click.prevent=\"save()\">\n                            <span>{{ $t('message.btn_next') }}</span>\n                        </div>\n                    </div>\n\n                    <!-- Confirm create wallet page text -->\n                    <div class=\"exp\">\n                        {{ $t('message.confirm_exp') }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { useGlobalStore } from '@/store'\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const store = useGlobalStore(),\n        router = useRouter(),\n        loading = ref(true),\n        memo = ref(''),\n        wordOneNumber = ref(0),\n        wordTwoNumber = ref(0),\n        wordOne = ref(''),\n        wordTwo = ref(''),\n        validWordOne = ref(false),\n        validWordTwo = ref(false),\n        isValidWordOne = ref(false),\n        isValidWordTwo = ref(false)\n\n\n    onBeforeMount(async () => {\n        // Get memo\n        memo.value = await store.getSecret()\n\n        // Get random words\n        getRandomWords()\n\n        // Hide loader\n        loading.value = false\n    })\n\n\n    // Get random words\n    function getRandomWords() {\n        let min = 1,\n            max = memo.value.split(' ').length\n\n        // Generate the first random number\n        wordOneNumber.value = Math.floor(Math.random() * (max - min + 1)) + min\n\n        // Generate the second random number\n        do {\n            wordTwoNumber.value = Math.floor(Math.random() * (max - min + 1)) + min\n        } while (wordOneNumber.value === wordTwoNumber.value)\n    }\n\n\n    // Validate first word\n    function validateFirstWord() {\n        validWordOne.value = true\n\n        wordOne.value.toLocaleLowerCase() === memo.value.split(' ')[wordOneNumber.value - 1]\n            ? isValidWordOne.value = true\n            : isValidWordOne.value = false\n    }\n\n\n    // Validate second word\n    function validateSecondWord() {\n        validWordTwo.value = true\n\n        wordTwo.value.toLocaleLowerCase() === memo.value.split(' ')[wordTwoNumber.value - 1]\n            ? isValidWordTwo.value = true\n            : isValidWordTwo.value = false\n    }\n\n\n    // Save\n    async function save() {\n        // Show loader\n        loading.value = true\n\n        // Redirect\n        router.push('/create_pin')\n    }\n</script>\n\n\n<style scoped>\n    .confirm\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        margin-top: 54px;\n        padding: 11px 13px;\n\n        border-radius: 10px;\n        background: #b44ae4;\n    }\n\n\n    .confirm .row\n    {\n        justify-content: space-between;\n    }\n\n\n    .confirm .row > *\n    {\n        display: flex;\n        align-content: center;\n        align-items: center;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n\n        width: calc(50% - 5px);\n    }\n\n\n    .confirm .label\n    {\n        font-size: 12px;\n\n        display: flex;\n        align-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        justify-content: space-between;\n\n        width: 48px;\n    }\n\n\n    .confirm .input\n    {\n        width: calc(100% - 56px);\n    }\n\n\n\n    .image\n    {\n        position: relative;\n\n        width: 173px;\n        max-width: 100%;\n        height: 183px;\n        margin: auto auto 0;\n        padding-top: 24px;\n    }\n\n\n    .image img\n    {\n        display: block;\n\n        max-width: 100%;\n        margin: 0 auto;\n\n        filter: drop-shadow(0px 0px 146.2px 0px rgba(24, 0, 54, .55));\n    }\n\n\n    .image .icon\n    {\n        position: absolute;\n        z-index: 2;\n        right: 19px;\n        bottom: 26px;\n\n        width: 50px;\n        height: 50px;\n\n        transition: opacity .2s linear;\n        pointer-events: none;\n\n        opacity: 0;\n\n        filter: drop-shadow(0px 4px 0px #350393);\n    }\n\n\n    .image .icon.success,\n    .image .icon.error\n    {\n        opacity: 1;\n    }\n\n\n    .image .icon:before,\n    .image .icon:after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 8px;\n        height: 40px;\n        margin: auto;\n\n        content: '';\n        transition: .25s linear;\n\n        border-radius: 4px;\n        background: #bfe3fc;\n    }\n\n\n    .image .icon.success:before\n    {\n        bottom: -10px;\n        left: -24px;\n\n        height: 20px;\n\n        transform: rotate(140deg);\n    }\n\n    .image .icon.success:after\n    {\n        left: 10px;\n\n        transform: rotate(45deg);\n    }\n\n\n    .image .icon.error:before,\n    .image .icon.error:after\n    {\n        background: #ba3030;\n    }\n\n\n    .image .icon.error:before\n    {\n        height: 40px;\n\n        transform: rotate(130deg);\n    }\n\n    .image .icon.error:after\n    {\n        transform: rotate(45deg);\n    }\n\n\n\n    .exp\n    {\n        font-size: 12px;\n\n        margin-top: 6px;\n    }\n\n\n    .input\n    {\n        text-transform: lowercase\n    }\n</style>\n\n\n","import script from \"./ConfirmWalletPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConfirmWalletPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ConfirmWalletPage.vue?vue&type=style&index=0&id=83a339ac&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-83a339ac\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","store","useGlobalStore","router","useRouter","loading","ref","memo","wordOneNumber","wordTwoNumber","wordOne","wordTwo","validWordOne","validWordTwo","isValidWordOne","isValidWordTwo","getRandomWords","min","max","value","split","length","Math","floor","random","validateFirstWord","toLocaleLowerCase","validateSecondWord","async","save","push","onBeforeMount","getSecret"],"sourceRoot":""}